{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/platform-browser')) : typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/platform-browser'], factory) : factory(global['ngx-gallery'] = {}, global.core, global.common, global.platformBrowser);\n})(this, function (exports, core, common, platformBrowser) {\n  'use strict';\n\n  var NgxGalleryActionComponent =\n  /** @class */\n  function () {\n    function NgxGalleryActionComponent() {\n      this.disabled = false;\n      this.titleText = '';\n      this.onClick = new core.EventEmitter();\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryActionComponent.prototype.handleClick = function (event) {\n      if (!this.disabled) {\n        this.onClick.emit(event);\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n    };\n\n    NgxGalleryActionComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-action',\n        template: \"\\n        <div class=\\\"ngx-gallery-icon\\\" [class.ngx-gallery-icon-disabled]=\\\"disabled\\\"\\n            aria-hidden=\\\"true\\\"\\n            title=\\\"{{ titleText }}\\\"\\n            (click)=\\\"handleClick($event)\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{ icon }}\\\"></i>\\n        </div>\",\n        changeDetection: core.ChangeDetectionStrategy.OnPush\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryActionComponent.ctorParameters = function () {\n      return [];\n    };\n\n    NgxGalleryActionComponent.propDecorators = {\n      'icon': [{\n        type: core.Input\n      }],\n      'disabled': [{\n        type: core.Input\n      }],\n      'titleText': [{\n        type: core.Input\n      }],\n      'onClick': [{\n        type: core.Output\n      }]\n    };\n    return NgxGalleryActionComponent;\n  }();\n\n  var NgxGalleryArrowsComponent =\n  /** @class */\n  function () {\n    function NgxGalleryArrowsComponent() {\n      this.onPrevClick = new core.EventEmitter();\n      this.onNextClick = new core.EventEmitter();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryArrowsComponent.prototype.handlePrevClick = function () {\n      this.onPrevClick.emit();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryArrowsComponent.prototype.handleNextClick = function () {\n      this.onNextClick.emit();\n    };\n\n    NgxGalleryArrowsComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-arrows',\n        template: \"\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handlePrevClick()\\\" [class.ngx-gallery-disabled]=\\\"prevDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowPrevIcon}}\\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handleNextClick()\\\" [class.ngx-gallery-disabled]=\\\"nextDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowNextIcon}}\\\"></i>\\n            </div>\\n        </div>\\n    \",\n        styles: [\".ngx-gallery-arrow-wrapper { position: absolute; height: 100%; width: 1px; display: table; z-index: 2000; table-layout: fixed; } .ngx-gallery-arrow-left { left: 0px; } .ngx-gallery-arrow-right { right: 0px; } .ngx-gallery-arrow { top: 50%; transform: translateY(-50%); cursor: pointer; } .ngx-gallery-arrow.ngx-gallery-disabled { opacity: 0.6; cursor: default; } .ngx-gallery-arrow-left .ngx-gallery-arrow { left: 10px; } .ngx-gallery-arrow-right .ngx-gallery-arrow { right: 10px; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryArrowsComponent.ctorParameters = function () {\n      return [];\n    };\n\n    NgxGalleryArrowsComponent.propDecorators = {\n      'prevDisabled': [{\n        type: core.Input\n      }],\n      'nextDisabled': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'onPrevClick': [{\n        type: core.Output\n      }],\n      'onNextClick': [{\n        type: core.Output\n      }]\n    };\n    return NgxGalleryArrowsComponent;\n  }();\n\n  var NgxGalleryHelperService =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} renderer\r\n     */\n    function NgxGalleryHelperService(renderer) {\n      this.renderer = renderer;\n      this.swipeHandlers = new Map();\n    }\n    /**\r\n     * @param {?} status\r\n     * @param {?} element\r\n     * @param {?} id\r\n     * @param {?} nextHandler\r\n     * @param {?} prevHandler\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.manageSwipe = function (status, element, id, nextHandler, prevHandler) {\n      var\n      /** @type {?} */\n      handlers = this.getSwipeHandlers(id); // swipeleft and swiperight are available only if hammerjs is included\n\n      try {\n        if (status && !handlers) {\n          this.swipeHandlers.set(id, [this.renderer.listen(element.nativeElement, 'swipeleft', function () {\n            return nextHandler();\n          }), this.renderer.listen(element.nativeElement, 'swiperight', function () {\n            return prevHandler();\n          })]);\n        } else if (!status && handlers) {\n          handlers.map(function (handler) {\n            return handler();\n          });\n          this.removeSwipeHandlers(id);\n        }\n      } catch (e) {}\n    };\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.validateUrl = function (url) {\n      if (url.replace) {\n        return url.replace(new RegExp(' ', 'g'), '%20');\n      } else {\n        return url;\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.getBackgroundUrl = function (image) {\n      return 'url(\\'' + this.validateUrl(image) + '\\')';\n    };\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.getSwipeHandlers = function (id) {\n      return this.swipeHandlers.get(id);\n    };\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.removeSwipeHandlers = function (id) {\n      this.swipeHandlers.delete(id);\n    };\n\n    NgxGalleryHelperService.decorators = [{\n      type: core.Injectable\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryHelperService.ctorParameters = function () {\n      return [{\n        type: core.Renderer\n      }];\n    };\n\n    return NgxGalleryHelperService;\n  }();\n\n  var NgxGalleryAnimation =\n  /** @class */\n  function () {\n    function NgxGalleryAnimation() {}\n\n    NgxGalleryAnimation.Fade = 'fade';\n    NgxGalleryAnimation.Slide = 'slide';\n    NgxGalleryAnimation.Rotate = 'rotate';\n    NgxGalleryAnimation.Zoom = 'zoom';\n    return NgxGalleryAnimation;\n  }();\n\n  var NgxGalleryImageComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\n    function NgxGalleryImageComponent(sanitization, elementRef, helperService) {\n      this.sanitization = sanitization;\n      this.elementRef = elementRef;\n      this.helperService = helperService;\n      this.onClick = new core.EventEmitter();\n      this.onActiveChange = new core.EventEmitter();\n      this.canChangeImage = true;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.ngOnInit = function () {\n      if (this.arrows && this.arrowsAutoHide) {\n        this.arrows = false;\n      }\n\n      if (this.autoPlay) {\n        this.startAutoPlay();\n      }\n    };\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.ngOnChanges = function (changes) {\n      var _this = this;\n\n      if (changes['swipe']) {\n        this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', function () {\n          return _this.showNext();\n        }, function () {\n          return _this.showPrev();\n        });\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.onMouseEnter = function () {\n      if (this.arrowsAutoHide && !this.arrows) {\n        this.arrows = true;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.stopAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.onMouseLeave = function () {\n      if (this.arrowsAutoHide && this.arrows) {\n        this.arrows = false;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.startAutoPlay();\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.reset = function (index) {\n      this.selectedIndex = index;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.getImages = function () {\n      if (this.lazyLoading) {\n        var\n        /** @type {?} */\n        indexes_1 = [this.selectedIndex];\n        var\n        /** @type {?} */\n        prevIndex = this.selectedIndex - 1;\n\n        if (prevIndex === -1 && this.infinityMove) {\n          indexes_1.push(this.images.length - 1);\n        } else if (prevIndex >= 0) {\n          indexes_1.push(prevIndex);\n        }\n\n        var\n        /** @type {?} */\n        nextIndex = this.selectedIndex + 1;\n\n        if (nextIndex == this.images.length && this.infinityMove) {\n          indexes_1.push(0);\n        } else if (nextIndex < this.images.length) {\n          indexes_1.push(nextIndex);\n        }\n\n        return this.images.filter(function (img, i) {\n          return indexes_1.indexOf(i) != -1;\n        });\n      } else {\n        return this.images;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.startAutoPlay = function () {\n      var _this = this;\n\n      this.stopAutoPlay();\n      this.timer = setInterval(function () {\n        if (!_this.showNext()) {\n          _this.selectedIndex = -1;\n\n          _this.showNext();\n        }\n      }, this.autoPlayInterval);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.stopAutoPlay = function () {\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n    };\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.handleClick = function (event, index) {\n      if (this.clickable) {\n        this.onClick.emit(index);\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.showNext = function () {\n      if (this.canShowNext() && this.canChangeImage) {\n        this.selectedIndex++;\n\n        if (this.selectedIndex === this.images.length) {\n          this.selectedIndex = 0;\n        }\n\n        this.onActiveChange.emit(this.selectedIndex);\n        this.setChangeTimeout();\n        return true;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.showPrev = function () {\n      if (this.canShowPrev() && this.canChangeImage) {\n        this.selectedIndex--;\n\n        if (this.selectedIndex < 0) {\n          this.selectedIndex = this.images.length - 1;\n        }\n\n        this.onActiveChange.emit(this.selectedIndex);\n        this.setChangeTimeout();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.setChangeTimeout = function () {\n      var _this = this;\n\n      this.canChangeImage = false;\n      var\n      /** @type {?} */\n      timeout = 1000;\n\n      if (this.animation === NgxGalleryAnimation.Slide || this.animation === NgxGalleryAnimation.Fade) {\n        timeout = 500;\n      }\n\n      setTimeout(function () {\n        _this.canChangeImage = true;\n      }, timeout);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.canShowNext = function () {\n      if (this.images) {\n        return this.infinityMove || this.selectedIndex < this.images.length - 1 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.canShowPrev = function () {\n      if (this.images) {\n        return this.infinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.getSafeUrl = function (image) {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    };\n\n    NgxGalleryImageComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-image',\n        template: \"\\n        <div class=\\\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\\\">\\n            <div class=\\\"ngx-gallery-image\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [ngClass]=\\\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\\\" [style.background-image]=\\\"getSafeUrl(image.src)\\\" (click)=\\\"handleClick($event, image.index)\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, image.index)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-image-text\\\" *ngIf=\\\"showDescription && descriptions[image.index]\\\" [innerHTML]=\\\"descriptions[image.index]\\\"></div>\\n            </div>\\n        </div>\\n        <ngx-gallery-arrows class=\\\"ngx-gallery-image-size-{{size}}\\\" *ngIf=\\\"arrows\\\" (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\n        styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-image-wrapper { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; overflow: hidden; } .ngx-gallery-image { background-position: center; background-repeat: no-repeat; height: 100%; width: 100%; position: absolute; top: 0px; } .ngx-gallery-image.ngx-gallery-active { z-index: 1000; } .ngx-gallery-image-size-cover .ngx-gallery-image { background-size: cover; } .ngx-gallery-image-size-contain .ngx-gallery-image { background-size: contain; } .ngx-gallery-animation-fade .ngx-gallery-image { left: 0px; opacity: 0; transition: 0.5s ease-in-out; } .ngx-gallery-animation-fade .ngx-gallery-image.ngx-gallery-active { opacity: 1; } .ngx-gallery-animation-slide .ngx-gallery-image { transition: 0.5s ease-in-out; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-active { left: 0px; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-left { left: -100%; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-right { left: 100%; } .ngx-gallery-animation-rotate .ngx-gallery-image { transition: 1s ease; transform: scale(3.5, 3.5) rotate(90deg); left: 0px; opacity: 0; } .ngx-gallery-animation-rotate .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1) rotate(0deg); opacity: 1; } .ngx-gallery-animation-zoom .ngx-gallery-image { transition: 1s ease; transform: scale(2.5, 2.5); left: 0px; opacity: 0; } .ngx-gallery-animation-zoom .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1); opacity: 1; } .ngx-gallery-image-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; position: absolute; bottom: 0px; z-index: 10; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryImageComponent.ctorParameters = function () {\n      return [{\n        type: platformBrowser.DomSanitizer\n      }, {\n        type: core.ElementRef\n      }, {\n        type: NgxGalleryHelperService\n      }];\n    };\n\n    NgxGalleryImageComponent.propDecorators = {\n      'images': [{\n        type: core.Input\n      }],\n      'clickable': [{\n        type: core.Input\n      }],\n      'selectedIndex': [{\n        type: core.Input\n      }],\n      'arrows': [{\n        type: core.Input\n      }],\n      'arrowsAutoHide': [{\n        type: core.Input\n      }],\n      'swipe': [{\n        type: core.Input\n      }],\n      'animation': [{\n        type: core.Input\n      }],\n      'size': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'autoPlay': [{\n        type: core.Input\n      }],\n      'autoPlayInterval': [{\n        type: core.Input\n      }],\n      'autoPlayPauseOnHover': [{\n        type: core.Input\n      }],\n      'infinityMove': [{\n        type: core.Input\n      }],\n      'lazyLoading': [{\n        type: core.Input\n      }],\n      'actions': [{\n        type: core.Input\n      }],\n      'descriptions': [{\n        type: core.Input\n      }],\n      'showDescription': [{\n        type: core.Input\n      }],\n      'onClick': [{\n        type: core.Output\n      }],\n      'onActiveChange': [{\n        type: core.Output\n      }],\n      'onMouseEnter': [{\n        type: core.HostListener,\n        args: ['mouseenter']\n      }],\n      'onMouseLeave': [{\n        type: core.HostListener,\n        args: ['mouseleave']\n      }]\n    };\n    return NgxGalleryImageComponent;\n  }();\n\n  var NgxGalleryOrder =\n  /** @class */\n  function () {\n    function NgxGalleryOrder() {}\n\n    NgxGalleryOrder.Column = 1;\n    NgxGalleryOrder.Row = 2;\n    return NgxGalleryOrder;\n  }();\n\n  var NgxGalleryThumbnailsComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\n    function NgxGalleryThumbnailsComponent(sanitization, elementRef, helperService) {\n      this.sanitization = sanitization;\n      this.elementRef = elementRef;\n      this.helperService = helperService;\n      this.minStopIndex = 0;\n      this.onActiveChange = new core.EventEmitter();\n      this.index = 0;\n    }\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.ngOnChanges = function (changes) {\n      var _this = this;\n\n      if (changes['selectedIndex']) {\n        this.validateIndex();\n      }\n\n      if (changes['swipe']) {\n        this.helperService.manageSwipe(this.swipe, this.elementRef, 'thumbnails', function () {\n          return _this.moveRight();\n        }, function () {\n          return _this.moveLeft();\n        });\n      }\n\n      if (this.images) {\n        this.remainingCountValue = this.images.length - this.columns;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.onMouseEnter = function () {\n      this.mouseenter = true;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.onMouseLeave = function () {\n      this.mouseenter = false;\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.reset = function (index) {\n      this.selectedIndex = index;\n      this.setDefaultPosition();\n      this.index = 0;\n      this.validateIndex();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getImages = function () {\n      if (this.remainingCount) {\n        return this.images.slice(0, this.columns);\n      } else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n        var\n        /** @type {?} */\n        stopIndex = this.index + this.columns + this.moveSize;\n\n        if (this.rows > 1 && this.order === NgxGalleryOrder.Column) {\n          stopIndex = stopIndex * this.rows;\n        }\n\n        if (stopIndex <= this.minStopIndex) {\n          stopIndex = this.minStopIndex;\n        } else {\n          this.minStopIndex = stopIndex;\n        }\n\n        return this.images.slice(0, stopIndex);\n      } else {\n        return this.images;\n      }\n    };\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.handleClick = function (event, index) {\n      if (!this.hasLinks()) {\n        this.selectedIndex = index;\n        this.onActiveChange.emit(index);\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.hasLinks = function () {\n      if (this.links && this.links.length) return true;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.moveRight = function () {\n      if (this.canMoveRight()) {\n        this.index += this.moveSize;\n        var\n        /** @type {?} */\n        maxIndex = this.getMaxIndex() - this.columns;\n\n        if (this.index > maxIndex) {\n          this.index = maxIndex;\n        }\n\n        this.setThumbnailsPosition();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.moveLeft = function () {\n      if (this.canMoveLeft()) {\n        this.index -= this.moveSize;\n\n        if (this.index < 0) {\n          this.index = 0;\n        }\n\n        this.setThumbnailsPosition();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.canMoveRight = function () {\n      return this.index + this.columns < this.getMaxIndex() ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.canMoveLeft = function () {\n      return this.index !== 0 ? true : false;\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailLeft = function (index) {\n      var\n      /** @type {?} */\n      calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        calculatedIndex = Math.floor(index / this.rows);\n      } else {\n        calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.columns);\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailTop = function (index) {\n      var\n      /** @type {?} */\n      calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        calculatedIndex = index % this.rows;\n      } else {\n        calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.rows);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailWidth = function () {\n      return this.getThumbnailDimension(this.columns);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailHeight = function () {\n      return this.getThumbnailDimension(this.rows);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.setThumbnailsPosition = function () {\n      this.thumbnailsLeft = -(100 / this.columns * this.index) + '%';\n      this.thumbnailsMarginLeft = -((this.margin - (this.columns - 1) * this.margin / this.columns) * this.index) + 'px';\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.setDefaultPosition = function () {\n      this.thumbnailsLeft = '0px';\n      this.thumbnailsMarginLeft = '0px';\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.canShowArrows = function () {\n      if (this.remainingCount) {\n        return false;\n      } else if (this.arrows && this.images && this.images.length > this.getVisibleCount() && (!this.arrowsAutoHide || this.mouseenter)) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.validateIndex = function () {\n      var\n      /** @type {?} */\n      newIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        newIndex = Math.floor(this.selectedIndex / this.rows);\n      } else {\n        newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n      }\n\n      if (this.remainingCount) {\n        newIndex = 0;\n      }\n\n      if (newIndex < this.index || newIndex >= this.index + this.columns) {\n        var\n        /** @type {?} */\n        maxIndex = this.getMaxIndex() - this.columns;\n        this.index = newIndex > maxIndex ? maxIndex : newIndex;\n        this.setThumbnailsPosition();\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getSafeUrl = function (image) {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    };\n    /**\r\n     * @param {?} index\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailPosition = function (index, count) {\n      return this.getSafeStyle('calc(' + 100 / count * index + '% + ' + (this.margin - (count - 1) * this.margin / count) * index + 'px)');\n    };\n    /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailDimension = function (count) {\n      if (this.margin !== 0) {\n        return this.getSafeStyle('calc(' + 100 / count + '% - ' + (count - 1) * this.margin / count + 'px)');\n      } else {\n        return this.getSafeStyle('calc(' + 100 / count + '% + 1px)');\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getMaxIndex = function () {\n      return Math.ceil(this.images.length / this.rows);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getVisibleCount = function () {\n      return this.columns * this.rows;\n    };\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getSafeStyle = function (value) {\n      return this.sanitization.bypassSecurityTrustStyle(value);\n    };\n\n    NgxGalleryThumbnailsComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-thumbnails',\n        template: \"\\n    <div class=\\\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\\\">\\n        <div class=\\\"ngx-gallery-thumbnails\\\" [style.left]=\\\"thumbnailsLeft\\\" [style.marginLeft]=\\\"thumbnailsMarginLeft\\\">\\n            <a [href]=\\\"hasLinks() ? links[i] : '#'\\\" [target]=\\\"linkTarget\\\" class=\\\"ngx-gallery-thumbnail\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [style.background-image]=\\\"getSafeUrl(image)\\\" (click)=\\\"handleClick($event, i)\\\" [style.width]=\\\"getThumbnailWidth()\\\" [style.height]=\\\"getThumbnailHeight()\\\" [style.left]=\\\"getThumbnailLeft(i)\\\" [style.top]=\\\"getThumbnailTop(i)\\\" [ngClass]=\\\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, i)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-remaining-count-overlay\\\" *ngIf=\\\"remainingCount && remainingCountValue && (i == columns - 1)\\\">\\n                    <span class=\\\"ngx-gallery-remaining-count\\\">+{{remainingCountValue}}</span>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n    <ngx-gallery-arrows *ngIf=\\\"canShowArrows()\\\" (onPrevClick)=\\\"moveLeft()\\\" (onNextClick)=\\\"moveRight()\\\" [prevDisabled]=\\\"!canMoveLeft()\\\" [nextDisabled]=\\\"!canMoveRight()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\n        styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-thumbnails-wrapper { width: 100%; height: 100%; position: absolute; overflow: hidden; } .ngx-gallery-thumbnails { height: 100%; width: 100%; position: absolute; left: 0px; transition: left 0.5s ease-in-out; } .ngx-gallery-thumbnails .ngx-gallery-thumbnail { position: absolute; height: 100%; background-position: center; background-repeat: no-repeat; text-decoration: none; } .ngx-gallery-thumbnail-size-cover .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: cover; } .ngx-gallery-thumbnail-size-contain .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: contain; } .ngx-gallery-remaining-count-overlay { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; background-color: rgba(0, 0, 0, 0.4); } .ngx-gallery-remaining-count { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 30px; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryThumbnailsComponent.ctorParameters = function () {\n      return [{\n        type: platformBrowser.DomSanitizer\n      }, {\n        type: core.ElementRef\n      }, {\n        type: NgxGalleryHelperService\n      }];\n    };\n\n    NgxGalleryThumbnailsComponent.propDecorators = {\n      'images': [{\n        type: core.Input\n      }],\n      'links': [{\n        type: core.Input\n      }],\n      'linkTarget': [{\n        type: core.Input\n      }],\n      'columns': [{\n        type: core.Input\n      }],\n      'rows': [{\n        type: core.Input\n      }],\n      'arrows': [{\n        type: core.Input\n      }],\n      'arrowsAutoHide': [{\n        type: core.Input\n      }],\n      'margin': [{\n        type: core.Input\n      }],\n      'selectedIndex': [{\n        type: core.Input\n      }],\n      'clickable': [{\n        type: core.Input\n      }],\n      'swipe': [{\n        type: core.Input\n      }],\n      'size': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'moveSize': [{\n        type: core.Input\n      }],\n      'order': [{\n        type: core.Input\n      }],\n      'remainingCount': [{\n        type: core.Input\n      }],\n      'lazyLoading': [{\n        type: core.Input\n      }],\n      'actions': [{\n        type: core.Input\n      }],\n      'onActiveChange': [{\n        type: core.Output\n      }],\n      'onMouseEnter': [{\n        type: core.HostListener,\n        args: ['mouseenter']\n      }],\n      'onMouseLeave': [{\n        type: core.HostListener,\n        args: ['mouseleave']\n      }]\n    };\n    return NgxGalleryThumbnailsComponent;\n  }();\n\n  var NgxGalleryPreviewComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\n    function NgxGalleryPreviewComponent(sanitization, elementRef, helperService) {\n      this.sanitization = sanitization;\n      this.elementRef = elementRef;\n      this.helperService = helperService;\n      this.showSpinner = false;\n      this.positionLeft = 0;\n      this.positionTop = 0;\n      this.zoomValue = 1;\n      this.loading = false;\n      this.rotateValue = 0;\n      this.onOpen = new core.EventEmitter();\n      this.onClose = new core.EventEmitter();\n      this.onActiveChange = new core.EventEmitter();\n      this.index = 0;\n      this.isOpen = false;\n      this.initialX = 0;\n      this.initialY = 0;\n      this.initialLeft = 0;\n      this.initialTop = 0;\n      this.isMove = false;\n    }\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.ngOnChanges = function (changes) {\n      var _this = this;\n\n      if (changes['swipe']) {\n        this.helperService.manageSwipe(this.swipe, this.elementRef, 'preview', function () {\n          return _this.showNext();\n        }, function () {\n          return _this.showPrev();\n        });\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.onKeyDown = function (e) {\n      if (this.isOpen) {\n        if (this.keyboardNavigation) {\n          if (this.isKeyboardPrev(e)) {\n            this.showPrev();\n          } else if (this.isKeyboardNext(e)) {\n            this.showNext();\n          }\n        }\n\n        if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n          this.close();\n        }\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.open = function (index) {\n      this.onOpen.emit();\n      this.index = index;\n      this.isOpen = true;\n      this.show(true);\n\n      if (this.forceFullscreen) {\n        this.manageFullscreen();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.close = function () {\n      this.isOpen = false;\n      this.closeFullscreen();\n      this.onClose.emit();\n      this.stopAutoPlay();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.imageMouseEnter = function () {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.stopAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.imageMouseLeave = function () {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.startAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.startAutoPlay = function () {\n      var _this = this;\n\n      if (this.autoPlay) {\n        this.stopAutoPlay();\n        this.timer = setTimeout(function () {\n          if (!_this.showNext()) {\n            _this.index = -1;\n\n            _this.showNext();\n          }\n        }, this.autoPlayInterval);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.stopAutoPlay = function () {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.showNext = function () {\n      if (this.canShowNext()) {\n        this.index++;\n\n        if (this.index === this.images.length) {\n          this.index = 0;\n        }\n\n        this.show();\n        return true;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.showPrev = function () {\n      if (this.canShowPrev()) {\n        this.index--;\n\n        if (this.index < 0) {\n          this.index = this.images.length - 1;\n        }\n\n        this.show();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canShowNext = function () {\n      if (this.loading) {\n        return false;\n      } else if (this.images) {\n        return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canShowPrev = function () {\n      if (this.loading) {\n        return false;\n      } else if (this.images) {\n        return this.infinityMove || this.index > 0 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.manageFullscreen = function () {\n      if (this.fullscreen || this.forceFullscreen) {\n        var\n        /** @type {?} */\n        doc = document;\n\n        if (!doc.fullscreenElement && !doc.mozFullScreenElement && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n          this.openFullscreen();\n        } else {\n          this.closeFullscreen();\n        }\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getSafeUrl = function (image) {\n      return image.substr(0, 10) === 'data:image' ? image : this.sanitization.bypassSecurityTrustUrl(image);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.zoomIn = function () {\n      if (this.canZoomIn()) {\n        this.zoomValue += this.zoomStep;\n\n        if (this.zoomValue > this.zoomMax) {\n          this.zoomValue = this.zoomMax;\n        }\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.zoomOut = function () {\n      if (this.canZoomOut()) {\n        this.zoomValue -= this.zoomStep;\n\n        if (this.zoomValue < this.zoomMin) {\n          this.zoomValue = this.zoomMin;\n        }\n\n        if (this.zoomValue <= 1) {\n          this.resetPosition();\n        }\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.rotateLeft = function () {\n      this.rotateValue -= 90;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.rotateRight = function () {\n      this.rotateValue += 90;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getTransform = function () {\n      return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canZoomIn = function () {\n      return this.zoomValue < this.zoomMax ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canZoomOut = function () {\n      return this.zoomValue > this.zoomMin ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canDragOnZoom = function () {\n      return this.zoom && this.zoomValue > 1;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.mouseDownHandler = function (e) {\n      if (this.canDragOnZoom()) {\n        this.initialX = this.getClientX(e);\n        this.initialY = this.getClientY(e);\n        this.initialLeft = this.positionLeft;\n        this.initialTop = this.positionTop;\n        this.isMove = true;\n        e.preventDefault();\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.mouseUpHandler = function (e) {\n      this.isMove = false;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.mouseMoveHandler = function (e) {\n      if (this.isMove) {\n        this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n        this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getClientX = function (e) {\n      return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getClientY = function (e) {\n      return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.resetPosition = function () {\n      if (this.zoom) {\n        this.positionLeft = 0;\n        this.positionTop = 0;\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isKeyboardNext = function (e) {\n      return e.keyCode === 39 ? true : false;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isKeyboardPrev = function (e) {\n      return e.keyCode === 37 ? true : false;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isKeyboardEsc = function (e) {\n      return e.keyCode === 27 ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.openFullscreen = function () {\n      var\n      /** @type {?} */\n      element = document.documentElement;\n\n      if (element.requestFullscreen) {\n        element.requestFullscreen();\n      } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n      } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n      } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.closeFullscreen = function () {\n      var\n      /** @type {?} */\n      doc = document;\n\n      if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n      } else if (doc.msExitFullscreen) {\n        doc.msExitFullscreen();\n      } else if (doc.mozCancelFullScreen) {\n        doc.mozCancelFullScreen();\n      } else if (doc.webkitExitFullscreen) {\n        doc.webkitExitFullscreen();\n      }\n    };\n    /**\r\n     * @param {?=} first\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.show = function (first) {\n      var _this = this;\n\n      if (first === void 0) {\n        first = false;\n      }\n\n      this.loading = true;\n      this.stopAutoPlay();\n      this.onActiveChange.emit(this.index);\n\n      if (first || !this.animation) {\n        this._show();\n      } else {\n        setTimeout(function () {\n          return _this._show();\n        }, 600);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype._show = function () {\n      var _this = this;\n\n      this.zoomValue = 1;\n      this.rotateValue = 0;\n      this.resetPosition();\n      this.src = this.getSafeUrl(\n      /** @type {?} */\n      this.images[this.index]);\n      this.srcIndex = this.index;\n      this.description = this.descriptions[this.index];\n      setTimeout(function () {\n        if (_this.isLoaded(_this.previewImage.nativeElement)) {\n          _this.loading = false;\n\n          _this.startAutoPlay();\n        } else {\n          setTimeout(function () {\n            if (_this.loading) {\n              _this.showSpinner = true;\n            }\n          });\n\n          _this.previewImage.nativeElement.onload = function () {\n            _this.loading = false;\n            _this.showSpinner = false;\n            _this.previewImage.nativeElement.onload = null;\n\n            _this.startAutoPlay();\n          };\n        }\n      });\n    };\n    /**\r\n     * @param {?} img\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isLoaded = function (img) {\n      if (!img.complete) {\n        return false;\n      }\n\n      if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n        return false;\n      }\n\n      return true;\n    };\n\n    NgxGalleryPreviewComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-preview',\n        template: \"\\n        <ngx-gallery-arrows (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n        <div class=\\\"ngx-gallery-preview-top\\\">\\n            <div class=\\\"ngx-gallery-preview-icons\\\">\\n                <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event)\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomOutIcon\\\" [disabled]=\\\"!canZoomOut()\\\" (onClick)=\\\"zoomOut()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomInIcon\\\" [disabled]=\\\"!canZoomIn()\\\" (onClick)=\\\"zoomIn()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateLeftIcon\\\" (onClick)=\\\"rotateLeft()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateRightIcon\\\" (onClick)=\\\"rotateRight()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"fullscreen\\\" [icon]=\\\"'ngx-gallery-fullscreen ' + fullscreenIcon\\\" (onClick)=\\\"manageFullscreen()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action [icon]=\\\"'ngx-gallery-close ' + closeIcon\\\" (onClick)=\\\"close()\\\"></ngx-gallery-action>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-spinner-wrapper ngx-gallery-center\\\" [class.ngx-gallery-active]=\\\"showSpinner\\\">\\n            <i class=\\\"ngx-gallery-icon ngx-gallery-spinner {{spinnerIcon}}\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n        <div class=\\\"ngx-gallery-preview-wrapper\\\" (click)=\\\"closeOnClick && close()\\\" (mouseup)=\\\"mouseUpHandler($event)\\\" (mousemove)=\\\"mouseMoveHandler($event)\\\" (touchend)=\\\"mouseUpHandler($event)\\\" (touchmove)=\\\"mouseMoveHandler($event)\\\">\\n            <div class=\\\"ngx-gallery-preview-img-wrapper\\\">\\n                <img *ngIf=\\\"src\\\" #previewImage class=\\\"ngx-gallery-preview-img ngx-gallery-center\\\" [src]=\\\"src\\\" (click)=\\\"$event.stopPropagation()\\\" (mouseenter)=\\\"imageMouseEnter()\\\" (mouseleave)=\\\"imageMouseLeave()\\\" (mousedown)=\\\"mouseDownHandler($event)\\\" (touchstart)=\\\"mouseDownHandler($event)\\\" [class.ngx-gallery-active]=\\\"!loading\\\" [class.animation]=\\\"animation\\\" [class.ngx-gallery-grab]=\\\"canDragOnZoom()\\\" [style.transform]=\\\"getTransform()\\\" [style.left]=\\\"positionLeft + 'px'\\\" [style.top]=\\\"positionTop + 'px'\\\"/>\\n            </div>\\n            <div class=\\\"ngx-gallery-preview-text\\\" *ngIf=\\\"showDescription && description\\\" [innerHTML]=\\\"description\\\"></div>\\n        </div>\\n    \",\n        styles: [\":host(.ngx-gallery-active) { width: 100%; height: 100%; position: fixed; left: 0; top: 0; background: rgba(0, 0, 0, 0.7); z-index: 10000; display: inline-block; } :host { display: none; } :host /deep/ .ngx-gallery-arrow { font-size: 50px; } .ngx-gallery-preview-img { opacity: 0; max-width: 90%; max-height: 90%; user-select: none; transition: transform .5s; } .ngx-gallery-preview-img.animation { transition: opacity 0.5s linear, transform .5s; } .ngx-gallery-preview-img.ngx-gallery-active { opacity: 1; } .ngx-gallery-preview-img.ngx-gallery-grab { cursor: grab; cursor: -webkit-grab; } .ngx-gallery-icon.ngx-gallery-spinner { font-size: 50px; left: 0; display: inline-block; } :host /deep/ .ngx-gallery-preview-top { position: absolute; width: 100%; user-select: none; } :host /deep/ .ngx-gallery-preview-icons { float: right; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon { position: relative; margin-right: 10px; margin-top: 10px; font-size: 25px; cursor: pointer; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon.ngx-gallery-icon-disabled { cursor: default; opacity: 0.4; } .ngx-spinner-wrapper { width: 50px; height: 50px; display: none; } .ngx-spinner-wrapper.ngx-gallery-active { display: inline-block; } .ngx-gallery-center { position: absolute; left: 0; right: 0; bottom: 0; margin: auto; top: 0; } .ngx-gallery-preview-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; flex: 0 1 auto; z-index: 10; } .ngx-gallery-preview-wrapper { width: 100%; height: 100%; display: flex; flex-flow: column; } .ngx-gallery-preview-img-wrapper { flex: 1 1 auto; position: relative; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryPreviewComponent.ctorParameters = function () {\n      return [{\n        type: platformBrowser.DomSanitizer\n      }, {\n        type: core.ElementRef\n      }, {\n        type: NgxGalleryHelperService\n      }];\n    };\n\n    NgxGalleryPreviewComponent.propDecorators = {\n      'images': [{\n        type: core.Input\n      }],\n      'descriptions': [{\n        type: core.Input\n      }],\n      'showDescription': [{\n        type: core.Input\n      }],\n      'swipe': [{\n        type: core.Input\n      }],\n      'fullscreen': [{\n        type: core.Input\n      }],\n      'forceFullscreen': [{\n        type: core.Input\n      }],\n      'closeOnClick': [{\n        type: core.Input\n      }],\n      'closeOnEsc': [{\n        type: core.Input\n      }],\n      'keyboardNavigation': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'closeIcon': [{\n        type: core.Input\n      }],\n      'fullscreenIcon': [{\n        type: core.Input\n      }],\n      'spinnerIcon': [{\n        type: core.Input\n      }],\n      'autoPlay': [{\n        type: core.Input\n      }],\n      'autoPlayInterval': [{\n        type: core.Input\n      }],\n      'autoPlayPauseOnHover': [{\n        type: core.Input\n      }],\n      'infinityMove': [{\n        type: core.Input\n      }],\n      'zoom': [{\n        type: core.Input\n      }],\n      'zoomStep': [{\n        type: core.Input\n      }],\n      'zoomMax': [{\n        type: core.Input\n      }],\n      'zoomMin': [{\n        type: core.Input\n      }],\n      'zoomInIcon': [{\n        type: core.Input\n      }],\n      'zoomOutIcon': [{\n        type: core.Input\n      }],\n      'animation': [{\n        type: core.Input\n      }],\n      'actions': [{\n        type: core.Input\n      }],\n      'rotate': [{\n        type: core.Input\n      }],\n      'rotateLeftIcon': [{\n        type: core.Input\n      }],\n      'rotateRightIcon': [{\n        type: core.Input\n      }],\n      'onOpen': [{\n        type: core.Output\n      }],\n      'onClose': [{\n        type: core.Output\n      }],\n      'onActiveChange': [{\n        type: core.Output\n      }],\n      'previewImage': [{\n        type: core.ViewChild,\n        args: ['previewImage']\n      }],\n      'onKeyDown': [{\n        type: core.HostListener,\n        args: ['window:keydown', ['$event']]\n      }]\n    };\n    return NgxGalleryPreviewComponent;\n  }();\n\n  var NgxGalleryImageSize =\n  /** @class */\n  function () {\n    function NgxGalleryImageSize() {}\n\n    NgxGalleryImageSize.Cover = 'cover';\n    NgxGalleryImageSize.Contain = 'contain';\n    return NgxGalleryImageSize;\n  }();\n\n  var NgxGalleryLayout =\n  /** @class */\n  function () {\n    function NgxGalleryLayout() {}\n\n    NgxGalleryLayout.ThumbnailsTop = 'thumbnails-top';\n    NgxGalleryLayout.ThumbnailsBottom = 'thumbnails-bottom';\n    return NgxGalleryLayout;\n  }();\n\n  var NgxGalleryAction =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} action\r\n     */\n    function NgxGalleryAction(action) {\n      this.icon = action.icon;\n      this.disabled = action.disabled ? action.disabled : false;\n      this.titleText = action.titleText ? action.titleText : '';\n      this.onClick = action.onClick;\n    }\n\n    return NgxGalleryAction;\n  }();\n\n  var NgxGalleryOptions =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} obj\r\n     */\n    function NgxGalleryOptions(obj) {\n      var preventDefaults = obj.breakpoint === undefined ? false : true;\n\n      function use(source, defaultValue) {\n        return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n      }\n\n      this.breakpoint = use(obj.breakpoint, undefined);\n      this.width = use(obj.width, '500px');\n      this.height = use(obj.height, '400px');\n      this.fullWidth = use(obj.fullWidth, false);\n      this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n      this.startIndex = use(obj.startIndex, 0);\n      this.linkTarget = use(obj.linkTarget, '_blank');\n      this.lazyLoading = use(obj.lazyLoading, true);\n      this.image = use(obj.image, true);\n      this.imagePercent = use(obj.imagePercent, 75);\n      this.imageArrows = use(obj.imageArrows, true);\n      this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n      this.imageSwipe = use(obj.imageSwipe, false);\n      this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n      this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n      this.imageAutoPlay = use(obj.imageAutoPlay, false);\n      this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n      this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n      this.imageInfinityMove = use(obj.imageInfinityMove, false);\n\n      if (obj && obj.imageActions && obj.imageActions.length) {\n        obj.imageActions = obj.imageActions.map(function (action) {\n          return new NgxGalleryAction(action);\n        });\n      }\n\n      this.imageActions = use(obj.imageActions, []);\n      this.imageDescription = use(obj.imageDescription, false);\n      this.thumbnails = use(obj.thumbnails, true);\n      this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n      this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n      this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n      this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n      this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n      this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n      this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n      this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n      this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n      this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n      this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n      this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n      this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n\n      if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n        obj.thumbnailActions = obj.thumbnailActions.map(function (action) {\n          return new NgxGalleryAction(action);\n        });\n      }\n\n      this.thumbnailActions = use(obj.thumbnailActions, []);\n      this.preview = use(obj.preview, true);\n      this.previewDescription = use(obj.previewDescription, true);\n      this.previewSwipe = use(obj.previewSwipe, false);\n      this.previewFullscreen = use(obj.previewFullscreen, false);\n      this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n      this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n      this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n      this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n      this.previewAnimation = use(obj.previewAnimation, true);\n      this.previewAutoPlay = use(obj.previewAutoPlay, false);\n      this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n      this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n      this.previewInfinityMove = use(obj.previewInfinityMove, false);\n      this.previewZoom = use(obj.previewZoom, false);\n      this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n      this.previewZoomMax = use(obj.previewZoomMax, 2);\n      this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n      this.previewRotate = use(obj.previewRotate, false);\n      this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n      this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n      this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n      this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n      this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n      this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n      this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n      this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n      this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n\n      if (obj && obj.actions && obj.actions.length) {\n        obj.actions = obj.actions.map(function (action) {\n          return new NgxGalleryAction(action);\n        });\n      }\n\n      this.actions = use(obj.actions, []);\n    }\n\n    return NgxGalleryOptions;\n  }();\n\n  var NgxGalleryOrderedImage =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} obj\r\n     */\n    function NgxGalleryOrderedImage(obj) {\n      this.src = obj.src;\n      this.index = obj.index;\n    }\n\n    return NgxGalleryOrderedImage;\n  }();\n\n  var NgxGalleryComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} myElement\r\n     */\n    function NgxGalleryComponent(myElement) {\n      this.myElement = myElement;\n      this.imagesReady = new core.EventEmitter();\n      this.change = new core.EventEmitter();\n      this.previewOpen = new core.EventEmitter();\n      this.previewClose = new core.EventEmitter();\n      this.previewChange = new core.EventEmitter();\n      this.oldImagesLength = 0;\n      this.selectedIndex = 0;\n      this.breakpoint = undefined;\n      this.prevBreakpoint = undefined;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.ngOnInit = function () {\n      this.options = this.options.map(function (opt) {\n        return new NgxGalleryOptions(opt);\n      });\n      this.sortOptions();\n      this.setBreakpoint();\n      this.setOptions();\n      this.checkFullWidth();\n\n      if (this.currentOptions) {\n        this.selectedIndex =\n        /** @type {?} */\n        this.currentOptions.startIndex;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.ngDoCheck = function () {\n      if (this.images !== undefined && this.images.length !== this.oldImagesLength || this.images !== this.oldImages) {\n        this.oldImagesLength = this.images.length;\n        this.oldImages = this.images;\n        this.setImages();\n\n        if (this.images && this.images.length) {\n          this.imagesReady.emit();\n        }\n\n        if (this.image) {\n          this.image.reset(\n          /** @type {?} */\n          this.currentOptions.startIndex);\n        }\n\n        this.resetThumbnails();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.ngAfterViewInit = function () {\n      this.checkFullWidth();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.onResize = function () {\n      var _this = this;\n\n      this.setBreakpoint();\n\n      if (this.prevBreakpoint !== this.breakpoint) {\n        this.setOptions();\n        this.resetThumbnails();\n      }\n\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n        if (this.fullWidthTimeout) {\n          clearTimeout(this.fullWidthTimeout);\n        }\n\n        this.fullWidthTimeout = setTimeout(function () {\n          _this.checkFullWidth();\n        }, 200);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getImageHeight = function () {\n      return this.currentOptions && this.currentOptions.thumbnails ? this.currentOptions.imagePercent + '%' : '100%';\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getThumbnailsHeight = function () {\n      if (this.currentOptions && this.currentOptions.image) {\n        return 'calc(' + this.currentOptions.thumbnailsPercent + '% - ' + this.currentOptions.thumbnailsMargin + 'px)';\n      } else {\n        return '100%';\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getThumbnailsMarginTop = function () {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n        return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n        return '0px';\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getThumbnailsMarginBottom = function () {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n        return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n        return '0px';\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.openPreview = function (index) {\n      this.previewEnabled = true;\n      this.preview.open(index);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.onPreviewOpen = function () {\n      this.previewOpen.emit();\n\n      if (this.image && this.image.autoPlay) {\n        this.image.stopAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.onPreviewClose = function () {\n      this.previewEnabled = false;\n      this.previewClose.emit();\n\n      if (this.image && this.image.autoPlay) {\n        this.image.startAutoPlay();\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.selectFromImage = function (index) {\n      this.select(index);\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.selectFromThumbnails = function (index) {\n      this.select(index);\n\n      if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n        this.openPreview(this.selectedIndex);\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.show = function (index) {\n      this.select(index);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.showNext = function () {\n      this.image.showNext();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.showPrev = function () {\n      this.image.showPrev();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.canShowNext = function () {\n      if (this.images && this.currentOptions) {\n        return this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.canShowPrev = function () {\n      if (this.images && this.currentOptions) {\n        return this.currentOptions.imageInfinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.previewSelect = function (index) {\n      this.previewChange.emit({\n        index: index,\n        image: this.images[index]\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.resetThumbnails = function () {\n      if (this.thubmnails) {\n        this.thubmnails.reset(\n        /** @type {?} */\n        this.currentOptions.startIndex);\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.select = function (index) {\n      this.selectedIndex = index;\n      this.change.emit({\n        index: index,\n        image: this.images[index]\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.checkFullWidth = function () {\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n        this.width = document.body.clientWidth + 'px';\n        this.left = -(document.body.clientWidth - this.myElement.nativeElement.parentNode.innerWidth) / 2 + 'px';\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.setImages = function () {\n      this.smallImages = this.images.map(function (img) {\n        /** @type {?} */\n        return img.small;\n      });\n      this.mediumImages = this.images.map(function (img, i) {\n        return new NgxGalleryOrderedImage({\n          src: img.medium,\n          index: i\n        });\n      });\n      this.bigImages = this.images.map(function (img) {\n        /** @type {?} */\n        return img.big;\n      });\n      this.descriptions = this.images.map(function (img) {\n        /** @type {?} */\n        return img.description;\n      });\n      this.links = this.images.map(function (img) {\n        /** @type {?} */\n        return img.url;\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.setBreakpoint = function () {\n      this.prevBreakpoint = this.breakpoint;\n      var\n      /** @type {?} */\n      breakpoints;\n\n      if (typeof window !== 'undefined') {\n        breakpoints = this.options.filter(function (opt) {\n          return opt.breakpoint >= window.innerWidth;\n        }).map(function (opt) {\n          return opt.breakpoint;\n        });\n      }\n\n      if (breakpoints && breakpoints.length) {\n        this.breakpoint = breakpoints.pop();\n      } else {\n        this.breakpoint = undefined;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.sortOptions = function () {\n      this.options = this.options.filter(function (a) {\n        return a.breakpoint === undefined;\n      }).concat(this.options.filter(function (a) {\n        return a.breakpoint !== undefined;\n      }).sort(function (a, b) {\n        return b.breakpoint - a.breakpoint;\n      }));\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.setOptions = function () {\n      var _this = this;\n\n      this.currentOptions = new NgxGalleryOptions({});\n      this.options.filter(function (opt) {\n        return opt.breakpoint === undefined || opt.breakpoint >= _this.breakpoint;\n      }).map(function (opt) {\n        return _this.combineOptions(_this.currentOptions, opt);\n      });\n      this.width =\n      /** @type {?} */\n      this.currentOptions.width;\n      this.height =\n      /** @type {?} */\n      this.currentOptions.height;\n    };\n    /**\r\n     * @param {?} first\r\n     * @param {?} second\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.combineOptions = function (first, second) {\n      Object.keys(second).map(function (val) {\n        return first[val] = second[val] !== undefined ? second[val] : first[val];\n      });\n    };\n\n    NgxGalleryComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery',\n        template: \"\\n    <div class=\\\"ngx-gallery-layout {{currentOptions?.layout}}\\\">\\n        <ngx-gallery-image *ngIf=\\\"currentOptions?.image\\\" [style.height]=\\\"getImageHeight()\\\" [images]=\\\"mediumImages\\\" [clickable]=\\\"currentOptions?.preview\\\" [selectedIndex]=\\\"selectedIndex\\\" [arrows]=\\\"currentOptions?.imageArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.imageArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [swipe]=\\\"currentOptions?.imageSwipe\\\" [animation]=\\\"currentOptions?.imageAnimation\\\" [size]=\\\"currentOptions?.imageSize\\\" [autoPlay]=\\\"currentOptions?.imageAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.imageAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.imageAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.imageInfinityMove\\\"  [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.imageActions\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.imageDescription\\\" (onClick)=\\\"openPreview($event)\\\" (onActiveChange)=\\\"selectFromImage($event)\\\"></ngx-gallery-image>\\n\\n        <ngx-gallery-thumbnails *ngIf=\\\"currentOptions?.thumbnails\\\" [style.marginTop]=\\\"getThumbnailsMarginTop()\\\" [style.marginBottom]=\\\"getThumbnailsMarginBottom()\\\" [style.height]=\\\"getThumbnailsHeight()\\\" [images]=\\\"smallImages\\\" [links]=\\\"currentOptions?.thumbnailsAsLinks ? links : []\\\" [linkTarget]=\\\"currentOptions?.linkTarget\\\" [selectedIndex]=\\\"selectedIndex\\\" [columns]=\\\"currentOptions?.thumbnailsColumns\\\" [rows]=\\\"currentOptions?.thumbnailsRows\\\" [margin]=\\\"currentOptions?.thumbnailMargin\\\" [arrows]=\\\"currentOptions?.thumbnailsArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.thumbnailsArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [clickable]=\\\"currentOptions?.image || currentOptions?.preview\\\" [swipe]=\\\"currentOptions?.thumbnailsSwipe\\\" [size]=\\\"currentOptions?.thumbnailSize\\\" [moveSize]=\\\"currentOptions?.thumbnailsMoveSize\\\" [order]=\\\"currentOptions?.thumbnailsOrder\\\" [remainingCount]=\\\"currentOptions?.thumbnailsRemainingCount\\\" [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.thumbnailActions\\\"  (onActiveChange)=\\\"selectFromThumbnails($event)\\\"></ngx-gallery-thumbnails>\\n\\n        <ngx-gallery-preview [images]=\\\"bigImages\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.previewDescription\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [closeIcon]=\\\"currentOptions?.closeIcon\\\" [fullscreenIcon]=\\\"currentOptions?.fullscreenIcon\\\" [spinnerIcon]=\\\"currentOptions?.spinnerIcon\\\" [swipe]=\\\"currentOptions?.previewSwipe\\\" [fullscreen]=\\\"currentOptions?.previewFullscreen\\\" [forceFullscreen]=\\\"currentOptions?.previewForceFullscreen\\\" [closeOnClick]=\\\"currentOptions?.previewCloseOnClick\\\" [closeOnEsc]=\\\"currentOptions?.previewCloseOnEsc\\\" [keyboardNavigation]=\\\"currentOptions?.previewKeyboardNavigation\\\" [animation]=\\\"currentOptions?.previewAnimation\\\" [autoPlay]=\\\"currentOptions?.previewAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.previewAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.previewAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.previewInfinityMove\\\" [zoom]=\\\"currentOptions?.previewZoom\\\" [zoomStep]=\\\"currentOptions?.previewZoomStep\\\" [zoomMax]=\\\"currentOptions?.previewZoomMax\\\" [zoomMin]=\\\"currentOptions?.previewZoomMin\\\" [zoomInIcon]=\\\"currentOptions?.zoomInIcon\\\" [zoomOutIcon]=\\\"currentOptions?.zoomOutIcon\\\" [actions]=\\\"currentOptions?.actions\\\" [rotate]=\\\"currentOptions?.previewRotate\\\" [rotateLeftIcon]=\\\"currentOptions?.rotateLeftIcon\\\" [rotateRightIcon]=\\\"currentOptions?.rotateRightIcon\\\"  (onClose)=\\\"onPreviewClose()\\\" (onOpen)=\\\"onPreviewOpen()\\\" (onActiveChange)=\\\"previewSelect($event)\\\" [class.ngx-gallery-active]=\\\"previewEnabled\\\"></ngx-gallery-preview>\\n    </div>\\n    \",\n        styles: [\":host { display: inline-block; } :host > * { float: left; } :host /deep/ * { box-sizing: border-box; } :host /deep/ .ngx-gallery-icon { color: white; font-size: 25px; position: absolute; z-index: 2000; display: inline-block; } :host /deep/ .ngx-gallery-icon .ngx-gallery-icon-content { display: block; } :host /deep/ .ngx-gallery-clickable { cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper .ngx-gallery-icon { position: relative; margin-right: 5px; margin-top: 5px; font-size: 20px; cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper { float: right; } :host .ngx-gallery-layout { width: 100%; height: 100%; display: flex; flex-direction: column; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-image { order: 2; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-thumbnails { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-image { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-thumbnails { order: 2; } \"],\n        providers: [NgxGalleryHelperService]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryComponent.ctorParameters = function () {\n      return [{\n        type: core.ElementRef\n      }];\n    };\n\n    NgxGalleryComponent.propDecorators = {\n      'options': [{\n        type: core.Input\n      }],\n      'images': [{\n        type: core.Input\n      }],\n      'imagesReady': [{\n        type: core.Output\n      }],\n      'change': [{\n        type: core.Output\n      }],\n      'previewOpen': [{\n        type: core.Output\n      }],\n      'previewClose': [{\n        type: core.Output\n      }],\n      'previewChange': [{\n        type: core.Output\n      }],\n      'preview': [{\n        type: core.ViewChild,\n        args: [NgxGalleryPreviewComponent]\n      }],\n      'image': [{\n        type: core.ViewChild,\n        args: [NgxGalleryImageComponent]\n      }],\n      'thubmnails': [{\n        type: core.ViewChild,\n        args: [NgxGalleryThumbnailsComponent]\n      }],\n      'width': [{\n        type: core.HostBinding,\n        args: ['style.width']\n      }],\n      'height': [{\n        type: core.HostBinding,\n        args: ['style.height']\n      }],\n      'left': [{\n        type: core.HostBinding,\n        args: ['style.left']\n      }],\n      'onResize': [{\n        type: core.HostListener,\n        args: ['window:resize']\n      }]\n    };\n    return NgxGalleryComponent;\n  }();\n\n  var NgxGalleryImage =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} obj\r\n     */\n    function NgxGalleryImage(obj) {\n      this.small = obj.small;\n      this.medium = obj.medium;\n      this.big = obj.big;\n      this.description = obj.description;\n      this.url = obj.url;\n    }\n\n    return NgxGalleryImage;\n  }();\n\n  var __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  var CustomHammerConfig =\n  /** @class */\n  function (_super) {\n    __extends(CustomHammerConfig, _super);\n\n    function CustomHammerConfig() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n\n      _this.overrides = {\n        'pinch': {\n          enable: false\n        },\n        'rotate': {\n          enable: false\n        }\n      };\n      return _this;\n    }\n\n    return CustomHammerConfig;\n  }(platformBrowser.HammerGestureConfig);\n\n  var NgxGalleryModule =\n  /** @class */\n  function () {\n    function NgxGalleryModule() {}\n\n    NgxGalleryModule.decorators = [{\n      type: core.NgModule,\n      args: [{\n        imports: [common.CommonModule],\n        declarations: [NgxGalleryActionComponent, NgxGalleryArrowsComponent, NgxGalleryImageComponent, NgxGalleryThumbnailsComponent, NgxGalleryPreviewComponent, NgxGalleryComponent],\n        exports: [NgxGalleryComponent],\n        providers: [{\n          provide: platformBrowser.HAMMER_GESTURE_CONFIG,\n          useClass: CustomHammerConfig\n        }]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryModule.ctorParameters = function () {\n      return [];\n    };\n\n    return NgxGalleryModule;\n  }();\n\n  exports.CustomHammerConfig = CustomHammerConfig;\n  exports.NgxGalleryModule = NgxGalleryModule;\n  exports.NgxGalleryComponent = NgxGalleryComponent;\n  exports.NgxGalleryActionComponent = NgxGalleryActionComponent;\n  exports.NgxGalleryImageComponent = NgxGalleryImageComponent;\n  exports.NgxGalleryThumbnailsComponent = NgxGalleryThumbnailsComponent;\n  exports.NgxGalleryPreviewComponent = NgxGalleryPreviewComponent;\n  exports.NgxGalleryArrowsComponent = NgxGalleryArrowsComponent;\n  exports.NgxGalleryOptions = NgxGalleryOptions;\n  exports.NgxGalleryImage = NgxGalleryImage;\n  exports.NgxGalleryAnimation = NgxGalleryAnimation;\n  exports.NgxGalleryHelperService = NgxGalleryHelperService;\n  exports.NgxGalleryImageSize = NgxGalleryImageSize;\n  exports.NgxGalleryLayout = NgxGalleryLayout;\n  exports.NgxGalleryOrder = NgxGalleryOrder;\n  exports.NgxGalleryOrderedImage = NgxGalleryOrderedImage;\n  exports.NgxGalleryAction = NgxGalleryAction;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["F:/projects/DatingApp/DatingApp-SPA/node_modules/ngx-gallery/bundles/ngx-gallery.umd.js"],"names":["global","factory","exports","module","require","define","amd","core","common","platformBrowser","NgxGalleryActionComponent","disabled","titleText","onClick","EventEmitter","prototype","handleClick","event","emit","stopPropagation","preventDefault","decorators","type","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ctorParameters","propDecorators","Input","Output","NgxGalleryArrowsComponent","onPrevClick","onNextClick","handlePrevClick","handleNextClick","styles","NgxGalleryHelperService","renderer","swipeHandlers","Map","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","e","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","Injectable","Renderer","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageComponent","sanitization","elementRef","helperService","onActiveChange","canChangeImage","ngOnInit","arrows","arrowsAutoHide","autoPlay","startAutoPlay","ngOnChanges","changes","_this","swipe","showNext","showPrev","onMouseEnter","autoPlayPauseOnHover","stopAutoPlay","onMouseLeave","reset","index","selectedIndex","getImages","lazyLoading","indexes_1","prevIndex","infinityMove","push","images","length","nextIndex","filter","img","i","indexOf","timer","setInterval","autoPlayInterval","clearInterval","clickable","canShowNext","setChangeTimeout","canShowPrev","timeout","animation","setTimeout","getSafeUrl","bypassSecurityTrustStyle","DomSanitizer","ElementRef","HostListener","NgxGalleryOrder","Column","Row","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","rows","hasLinks","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","count","getSafeStyle","value","NgxGalleryPreviewComponent","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","onOpen","onClose","isOpen","initialX","initialY","initialLeft","initialTop","isMove","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","show","forceFullscreen","manageFullscreen","closeFullscreen","imageMouseEnter","imageMouseLeave","clearTimeout","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","substr","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","_show","src","srcIndex","description","descriptions","isLoaded","previewImage","onload","complete","naturalWidth","ViewChild","NgxGalleryImageSize","Cover","Contain","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryAction","action","icon","NgxGalleryOptions","obj","preventDefaults","breakpoint","undefined","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","imageDescription","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","actions","NgxGalleryOrderedImage","NgxGalleryComponent","myElement","imagesReady","change","previewOpen","previewClose","previewChange","oldImagesLength","prevBreakpoint","options","opt","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","thubmnails","body","clientWidth","left","parentNode","innerWidth","smallImages","small","mediumImages","medium","bigImages","big","breakpoints","window","pop","a","concat","sort","b","combineOptions","second","Object","keys","val","providers","HostBinding","NgxGalleryImage","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","p","hasOwnProperty","__","constructor","create","CustomHammerConfig","_super","apply","arguments","overrides","enable","HammerGestureConfig","NgxGalleryModule","NgModule","imports","CommonModule","declarations","provide","HAMMER_GESTURE_CONFIG","useClass","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/platform-browser')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/platform-browser'], factory) :\n\t(factory((global['ngx-gallery'] = {}),global.core,global.common,global.platformBrowser));\n}(this, (function (exports,core,common,platformBrowser) { 'use strict';\n\nvar NgxGalleryActionComponent = /** @class */ (function () {\r\n    function NgxGalleryActionComponent() {\r\n        this.disabled = false;\r\n        this.titleText = '';\r\n        this.onClick = new core.EventEmitter();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    NgxGalleryActionComponent.prototype.handleClick = function (event) {\r\n        if (!this.disabled) {\r\n            this.onClick.emit(event);\r\n        }\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    };\r\n    NgxGalleryActionComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-action',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-icon\\\" [class.ngx-gallery-icon-disabled]=\\\"disabled\\\"\\n            aria-hidden=\\\"true\\\"\\n            title=\\\"{{ titleText }}\\\"\\n            (click)=\\\"handleClick($event)\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{ icon }}\\\"></i>\\n        </div>\",\r\n                    changeDetection: core.ChangeDetectionStrategy.OnPush\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryActionComponent.ctorParameters = function () { return []; };\r\n    NgxGalleryActionComponent.propDecorators = {\r\n        'icon': [{ type: core.Input },],\r\n        'disabled': [{ type: core.Input },],\r\n        'titleText': [{ type: core.Input },],\r\n        'onClick': [{ type: core.Output },],\r\n    };\r\n    return NgxGalleryActionComponent;\r\n}());\n\nvar NgxGalleryArrowsComponent = /** @class */ (function () {\r\n    function NgxGalleryArrowsComponent() {\r\n        this.onPrevClick = new core.EventEmitter();\r\n        this.onNextClick = new core.EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryArrowsComponent.prototype.handlePrevClick = function () {\r\n        this.onPrevClick.emit();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryArrowsComponent.prototype.handleNextClick = function () {\r\n        this.onNextClick.emit();\r\n    };\r\n    NgxGalleryArrowsComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-arrows',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handlePrevClick()\\\" [class.ngx-gallery-disabled]=\\\"prevDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowPrevIcon}}\\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handleNextClick()\\\" [class.ngx-gallery-disabled]=\\\"nextDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowNextIcon}}\\\"></i>\\n            </div>\\n        </div>\\n    \",\r\n                    styles: [\".ngx-gallery-arrow-wrapper { position: absolute; height: 100%; width: 1px; display: table; z-index: 2000; table-layout: fixed; } .ngx-gallery-arrow-left { left: 0px; } .ngx-gallery-arrow-right { right: 0px; } .ngx-gallery-arrow { top: 50%; transform: translateY(-50%); cursor: pointer; } .ngx-gallery-arrow.ngx-gallery-disabled { opacity: 0.6; cursor: default; } .ngx-gallery-arrow-left .ngx-gallery-arrow { left: 10px; } .ngx-gallery-arrow-right .ngx-gallery-arrow { right: 10px; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryArrowsComponent.ctorParameters = function () { return []; };\r\n    NgxGalleryArrowsComponent.propDecorators = {\r\n        'prevDisabled': [{ type: core.Input },],\r\n        'nextDisabled': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'onPrevClick': [{ type: core.Output },],\r\n        'onNextClick': [{ type: core.Output },],\r\n    };\r\n    return NgxGalleryArrowsComponent;\r\n}());\n\nvar NgxGalleryHelperService = /** @class */ (function () {\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function NgxGalleryHelperService(renderer) {\r\n        this.renderer = renderer;\r\n        this.swipeHandlers = new Map();\r\n    }\r\n    /**\r\n     * @param {?} status\r\n     * @param {?} element\r\n     * @param {?} id\r\n     * @param {?} nextHandler\r\n     * @param {?} prevHandler\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.manageSwipe = function (status, element, id, nextHandler, prevHandler) {\r\n        var /** @type {?} */ handlers = this.getSwipeHandlers(id);\r\n        // swipeleft and swiperight are available only if hammerjs is included\r\n        try {\r\n            if (status && !handlers) {\r\n                this.swipeHandlers.set(id, [\r\n                    this.renderer.listen(element.nativeElement, 'swipeleft', function () { return nextHandler(); }),\r\n                    this.renderer.listen(element.nativeElement, 'swiperight', function () { return prevHandler(); })\r\n                ]);\r\n            }\r\n            else if (!status && handlers) {\r\n                handlers.map(function (handler) { return handler(); });\r\n                this.removeSwipeHandlers(id);\r\n            }\r\n        }\r\n        catch (e) { }\r\n    };\r\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.validateUrl = function (url) {\r\n        if (url.replace) {\r\n            return url.replace(new RegExp(' ', 'g'), '%20');\r\n        }\r\n        else {\r\n            return url;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.getBackgroundUrl = function (image) {\r\n        return 'url(\\'' + this.validateUrl(image) + '\\')';\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.getSwipeHandlers = function (id) {\r\n        return this.swipeHandlers.get(id);\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.removeSwipeHandlers = function (id) {\r\n        this.swipeHandlers.delete(id);\r\n    };\r\n    NgxGalleryHelperService.decorators = [\r\n        { type: core.Injectable },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryHelperService.ctorParameters = function () { return [\r\n        { type: core.Renderer, },\r\n    ]; };\r\n    return NgxGalleryHelperService;\r\n}());\n\nvar NgxGalleryAnimation = /** @class */ (function () {\r\n    function NgxGalleryAnimation() {\r\n    }\r\n    NgxGalleryAnimation.Fade = 'fade';\r\n    NgxGalleryAnimation.Slide = 'slide';\r\n    NgxGalleryAnimation.Rotate = 'rotate';\r\n    NgxGalleryAnimation.Zoom = 'zoom';\r\n    return NgxGalleryAnimation;\r\n}());\n\nvar NgxGalleryImageComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\r\n    function NgxGalleryImageComponent(sanitization, elementRef, helperService) {\r\n        this.sanitization = sanitization;\r\n        this.elementRef = elementRef;\r\n        this.helperService = helperService;\r\n        this.onClick = new core.EventEmitter();\r\n        this.onActiveChange = new core.EventEmitter();\r\n        this.canChangeImage = true;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.ngOnInit = function () {\r\n        if (this.arrows && this.arrowsAutoHide) {\r\n            this.arrows = false;\r\n        }\r\n        if (this.autoPlay) {\r\n            this.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (changes['swipe']) {\r\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', function () { return _this.showNext(); }, function () { return _this.showPrev(); });\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.onMouseEnter = function () {\r\n        if (this.arrowsAutoHide && !this.arrows) {\r\n            this.arrows = true;\r\n        }\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.stopAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.onMouseLeave = function () {\r\n        if (this.arrowsAutoHide && this.arrows) {\r\n            this.arrows = false;\r\n        }\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.reset = function (index) {\r\n        this.selectedIndex = index;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.getImages = function () {\r\n        if (this.lazyLoading) {\r\n            var /** @type {?} */ indexes_1 = [this.selectedIndex];\r\n            var /** @type {?} */ prevIndex = this.selectedIndex - 1;\r\n            if (prevIndex === -1 && this.infinityMove) {\r\n                indexes_1.push(this.images.length - 1);\r\n            }\r\n            else if (prevIndex >= 0) {\r\n                indexes_1.push(prevIndex);\r\n            }\r\n            var /** @type {?} */ nextIndex = this.selectedIndex + 1;\r\n            if (nextIndex == this.images.length && this.infinityMove) {\r\n                indexes_1.push(0);\r\n            }\r\n            else if (nextIndex < this.images.length) {\r\n                indexes_1.push(nextIndex);\r\n            }\r\n            return this.images.filter(function (img, i) { return indexes_1.indexOf(i) != -1; });\r\n        }\r\n        else {\r\n            return this.images;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.startAutoPlay = function () {\r\n        var _this = this;\r\n        this.stopAutoPlay();\r\n        this.timer = setInterval(function () {\r\n            if (!_this.showNext()) {\r\n                _this.selectedIndex = -1;\r\n                _this.showNext();\r\n            }\r\n        }, this.autoPlayInterval);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.stopAutoPlay = function () {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.handleClick = function (event, index) {\r\n        if (this.clickable) {\r\n            this.onClick.emit(index);\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.showNext = function () {\r\n        if (this.canShowNext() && this.canChangeImage) {\r\n            this.selectedIndex++;\r\n            if (this.selectedIndex === this.images.length) {\r\n                this.selectedIndex = 0;\r\n            }\r\n            this.onActiveChange.emit(this.selectedIndex);\r\n            this.setChangeTimeout();\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.showPrev = function () {\r\n        if (this.canShowPrev() && this.canChangeImage) {\r\n            this.selectedIndex--;\r\n            if (this.selectedIndex < 0) {\r\n                this.selectedIndex = this.images.length - 1;\r\n            }\r\n            this.onActiveChange.emit(this.selectedIndex);\r\n            this.setChangeTimeout();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.setChangeTimeout = function () {\r\n        var _this = this;\r\n        this.canChangeImage = false;\r\n        var /** @type {?} */ timeout = 1000;\r\n        if (this.animation === NgxGalleryAnimation.Slide\r\n            || this.animation === NgxGalleryAnimation.Fade) {\r\n            timeout = 500;\r\n        }\r\n        setTimeout(function () {\r\n            _this.canChangeImage = true;\r\n        }, timeout);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.canShowNext = function () {\r\n        if (this.images) {\r\n            return this.infinityMove || this.selectedIndex < this.images.length - 1\r\n                ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.canShowPrev = function () {\r\n        if (this.images) {\r\n            return this.infinityMove || this.selectedIndex > 0 ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.getSafeUrl = function (image) {\r\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\r\n    };\r\n    NgxGalleryImageComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-image',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\\\">\\n            <div class=\\\"ngx-gallery-image\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [ngClass]=\\\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\\\" [style.background-image]=\\\"getSafeUrl(image.src)\\\" (click)=\\\"handleClick($event, image.index)\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, image.index)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-image-text\\\" *ngIf=\\\"showDescription && descriptions[image.index]\\\" [innerHTML]=\\\"descriptions[image.index]\\\"></div>\\n            </div>\\n        </div>\\n        <ngx-gallery-arrows class=\\\"ngx-gallery-image-size-{{size}}\\\" *ngIf=\\\"arrows\\\" (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\r\n                    styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-image-wrapper { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; overflow: hidden; } .ngx-gallery-image { background-position: center; background-repeat: no-repeat; height: 100%; width: 100%; position: absolute; top: 0px; } .ngx-gallery-image.ngx-gallery-active { z-index: 1000; } .ngx-gallery-image-size-cover .ngx-gallery-image { background-size: cover; } .ngx-gallery-image-size-contain .ngx-gallery-image { background-size: contain; } .ngx-gallery-animation-fade .ngx-gallery-image { left: 0px; opacity: 0; transition: 0.5s ease-in-out; } .ngx-gallery-animation-fade .ngx-gallery-image.ngx-gallery-active { opacity: 1; } .ngx-gallery-animation-slide .ngx-gallery-image { transition: 0.5s ease-in-out; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-active { left: 0px; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-left { left: -100%; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-right { left: 100%; } .ngx-gallery-animation-rotate .ngx-gallery-image { transition: 1s ease; transform: scale(3.5, 3.5) rotate(90deg); left: 0px; opacity: 0; } .ngx-gallery-animation-rotate .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1) rotate(0deg); opacity: 1; } .ngx-gallery-animation-zoom .ngx-gallery-image { transition: 1s ease; transform: scale(2.5, 2.5); left: 0px; opacity: 0; } .ngx-gallery-animation-zoom .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1); opacity: 1; } .ngx-gallery-image-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; position: absolute; bottom: 0px; z-index: 10; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryImageComponent.ctorParameters = function () { return [\r\n        { type: platformBrowser.DomSanitizer, },\r\n        { type: core.ElementRef, },\r\n        { type: NgxGalleryHelperService, },\r\n    ]; };\r\n    NgxGalleryImageComponent.propDecorators = {\r\n        'images': [{ type: core.Input },],\r\n        'clickable': [{ type: core.Input },],\r\n        'selectedIndex': [{ type: core.Input },],\r\n        'arrows': [{ type: core.Input },],\r\n        'arrowsAutoHide': [{ type: core.Input },],\r\n        'swipe': [{ type: core.Input },],\r\n        'animation': [{ type: core.Input },],\r\n        'size': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'autoPlay': [{ type: core.Input },],\r\n        'autoPlayInterval': [{ type: core.Input },],\r\n        'autoPlayPauseOnHover': [{ type: core.Input },],\r\n        'infinityMove': [{ type: core.Input },],\r\n        'lazyLoading': [{ type: core.Input },],\r\n        'actions': [{ type: core.Input },],\r\n        'descriptions': [{ type: core.Input },],\r\n        'showDescription': [{ type: core.Input },],\r\n        'onClick': [{ type: core.Output },],\r\n        'onActiveChange': [{ type: core.Output },],\r\n        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],\r\n        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],\r\n    };\r\n    return NgxGalleryImageComponent;\r\n}());\n\nvar NgxGalleryOrder = /** @class */ (function () {\r\n    function NgxGalleryOrder() {\r\n    }\r\n    NgxGalleryOrder.Column = 1;\r\n    NgxGalleryOrder.Row = 2;\r\n    return NgxGalleryOrder;\r\n}());\n\nvar NgxGalleryThumbnailsComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\r\n    function NgxGalleryThumbnailsComponent(sanitization, elementRef, helperService) {\r\n        this.sanitization = sanitization;\r\n        this.elementRef = elementRef;\r\n        this.helperService = helperService;\r\n        this.minStopIndex = 0;\r\n        this.onActiveChange = new core.EventEmitter();\r\n        this.index = 0;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (changes['selectedIndex']) {\r\n            this.validateIndex();\r\n        }\r\n        if (changes['swipe']) {\r\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'thumbnails', function () { return _this.moveRight(); }, function () { return _this.moveLeft(); });\r\n        }\r\n        if (this.images) {\r\n            this.remainingCountValue = this.images.length - this.columns;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.onMouseEnter = function () {\r\n        this.mouseenter = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.onMouseLeave = function () {\r\n        this.mouseenter = false;\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.reset = function (index) {\r\n        this.selectedIndex = index;\r\n        this.setDefaultPosition();\r\n        this.index = 0;\r\n        this.validateIndex();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getImages = function () {\r\n        if (this.remainingCount) {\r\n            return this.images.slice(0, this.columns);\r\n        }\r\n        else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\r\n            var /** @type {?} */ stopIndex = this.index + this.columns + this.moveSize;\r\n            if (this.rows > 1 && this.order === NgxGalleryOrder.Column) {\r\n                stopIndex = stopIndex * this.rows;\r\n            }\r\n            if (stopIndex <= this.minStopIndex) {\r\n                stopIndex = this.minStopIndex;\r\n            }\r\n            else {\r\n                this.minStopIndex = stopIndex;\r\n            }\r\n            return this.images.slice(0, stopIndex);\r\n        }\r\n        else {\r\n            return this.images;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.handleClick = function (event, index) {\r\n        if (!this.hasLinks()) {\r\n            this.selectedIndex = index;\r\n            this.onActiveChange.emit(index);\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.hasLinks = function () {\r\n        if (this.links && this.links.length)\r\n            return true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.moveRight = function () {\r\n        if (this.canMoveRight()) {\r\n            this.index += this.moveSize;\r\n            var /** @type {?} */ maxIndex = this.getMaxIndex() - this.columns;\r\n            if (this.index > maxIndex) {\r\n                this.index = maxIndex;\r\n            }\r\n            this.setThumbnailsPosition();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.moveLeft = function () {\r\n        if (this.canMoveLeft()) {\r\n            this.index -= this.moveSize;\r\n            if (this.index < 0) {\r\n                this.index = 0;\r\n            }\r\n            this.setThumbnailsPosition();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.canMoveRight = function () {\r\n        return this.index + this.columns < this.getMaxIndex() ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.canMoveLeft = function () {\r\n        return this.index !== 0 ? true : false;\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailLeft = function (index) {\r\n        var /** @type {?} */ calculatedIndex;\r\n        if (this.order === NgxGalleryOrder.Column) {\r\n            calculatedIndex = Math.floor(index / this.rows);\r\n        }\r\n        else {\r\n            calculatedIndex = index % Math.ceil(this.images.length / this.rows);\r\n        }\r\n        return this.getThumbnailPosition(calculatedIndex, this.columns);\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailTop = function (index) {\r\n        var /** @type {?} */ calculatedIndex;\r\n        if (this.order === NgxGalleryOrder.Column) {\r\n            calculatedIndex = index % this.rows;\r\n        }\r\n        else {\r\n            calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\r\n        }\r\n        return this.getThumbnailPosition(calculatedIndex, this.rows);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailWidth = function () {\r\n        return this.getThumbnailDimension(this.columns);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailHeight = function () {\r\n        return this.getThumbnailDimension(this.rows);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.setThumbnailsPosition = function () {\r\n        this.thumbnailsLeft = -((100 / this.columns) * this.index) + '%';\r\n        this.thumbnailsMarginLeft = -((this.margin - (((this.columns - 1)\r\n            * this.margin) / this.columns)) * this.index) + 'px';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.setDefaultPosition = function () {\r\n        this.thumbnailsLeft = '0px';\r\n        this.thumbnailsMarginLeft = '0px';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.canShowArrows = function () {\r\n        if (this.remainingCount) {\r\n            return false;\r\n        }\r\n        else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\r\n            && (!this.arrowsAutoHide || this.mouseenter)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.validateIndex = function () {\r\n        var /** @type {?} */ newIndex;\r\n        if (this.order === NgxGalleryOrder.Column) {\r\n            newIndex = Math.floor(this.selectedIndex / this.rows);\r\n        }\r\n        else {\r\n            newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\r\n        }\r\n        if (this.remainingCount) {\r\n            newIndex = 0;\r\n        }\r\n        if (newIndex < this.index || newIndex >= this.index + this.columns) {\r\n            var /** @type {?} */ maxIndex = this.getMaxIndex() - this.columns;\r\n            this.index = newIndex > maxIndex ? maxIndex : newIndex;\r\n            this.setThumbnailsPosition();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getSafeUrl = function (image) {\r\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailPosition = function (index, count) {\r\n        return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\r\n            + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\r\n    };\r\n    /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailDimension = function (count) {\r\n        if (this.margin !== 0) {\r\n            return this.getSafeStyle('calc(' + (100 / count) + '% - '\r\n                + (((count - 1) * this.margin) / count) + 'px)');\r\n        }\r\n        else {\r\n            return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getMaxIndex = function () {\r\n        return Math.ceil(this.images.length / this.rows);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getVisibleCount = function () {\r\n        return this.columns * this.rows;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getSafeStyle = function (value) {\r\n        return this.sanitization.bypassSecurityTrustStyle(value);\r\n    };\r\n    NgxGalleryThumbnailsComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-thumbnails',\r\n                    template: \"\\n    <div class=\\\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\\\">\\n        <div class=\\\"ngx-gallery-thumbnails\\\" [style.left]=\\\"thumbnailsLeft\\\" [style.marginLeft]=\\\"thumbnailsMarginLeft\\\">\\n            <a [href]=\\\"hasLinks() ? links[i] : '#'\\\" [target]=\\\"linkTarget\\\" class=\\\"ngx-gallery-thumbnail\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [style.background-image]=\\\"getSafeUrl(image)\\\" (click)=\\\"handleClick($event, i)\\\" [style.width]=\\\"getThumbnailWidth()\\\" [style.height]=\\\"getThumbnailHeight()\\\" [style.left]=\\\"getThumbnailLeft(i)\\\" [style.top]=\\\"getThumbnailTop(i)\\\" [ngClass]=\\\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, i)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-remaining-count-overlay\\\" *ngIf=\\\"remainingCount && remainingCountValue && (i == columns - 1)\\\">\\n                    <span class=\\\"ngx-gallery-remaining-count\\\">+{{remainingCountValue}}</span>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n    <ngx-gallery-arrows *ngIf=\\\"canShowArrows()\\\" (onPrevClick)=\\\"moveLeft()\\\" (onNextClick)=\\\"moveRight()\\\" [prevDisabled]=\\\"!canMoveLeft()\\\" [nextDisabled]=\\\"!canMoveRight()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\r\n                    styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-thumbnails-wrapper { width: 100%; height: 100%; position: absolute; overflow: hidden; } .ngx-gallery-thumbnails { height: 100%; width: 100%; position: absolute; left: 0px; transition: left 0.5s ease-in-out; } .ngx-gallery-thumbnails .ngx-gallery-thumbnail { position: absolute; height: 100%; background-position: center; background-repeat: no-repeat; text-decoration: none; } .ngx-gallery-thumbnail-size-cover .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: cover; } .ngx-gallery-thumbnail-size-contain .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: contain; } .ngx-gallery-remaining-count-overlay { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; background-color: rgba(0, 0, 0, 0.4); } .ngx-gallery-remaining-count { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 30px; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryThumbnailsComponent.ctorParameters = function () { return [\r\n        { type: platformBrowser.DomSanitizer, },\r\n        { type: core.ElementRef, },\r\n        { type: NgxGalleryHelperService, },\r\n    ]; };\r\n    NgxGalleryThumbnailsComponent.propDecorators = {\r\n        'images': [{ type: core.Input },],\r\n        'links': [{ type: core.Input },],\r\n        'linkTarget': [{ type: core.Input },],\r\n        'columns': [{ type: core.Input },],\r\n        'rows': [{ type: core.Input },],\r\n        'arrows': [{ type: core.Input },],\r\n        'arrowsAutoHide': [{ type: core.Input },],\r\n        'margin': [{ type: core.Input },],\r\n        'selectedIndex': [{ type: core.Input },],\r\n        'clickable': [{ type: core.Input },],\r\n        'swipe': [{ type: core.Input },],\r\n        'size': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'moveSize': [{ type: core.Input },],\r\n        'order': [{ type: core.Input },],\r\n        'remainingCount': [{ type: core.Input },],\r\n        'lazyLoading': [{ type: core.Input },],\r\n        'actions': [{ type: core.Input },],\r\n        'onActiveChange': [{ type: core.Output },],\r\n        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],\r\n        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],\r\n    };\r\n    return NgxGalleryThumbnailsComponent;\r\n}());\n\nvar NgxGalleryPreviewComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\r\n    function NgxGalleryPreviewComponent(sanitization, elementRef, helperService) {\r\n        this.sanitization = sanitization;\r\n        this.elementRef = elementRef;\r\n        this.helperService = helperService;\r\n        this.showSpinner = false;\r\n        this.positionLeft = 0;\r\n        this.positionTop = 0;\r\n        this.zoomValue = 1;\r\n        this.loading = false;\r\n        this.rotateValue = 0;\r\n        this.onOpen = new core.EventEmitter();\r\n        this.onClose = new core.EventEmitter();\r\n        this.onActiveChange = new core.EventEmitter();\r\n        this.index = 0;\r\n        this.isOpen = false;\r\n        this.initialX = 0;\r\n        this.initialY = 0;\r\n        this.initialLeft = 0;\r\n        this.initialTop = 0;\r\n        this.isMove = false;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (changes['swipe']) {\r\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'preview', function () { return _this.showNext(); }, function () { return _this.showPrev(); });\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.onKeyDown = function (e) {\r\n        if (this.isOpen) {\r\n            if (this.keyboardNavigation) {\r\n                if (this.isKeyboardPrev(e)) {\r\n                    this.showPrev();\r\n                }\r\n                else if (this.isKeyboardNext(e)) {\r\n                    this.showNext();\r\n                }\r\n            }\r\n            if (this.closeOnEsc && this.isKeyboardEsc(e)) {\r\n                this.close();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.open = function (index) {\r\n        this.onOpen.emit();\r\n        this.index = index;\r\n        this.isOpen = true;\r\n        this.show(true);\r\n        if (this.forceFullscreen) {\r\n            this.manageFullscreen();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.close = function () {\r\n        this.isOpen = false;\r\n        this.closeFullscreen();\r\n        this.onClose.emit();\r\n        this.stopAutoPlay();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.imageMouseEnter = function () {\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.stopAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.imageMouseLeave = function () {\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.startAutoPlay = function () {\r\n        var _this = this;\r\n        if (this.autoPlay) {\r\n            this.stopAutoPlay();\r\n            this.timer = setTimeout(function () {\r\n                if (!_this.showNext()) {\r\n                    _this.index = -1;\r\n                    _this.showNext();\r\n                }\r\n            }, this.autoPlayInterval);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.stopAutoPlay = function () {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.showNext = function () {\r\n        if (this.canShowNext()) {\r\n            this.index++;\r\n            if (this.index === this.images.length) {\r\n                this.index = 0;\r\n            }\r\n            this.show();\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.showPrev = function () {\r\n        if (this.canShowPrev()) {\r\n            this.index--;\r\n            if (this.index < 0) {\r\n                this.index = this.images.length - 1;\r\n            }\r\n            this.show();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canShowNext = function () {\r\n        if (this.loading) {\r\n            return false;\r\n        }\r\n        else if (this.images) {\r\n            return this.infinityMove || this.index < this.images.length - 1 ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canShowPrev = function () {\r\n        if (this.loading) {\r\n            return false;\r\n        }\r\n        else if (this.images) {\r\n            return this.infinityMove || this.index > 0 ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.manageFullscreen = function () {\r\n        if (this.fullscreen || this.forceFullscreen) {\r\n            var /** @type {?} */ doc = (document);\r\n            if (!doc.fullscreenElement && !doc.mozFullScreenElement\r\n                && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\r\n                this.openFullscreen();\r\n            }\r\n            else {\r\n                this.closeFullscreen();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getSafeUrl = function (image) {\r\n        return image.substr(0, 10) === 'data:image' ?\r\n            image : this.sanitization.bypassSecurityTrustUrl(image);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.zoomIn = function () {\r\n        if (this.canZoomIn()) {\r\n            this.zoomValue += this.zoomStep;\r\n            if (this.zoomValue > this.zoomMax) {\r\n                this.zoomValue = this.zoomMax;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.zoomOut = function () {\r\n        if (this.canZoomOut()) {\r\n            this.zoomValue -= this.zoomStep;\r\n            if (this.zoomValue < this.zoomMin) {\r\n                this.zoomValue = this.zoomMin;\r\n            }\r\n            if (this.zoomValue <= 1) {\r\n                this.resetPosition();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.rotateLeft = function () {\r\n        this.rotateValue -= 90;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.rotateRight = function () {\r\n        this.rotateValue += 90;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getTransform = function () {\r\n        return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canZoomIn = function () {\r\n        return this.zoomValue < this.zoomMax ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canZoomOut = function () {\r\n        return this.zoomValue > this.zoomMin ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canDragOnZoom = function () {\r\n        return this.zoom && this.zoomValue > 1;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.mouseDownHandler = function (e) {\r\n        if (this.canDragOnZoom()) {\r\n            this.initialX = this.getClientX(e);\r\n            this.initialY = this.getClientY(e);\r\n            this.initialLeft = this.positionLeft;\r\n            this.initialTop = this.positionTop;\r\n            this.isMove = true;\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.mouseUpHandler = function (e) {\r\n        this.isMove = false;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.mouseMoveHandler = function (e) {\r\n        if (this.isMove) {\r\n            this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\r\n            this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getClientX = function (e) {\r\n        return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getClientY = function (e) {\r\n        return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.resetPosition = function () {\r\n        if (this.zoom) {\r\n            this.positionLeft = 0;\r\n            this.positionTop = 0;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isKeyboardNext = function (e) {\r\n        return e.keyCode === 39 ? true : false;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isKeyboardPrev = function (e) {\r\n        return e.keyCode === 37 ? true : false;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isKeyboardEsc = function (e) {\r\n        return e.keyCode === 27 ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.openFullscreen = function () {\r\n        var /** @type {?} */ element = (document.documentElement);\r\n        if (element.requestFullscreen) {\r\n            element.requestFullscreen();\r\n        }\r\n        else if (element.msRequestFullscreen) {\r\n            element.msRequestFullscreen();\r\n        }\r\n        else if (element.mozRequestFullScreen) {\r\n            element.mozRequestFullScreen();\r\n        }\r\n        else if (element.webkitRequestFullscreen) {\r\n            element.webkitRequestFullscreen();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.closeFullscreen = function () {\r\n        var /** @type {?} */ doc = (document);\r\n        if (doc.exitFullscreen) {\r\n            doc.exitFullscreen();\r\n        }\r\n        else if (doc.msExitFullscreen) {\r\n            doc.msExitFullscreen();\r\n        }\r\n        else if (doc.mozCancelFullScreen) {\r\n            doc.mozCancelFullScreen();\r\n        }\r\n        else if (doc.webkitExitFullscreen) {\r\n            doc.webkitExitFullscreen();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?=} first\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.show = function (first) {\r\n        var _this = this;\r\n        if (first === void 0) { first = false; }\r\n        this.loading = true;\r\n        this.stopAutoPlay();\r\n        this.onActiveChange.emit(this.index);\r\n        if (first || !this.animation) {\r\n            this._show();\r\n        }\r\n        else {\r\n            setTimeout(function () { return _this._show(); }, 600);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype._show = function () {\r\n        var _this = this;\r\n        this.zoomValue = 1;\r\n        this.rotateValue = 0;\r\n        this.resetPosition();\r\n        this.src = this.getSafeUrl(/** @type {?} */ (this.images[this.index]));\r\n        this.srcIndex = this.index;\r\n        this.description = this.descriptions[this.index];\r\n        setTimeout(function () {\r\n            if (_this.isLoaded(_this.previewImage.nativeElement)) {\r\n                _this.loading = false;\r\n                _this.startAutoPlay();\r\n            }\r\n            else {\r\n                setTimeout(function () {\r\n                    if (_this.loading) {\r\n                        _this.showSpinner = true;\r\n                    }\r\n                });\r\n                _this.previewImage.nativeElement.onload = function () {\r\n                    _this.loading = false;\r\n                    _this.showSpinner = false;\r\n                    _this.previewImage.nativeElement.onload = null;\r\n                    _this.startAutoPlay();\r\n                };\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} img\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isLoaded = function (img) {\r\n        if (!img.complete) {\r\n            return false;\r\n        }\r\n        if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    NgxGalleryPreviewComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-preview',\r\n                    template: \"\\n        <ngx-gallery-arrows (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n        <div class=\\\"ngx-gallery-preview-top\\\">\\n            <div class=\\\"ngx-gallery-preview-icons\\\">\\n                <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event)\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomOutIcon\\\" [disabled]=\\\"!canZoomOut()\\\" (onClick)=\\\"zoomOut()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomInIcon\\\" [disabled]=\\\"!canZoomIn()\\\" (onClick)=\\\"zoomIn()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateLeftIcon\\\" (onClick)=\\\"rotateLeft()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateRightIcon\\\" (onClick)=\\\"rotateRight()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"fullscreen\\\" [icon]=\\\"'ngx-gallery-fullscreen ' + fullscreenIcon\\\" (onClick)=\\\"manageFullscreen()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action [icon]=\\\"'ngx-gallery-close ' + closeIcon\\\" (onClick)=\\\"close()\\\"></ngx-gallery-action>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-spinner-wrapper ngx-gallery-center\\\" [class.ngx-gallery-active]=\\\"showSpinner\\\">\\n            <i class=\\\"ngx-gallery-icon ngx-gallery-spinner {{spinnerIcon}}\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n        <div class=\\\"ngx-gallery-preview-wrapper\\\" (click)=\\\"closeOnClick && close()\\\" (mouseup)=\\\"mouseUpHandler($event)\\\" (mousemove)=\\\"mouseMoveHandler($event)\\\" (touchend)=\\\"mouseUpHandler($event)\\\" (touchmove)=\\\"mouseMoveHandler($event)\\\">\\n            <div class=\\\"ngx-gallery-preview-img-wrapper\\\">\\n                <img *ngIf=\\\"src\\\" #previewImage class=\\\"ngx-gallery-preview-img ngx-gallery-center\\\" [src]=\\\"src\\\" (click)=\\\"$event.stopPropagation()\\\" (mouseenter)=\\\"imageMouseEnter()\\\" (mouseleave)=\\\"imageMouseLeave()\\\" (mousedown)=\\\"mouseDownHandler($event)\\\" (touchstart)=\\\"mouseDownHandler($event)\\\" [class.ngx-gallery-active]=\\\"!loading\\\" [class.animation]=\\\"animation\\\" [class.ngx-gallery-grab]=\\\"canDragOnZoom()\\\" [style.transform]=\\\"getTransform()\\\" [style.left]=\\\"positionLeft + 'px'\\\" [style.top]=\\\"positionTop + 'px'\\\"/>\\n            </div>\\n            <div class=\\\"ngx-gallery-preview-text\\\" *ngIf=\\\"showDescription && description\\\" [innerHTML]=\\\"description\\\"></div>\\n        </div>\\n    \",\r\n                    styles: [\":host(.ngx-gallery-active) { width: 100%; height: 100%; position: fixed; left: 0; top: 0; background: rgba(0, 0, 0, 0.7); z-index: 10000; display: inline-block; } :host { display: none; } :host /deep/ .ngx-gallery-arrow { font-size: 50px; } .ngx-gallery-preview-img { opacity: 0; max-width: 90%; max-height: 90%; user-select: none; transition: transform .5s; } .ngx-gallery-preview-img.animation { transition: opacity 0.5s linear, transform .5s; } .ngx-gallery-preview-img.ngx-gallery-active { opacity: 1; } .ngx-gallery-preview-img.ngx-gallery-grab { cursor: grab; cursor: -webkit-grab; } .ngx-gallery-icon.ngx-gallery-spinner { font-size: 50px; left: 0; display: inline-block; } :host /deep/ .ngx-gallery-preview-top { position: absolute; width: 100%; user-select: none; } :host /deep/ .ngx-gallery-preview-icons { float: right; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon { position: relative; margin-right: 10px; margin-top: 10px; font-size: 25px; cursor: pointer; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon.ngx-gallery-icon-disabled { cursor: default; opacity: 0.4; } .ngx-spinner-wrapper { width: 50px; height: 50px; display: none; } .ngx-spinner-wrapper.ngx-gallery-active { display: inline-block; } .ngx-gallery-center { position: absolute; left: 0; right: 0; bottom: 0; margin: auto; top: 0; } .ngx-gallery-preview-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; flex: 0 1 auto; z-index: 10; } .ngx-gallery-preview-wrapper { width: 100%; height: 100%; display: flex; flex-flow: column; } .ngx-gallery-preview-img-wrapper { flex: 1 1 auto; position: relative; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryPreviewComponent.ctorParameters = function () { return [\r\n        { type: platformBrowser.DomSanitizer, },\r\n        { type: core.ElementRef, },\r\n        { type: NgxGalleryHelperService, },\r\n    ]; };\r\n    NgxGalleryPreviewComponent.propDecorators = {\r\n        'images': [{ type: core.Input },],\r\n        'descriptions': [{ type: core.Input },],\r\n        'showDescription': [{ type: core.Input },],\r\n        'swipe': [{ type: core.Input },],\r\n        'fullscreen': [{ type: core.Input },],\r\n        'forceFullscreen': [{ type: core.Input },],\r\n        'closeOnClick': [{ type: core.Input },],\r\n        'closeOnEsc': [{ type: core.Input },],\r\n        'keyboardNavigation': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'closeIcon': [{ type: core.Input },],\r\n        'fullscreenIcon': [{ type: core.Input },],\r\n        'spinnerIcon': [{ type: core.Input },],\r\n        'autoPlay': [{ type: core.Input },],\r\n        'autoPlayInterval': [{ type: core.Input },],\r\n        'autoPlayPauseOnHover': [{ type: core.Input },],\r\n        'infinityMove': [{ type: core.Input },],\r\n        'zoom': [{ type: core.Input },],\r\n        'zoomStep': [{ type: core.Input },],\r\n        'zoomMax': [{ type: core.Input },],\r\n        'zoomMin': [{ type: core.Input },],\r\n        'zoomInIcon': [{ type: core.Input },],\r\n        'zoomOutIcon': [{ type: core.Input },],\r\n        'animation': [{ type: core.Input },],\r\n        'actions': [{ type: core.Input },],\r\n        'rotate': [{ type: core.Input },],\r\n        'rotateLeftIcon': [{ type: core.Input },],\r\n        'rotateRightIcon': [{ type: core.Input },],\r\n        'onOpen': [{ type: core.Output },],\r\n        'onClose': [{ type: core.Output },],\r\n        'onActiveChange': [{ type: core.Output },],\r\n        'previewImage': [{ type: core.ViewChild, args: ['previewImage',] },],\r\n        'onKeyDown': [{ type: core.HostListener, args: ['window:keydown', ['$event'],] },],\r\n    };\r\n    return NgxGalleryPreviewComponent;\r\n}());\n\nvar NgxGalleryImageSize = /** @class */ (function () {\r\n    function NgxGalleryImageSize() {\r\n    }\r\n    NgxGalleryImageSize.Cover = 'cover';\r\n    NgxGalleryImageSize.Contain = 'contain';\r\n    return NgxGalleryImageSize;\r\n}());\n\nvar NgxGalleryLayout = /** @class */ (function () {\r\n    function NgxGalleryLayout() {\r\n    }\r\n    NgxGalleryLayout.ThumbnailsTop = 'thumbnails-top';\r\n    NgxGalleryLayout.ThumbnailsBottom = 'thumbnails-bottom';\r\n    return NgxGalleryLayout;\r\n}());\n\nvar NgxGalleryAction = /** @class */ (function () {\r\n    /**\r\n     * @param {?} action\r\n     */\r\n    function NgxGalleryAction(action) {\r\n        this.icon = action.icon;\r\n        this.disabled = action.disabled ? action.disabled : false;\r\n        this.titleText = action.titleText ? action.titleText : '';\r\n        this.onClick = action.onClick;\r\n    }\r\n    return NgxGalleryAction;\r\n}());\n\nvar NgxGalleryOptions = /** @class */ (function () {\r\n    /**\r\n     * @param {?} obj\r\n     */\r\n    function NgxGalleryOptions(obj) {\r\n        var preventDefaults = obj.breakpoint === undefined ? false : true;\r\n        function use(source, defaultValue) {\r\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\r\n        }\r\n        this.breakpoint = use(obj.breakpoint, undefined);\r\n        this.width = use(obj.width, '500px');\r\n        this.height = use(obj.height, '400px');\r\n        this.fullWidth = use(obj.fullWidth, false);\r\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\r\n        this.startIndex = use(obj.startIndex, 0);\r\n        this.linkTarget = use(obj.linkTarget, '_blank');\r\n        this.lazyLoading = use(obj.lazyLoading, true);\r\n        this.image = use(obj.image, true);\r\n        this.imagePercent = use(obj.imagePercent, 75);\r\n        this.imageArrows = use(obj.imageArrows, true);\r\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\r\n        this.imageSwipe = use(obj.imageSwipe, false);\r\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\r\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\r\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\r\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\r\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\r\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\r\n        if (obj && obj.imageActions && obj.imageActions.length) {\r\n            obj.imageActions = obj.imageActions.map(function (action) { return new NgxGalleryAction(action); });\r\n        }\r\n        this.imageActions = use(obj.imageActions, []);\r\n        this.imageDescription = use(obj.imageDescription, false);\r\n        this.thumbnails = use(obj.thumbnails, true);\r\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\r\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\r\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\r\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\r\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\r\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\r\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\r\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\r\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\r\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\r\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\r\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\r\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\r\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\r\n            obj.thumbnailActions = obj.thumbnailActions.map(function (action) { return new NgxGalleryAction(action); });\r\n        }\r\n        this.thumbnailActions = use(obj.thumbnailActions, []);\r\n        this.preview = use(obj.preview, true);\r\n        this.previewDescription = use(obj.previewDescription, true);\r\n        this.previewSwipe = use(obj.previewSwipe, false);\r\n        this.previewFullscreen = use(obj.previewFullscreen, false);\r\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\r\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\r\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\r\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\r\n        this.previewAnimation = use(obj.previewAnimation, true);\r\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\r\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\r\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\r\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\r\n        this.previewZoom = use(obj.previewZoom, false);\r\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\r\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\r\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\r\n        this.previewRotate = use(obj.previewRotate, false);\r\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\r\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\r\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\r\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\r\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\r\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\r\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\r\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\r\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\r\n        if (obj && obj.actions && obj.actions.length) {\r\n            obj.actions = obj.actions.map(function (action) { return new NgxGalleryAction(action); });\r\n        }\r\n        this.actions = use(obj.actions, []);\r\n    }\r\n    return NgxGalleryOptions;\r\n}());\n\nvar NgxGalleryOrderedImage = /** @class */ (function () {\r\n    /**\r\n     * @param {?} obj\r\n     */\r\n    function NgxGalleryOrderedImage(obj) {\r\n        this.src = obj.src;\r\n        this.index = obj.index;\r\n    }\r\n    return NgxGalleryOrderedImage;\r\n}());\n\nvar NgxGalleryComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} myElement\r\n     */\r\n    function NgxGalleryComponent(myElement) {\r\n        this.myElement = myElement;\r\n        this.imagesReady = new core.EventEmitter();\r\n        this.change = new core.EventEmitter();\r\n        this.previewOpen = new core.EventEmitter();\r\n        this.previewClose = new core.EventEmitter();\r\n        this.previewChange = new core.EventEmitter();\r\n        this.oldImagesLength = 0;\r\n        this.selectedIndex = 0;\r\n        this.breakpoint = undefined;\r\n        this.prevBreakpoint = undefined;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.ngOnInit = function () {\r\n        this.options = this.options.map(function (opt) { return new NgxGalleryOptions(opt); });\r\n        this.sortOptions();\r\n        this.setBreakpoint();\r\n        this.setOptions();\r\n        this.checkFullWidth();\r\n        if (this.currentOptions) {\r\n            this.selectedIndex = /** @type {?} */ (this.currentOptions.startIndex);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.ngDoCheck = function () {\r\n        if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\r\n            || (this.images !== this.oldImages)) {\r\n            this.oldImagesLength = this.images.length;\r\n            this.oldImages = this.images;\r\n            this.setImages();\r\n            if (this.images && this.images.length) {\r\n                this.imagesReady.emit();\r\n            }\r\n            if (this.image) {\r\n                this.image.reset(/** @type {?} */ (this.currentOptions.startIndex));\r\n            }\r\n            this.resetThumbnails();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.ngAfterViewInit = function () {\r\n        this.checkFullWidth();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.onResize = function () {\r\n        var _this = this;\r\n        this.setBreakpoint();\r\n        if (this.prevBreakpoint !== this.breakpoint) {\r\n            this.setOptions();\r\n            this.resetThumbnails();\r\n        }\r\n        if (this.currentOptions && this.currentOptions.fullWidth) {\r\n            if (this.fullWidthTimeout) {\r\n                clearTimeout(this.fullWidthTimeout);\r\n            }\r\n            this.fullWidthTimeout = setTimeout(function () {\r\n                _this.checkFullWidth();\r\n            }, 200);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getImageHeight = function () {\r\n        return (this.currentOptions && this.currentOptions.thumbnails) ?\r\n            this.currentOptions.imagePercent + '%' : '100%';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getThumbnailsHeight = function () {\r\n        if (this.currentOptions && this.currentOptions.image) {\r\n            return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\r\n                + this.currentOptions.thumbnailsMargin + 'px)';\r\n        }\r\n        else {\r\n            return '100%';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getThumbnailsMarginTop = function () {\r\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\r\n            return this.currentOptions.thumbnailsMargin + 'px';\r\n        }\r\n        else {\r\n            return '0px';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getThumbnailsMarginBottom = function () {\r\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\r\n            return this.currentOptions.thumbnailsMargin + 'px';\r\n        }\r\n        else {\r\n            return '0px';\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.openPreview = function (index) {\r\n        this.previewEnabled = true;\r\n        this.preview.open(index);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.onPreviewOpen = function () {\r\n        this.previewOpen.emit();\r\n        if (this.image && this.image.autoPlay) {\r\n            this.image.stopAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.onPreviewClose = function () {\r\n        this.previewEnabled = false;\r\n        this.previewClose.emit();\r\n        if (this.image && this.image.autoPlay) {\r\n            this.image.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.selectFromImage = function (index) {\r\n        this.select(index);\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.selectFromThumbnails = function (index) {\r\n        this.select(index);\r\n        if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\r\n            && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\r\n            this.openPreview(this.selectedIndex);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.show = function (index) {\r\n        this.select(index);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.showNext = function () {\r\n        this.image.showNext();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.showPrev = function () {\r\n        this.image.showPrev();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.canShowNext = function () {\r\n        if (this.images && this.currentOptions) {\r\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\r\n                ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.canShowPrev = function () {\r\n        if (this.images && this.currentOptions) {\r\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.previewSelect = function (index) {\r\n        this.previewChange.emit({ index: index, image: this.images[index] });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.resetThumbnails = function () {\r\n        if (this.thubmnails) {\r\n            this.thubmnails.reset(/** @type {?} */ (this.currentOptions.startIndex));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.select = function (index) {\r\n        this.selectedIndex = index;\r\n        this.change.emit({\r\n            index: index,\r\n            image: this.images[index]\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.checkFullWidth = function () {\r\n        if (this.currentOptions && this.currentOptions.fullWidth) {\r\n            this.width = document.body.clientWidth + 'px';\r\n            this.left = (-(document.body.clientWidth -\r\n                this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.setImages = function () {\r\n        this.smallImages = this.images.map(function (img) { /** @type {?} */ return (img.small); });\r\n        this.mediumImages = this.images.map(function (img, i) { return new NgxGalleryOrderedImage({\r\n            src: img.medium,\r\n            index: i\r\n        }); });\r\n        this.bigImages = this.images.map(function (img) { /** @type {?} */ return (img.big); });\r\n        this.descriptions = this.images.map(function (img) { /** @type {?} */ return (img.description); });\r\n        this.links = this.images.map(function (img) { /** @type {?} */ return (img.url); });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.setBreakpoint = function () {\r\n        this.prevBreakpoint = this.breakpoint;\r\n        var /** @type {?} */ breakpoints;\r\n        if (typeof window !== 'undefined') {\r\n            breakpoints = this.options.filter(function (opt) { return opt.breakpoint >= window.innerWidth; })\r\n                .map(function (opt) { return opt.breakpoint; });\r\n        }\r\n        if (breakpoints && breakpoints.length) {\r\n            this.breakpoint = breakpoints.pop();\r\n        }\r\n        else {\r\n            this.breakpoint = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.sortOptions = function () {\r\n        this.options = this.options.filter(function (a) { return a.breakpoint === undefined; }).concat(this.options\r\n            .filter(function (a) { return a.breakpoint !== undefined; })\r\n            .sort(function (a, b) { return b.breakpoint - a.breakpoint; }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.setOptions = function () {\r\n        var _this = this;\r\n        this.currentOptions = new NgxGalleryOptions({});\r\n        this.options\r\n            .filter(function (opt) { return opt.breakpoint === undefined || opt.breakpoint >= _this.breakpoint; })\r\n            .map(function (opt) { return _this.combineOptions(_this.currentOptions, opt); });\r\n        this.width = /** @type {?} */ (this.currentOptions.width);\r\n        this.height = /** @type {?} */ (this.currentOptions.height);\r\n    };\r\n    /**\r\n     * @param {?} first\r\n     * @param {?} second\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.combineOptions = function (first, second) {\r\n        Object.keys(second).map(function (val) { return first[val] = second[val] !== undefined ? second[val] : first[val]; });\r\n    };\r\n    NgxGalleryComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery',\r\n                    template: \"\\n    <div class=\\\"ngx-gallery-layout {{currentOptions?.layout}}\\\">\\n        <ngx-gallery-image *ngIf=\\\"currentOptions?.image\\\" [style.height]=\\\"getImageHeight()\\\" [images]=\\\"mediumImages\\\" [clickable]=\\\"currentOptions?.preview\\\" [selectedIndex]=\\\"selectedIndex\\\" [arrows]=\\\"currentOptions?.imageArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.imageArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [swipe]=\\\"currentOptions?.imageSwipe\\\" [animation]=\\\"currentOptions?.imageAnimation\\\" [size]=\\\"currentOptions?.imageSize\\\" [autoPlay]=\\\"currentOptions?.imageAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.imageAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.imageAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.imageInfinityMove\\\"  [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.imageActions\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.imageDescription\\\" (onClick)=\\\"openPreview($event)\\\" (onActiveChange)=\\\"selectFromImage($event)\\\"></ngx-gallery-image>\\n\\n        <ngx-gallery-thumbnails *ngIf=\\\"currentOptions?.thumbnails\\\" [style.marginTop]=\\\"getThumbnailsMarginTop()\\\" [style.marginBottom]=\\\"getThumbnailsMarginBottom()\\\" [style.height]=\\\"getThumbnailsHeight()\\\" [images]=\\\"smallImages\\\" [links]=\\\"currentOptions?.thumbnailsAsLinks ? links : []\\\" [linkTarget]=\\\"currentOptions?.linkTarget\\\" [selectedIndex]=\\\"selectedIndex\\\" [columns]=\\\"currentOptions?.thumbnailsColumns\\\" [rows]=\\\"currentOptions?.thumbnailsRows\\\" [margin]=\\\"currentOptions?.thumbnailMargin\\\" [arrows]=\\\"currentOptions?.thumbnailsArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.thumbnailsArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [clickable]=\\\"currentOptions?.image || currentOptions?.preview\\\" [swipe]=\\\"currentOptions?.thumbnailsSwipe\\\" [size]=\\\"currentOptions?.thumbnailSize\\\" [moveSize]=\\\"currentOptions?.thumbnailsMoveSize\\\" [order]=\\\"currentOptions?.thumbnailsOrder\\\" [remainingCount]=\\\"currentOptions?.thumbnailsRemainingCount\\\" [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.thumbnailActions\\\"  (onActiveChange)=\\\"selectFromThumbnails($event)\\\"></ngx-gallery-thumbnails>\\n\\n        <ngx-gallery-preview [images]=\\\"bigImages\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.previewDescription\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [closeIcon]=\\\"currentOptions?.closeIcon\\\" [fullscreenIcon]=\\\"currentOptions?.fullscreenIcon\\\" [spinnerIcon]=\\\"currentOptions?.spinnerIcon\\\" [swipe]=\\\"currentOptions?.previewSwipe\\\" [fullscreen]=\\\"currentOptions?.previewFullscreen\\\" [forceFullscreen]=\\\"currentOptions?.previewForceFullscreen\\\" [closeOnClick]=\\\"currentOptions?.previewCloseOnClick\\\" [closeOnEsc]=\\\"currentOptions?.previewCloseOnEsc\\\" [keyboardNavigation]=\\\"currentOptions?.previewKeyboardNavigation\\\" [animation]=\\\"currentOptions?.previewAnimation\\\" [autoPlay]=\\\"currentOptions?.previewAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.previewAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.previewAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.previewInfinityMove\\\" [zoom]=\\\"currentOptions?.previewZoom\\\" [zoomStep]=\\\"currentOptions?.previewZoomStep\\\" [zoomMax]=\\\"currentOptions?.previewZoomMax\\\" [zoomMin]=\\\"currentOptions?.previewZoomMin\\\" [zoomInIcon]=\\\"currentOptions?.zoomInIcon\\\" [zoomOutIcon]=\\\"currentOptions?.zoomOutIcon\\\" [actions]=\\\"currentOptions?.actions\\\" [rotate]=\\\"currentOptions?.previewRotate\\\" [rotateLeftIcon]=\\\"currentOptions?.rotateLeftIcon\\\" [rotateRightIcon]=\\\"currentOptions?.rotateRightIcon\\\"  (onClose)=\\\"onPreviewClose()\\\" (onOpen)=\\\"onPreviewOpen()\\\" (onActiveChange)=\\\"previewSelect($event)\\\" [class.ngx-gallery-active]=\\\"previewEnabled\\\"></ngx-gallery-preview>\\n    </div>\\n    \",\r\n                    styles: [\":host { display: inline-block; } :host > * { float: left; } :host /deep/ * { box-sizing: border-box; } :host /deep/ .ngx-gallery-icon { color: white; font-size: 25px; position: absolute; z-index: 2000; display: inline-block; } :host /deep/ .ngx-gallery-icon .ngx-gallery-icon-content { display: block; } :host /deep/ .ngx-gallery-clickable { cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper .ngx-gallery-icon { position: relative; margin-right: 5px; margin-top: 5px; font-size: 20px; cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper { float: right; } :host .ngx-gallery-layout { width: 100%; height: 100%; display: flex; flex-direction: column; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-image { order: 2; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-thumbnails { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-image { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-thumbnails { order: 2; } \"],\r\n                    providers: [NgxGalleryHelperService]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryComponent.ctorParameters = function () { return [\r\n        { type: core.ElementRef, },\r\n    ]; };\r\n    NgxGalleryComponent.propDecorators = {\r\n        'options': [{ type: core.Input },],\r\n        'images': [{ type: core.Input },],\r\n        'imagesReady': [{ type: core.Output },],\r\n        'change': [{ type: core.Output },],\r\n        'previewOpen': [{ type: core.Output },],\r\n        'previewClose': [{ type: core.Output },],\r\n        'previewChange': [{ type: core.Output },],\r\n        'preview': [{ type: core.ViewChild, args: [NgxGalleryPreviewComponent,] },],\r\n        'image': [{ type: core.ViewChild, args: [NgxGalleryImageComponent,] },],\r\n        'thubmnails': [{ type: core.ViewChild, args: [NgxGalleryThumbnailsComponent,] },],\r\n        'width': [{ type: core.HostBinding, args: ['style.width',] },],\r\n        'height': [{ type: core.HostBinding, args: ['style.height',] },],\r\n        'left': [{ type: core.HostBinding, args: ['style.left',] },],\r\n        'onResize': [{ type: core.HostListener, args: ['window:resize',] },],\r\n    };\r\n    return NgxGalleryComponent;\r\n}());\n\nvar NgxGalleryImage = /** @class */ (function () {\r\n    /**\r\n     * @param {?} obj\r\n     */\r\n    function NgxGalleryImage(obj) {\r\n        this.small = obj.small;\r\n        this.medium = obj.medium;\r\n        this.big = obj.big;\r\n        this.description = obj.description;\r\n        this.url = obj.url;\r\n    }\r\n    return NgxGalleryImage;\r\n}());\n\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar CustomHammerConfig = /** @class */ (function (_super) {\r\n    __extends(CustomHammerConfig, _super);\r\n    function CustomHammerConfig() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.overrides = ({\r\n            'pinch': { enable: false },\r\n            'rotate': { enable: false }\r\n        });\r\n        return _this;\r\n    }\r\n    return CustomHammerConfig;\r\n}(platformBrowser.HammerGestureConfig));\r\nvar NgxGalleryModule = /** @class */ (function () {\r\n    function NgxGalleryModule() {\r\n    }\r\n    NgxGalleryModule.decorators = [\r\n        { type: core.NgModule, args: [{\r\n                    imports: [\r\n                        common.CommonModule\r\n                    ],\r\n                    declarations: [\r\n                        NgxGalleryActionComponent,\r\n                        NgxGalleryArrowsComponent,\r\n                        NgxGalleryImageComponent,\r\n                        NgxGalleryThumbnailsComponent,\r\n                        NgxGalleryPreviewComponent,\r\n                        NgxGalleryComponent\r\n                    ],\r\n                    exports: [\r\n                        NgxGalleryComponent\r\n                    ],\r\n                    providers: [\r\n                        { provide: platformBrowser.HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }\r\n                    ]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryModule.ctorParameters = function () { return []; };\r\n    return NgxGalleryModule;\r\n}());\n\nexports.CustomHammerConfig = CustomHammerConfig;\nexports.NgxGalleryModule = NgxGalleryModule;\nexports.NgxGalleryComponent = NgxGalleryComponent;\nexports.NgxGalleryActionComponent = NgxGalleryActionComponent;\nexports.NgxGalleryImageComponent = NgxGalleryImageComponent;\nexports.NgxGalleryThumbnailsComponent = NgxGalleryThumbnailsComponent;\nexports.NgxGalleryPreviewComponent = NgxGalleryPreviewComponent;\nexports.NgxGalleryArrowsComponent = NgxGalleryArrowsComponent;\nexports.NgxGalleryOptions = NgxGalleryOptions;\nexports.NgxGalleryImage = NgxGalleryImage;\nexports.NgxGalleryAnimation = NgxGalleryAnimation;\nexports.NgxGalleryHelperService = NgxGalleryHelperService;\nexports.NgxGalleryImageSize = NgxGalleryImageSize;\nexports.NgxGalleryLayout = NgxGalleryLayout;\nexports.NgxGalleryOrder = NgxGalleryOrder;\nexports.NgxGalleryOrderedImage = NgxGalleryOrderedImage;\nexports.NgxGalleryAction = NgxGalleryAction;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"script"}