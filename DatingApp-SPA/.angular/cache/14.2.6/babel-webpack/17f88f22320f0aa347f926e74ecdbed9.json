{"ast":null,"code":"import { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_service/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_service/alertify.service\";\nexport let MemberDetailResolver = /*#__PURE__*/(() => {\n  class MemberDetailResolver {\n    constructor(userService, router, alertiryService) {\n      this.userService = userService;\n      this.router = router;\n      this.alertiryService = alertiryService;\n    }\n\n    resolve(route, state) {\n      return this.userService.getUser(route.params['id']).pipe(catchError(error => {\n        this.alertiryService.error(\"Problem retrieving data\");\n        this.router.navigate(['/members']); //return of('no data');\n\n        return throwError(\"\");\n      }));\n    }\n\n  }\n\n  MemberDetailResolver.ɵfac = function MemberDetailResolver_Factory(t) {\n    return new (t || MemberDetailResolver)(i0.ɵɵinject(i1.UserService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AlertifyService));\n  };\n\n  MemberDetailResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MemberDetailResolver,\n    factory: MemberDetailResolver.ɵfac\n  });\n  return MemberDetailResolver;\n})();","map":null,"metadata":{},"sourceType":"module"}