{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/platform-browser')) : typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/platform-browser'], factory) : factory(global['ngx-gallery'] = {}, global.core, global.common, global.platformBrowser);\n})(this, function (exports, core, common, platformBrowser) {\n  'use strict';\n\n  var NgxGalleryActionComponent =\n  /** @class */\n  function () {\n    function NgxGalleryActionComponent() {\n      this.disabled = false;\n      this.titleText = '';\n      this.onClick = new core.EventEmitter();\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryActionComponent.prototype.handleClick = function (event) {\n      if (!this.disabled) {\n        this.onClick.emit(event);\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n    };\n\n    NgxGalleryActionComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-action',\n        template: \"\\n        <div class=\\\"ngx-gallery-icon\\\" [class.ngx-gallery-icon-disabled]=\\\"disabled\\\"\\n            aria-hidden=\\\"true\\\"\\n            title=\\\"{{ titleText }}\\\"\\n            (click)=\\\"handleClick($event)\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{ icon }}\\\"></i>\\n        </div>\",\n        changeDetection: core.ChangeDetectionStrategy.OnPush\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryActionComponent.ctorParameters = function () {\n      return [];\n    };\n\n    NgxGalleryActionComponent.propDecorators = {\n      'icon': [{\n        type: core.Input\n      }],\n      'disabled': [{\n        type: core.Input\n      }],\n      'titleText': [{\n        type: core.Input\n      }],\n      'onClick': [{\n        type: core.Output\n      }]\n    };\n    return NgxGalleryActionComponent;\n  }();\n\n  var NgxGalleryArrowsComponent =\n  /** @class */\n  function () {\n    function NgxGalleryArrowsComponent() {\n      this.onPrevClick = new core.EventEmitter();\n      this.onNextClick = new core.EventEmitter();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryArrowsComponent.prototype.handlePrevClick = function () {\n      this.onPrevClick.emit();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryArrowsComponent.prototype.handleNextClick = function () {\n      this.onNextClick.emit();\n    };\n\n    NgxGalleryArrowsComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-arrows',\n        template: \"\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handlePrevClick()\\\" [class.ngx-gallery-disabled]=\\\"prevDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowPrevIcon}}\\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handleNextClick()\\\" [class.ngx-gallery-disabled]=\\\"nextDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowNextIcon}}\\\"></i>\\n            </div>\\n        </div>\\n    \",\n        styles: [\".ngx-gallery-arrow-wrapper { position: absolute; height: 100%; width: 1px; display: table; z-index: 2000; table-layout: fixed; } .ngx-gallery-arrow-left { left: 0px; } .ngx-gallery-arrow-right { right: 0px; } .ngx-gallery-arrow { top: 50%; transform: translateY(-50%); cursor: pointer; } .ngx-gallery-arrow.ngx-gallery-disabled { opacity: 0.6; cursor: default; } .ngx-gallery-arrow-left .ngx-gallery-arrow { left: 10px; } .ngx-gallery-arrow-right .ngx-gallery-arrow { right: 10px; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryArrowsComponent.ctorParameters = function () {\n      return [];\n    };\n\n    NgxGalleryArrowsComponent.propDecorators = {\n      'prevDisabled': [{\n        type: core.Input\n      }],\n      'nextDisabled': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'onPrevClick': [{\n        type: core.Output\n      }],\n      'onNextClick': [{\n        type: core.Output\n      }]\n    };\n    return NgxGalleryArrowsComponent;\n  }();\n\n  var NgxGalleryBulletsComponent =\n  /** @class */\n  function () {\n    function NgxGalleryBulletsComponent() {\n      this.active = 0;\n      this.onChange = new core.EventEmitter();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryBulletsComponent.prototype.getBullets = function () {\n      return Array(this.count);\n    };\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryBulletsComponent.prototype.handleChange = function (event, index) {\n      this.onChange.emit(index);\n    };\n\n    NgxGalleryBulletsComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-bullets',\n        template: \"\\n        <div class=\\\"ngx-gallery-bullet\\\" *ngFor=\\\"let bullet of getBullets(); let i = index;\\\" (click)=\\\"handleChange($event, i)\\\" [ngClass]=\\\"{ 'ngx-gallery-active': i == active }\\\"></div>\\n    \",\n        styles: [\":host { position: absolute; z-index: 2000; display: inline-flex; left: 50%; transform: translateX(-50%); bottom: 0px; padding: 10px; } .ngx-gallery-bullet { width: 10px; height: 10px; border-radius: 50%; cursor: pointer; background: white; } .ngx-gallery-bullet:not(:first-child) { margin-left: 5px; } .ngx-gallery-bullet:hover, .ngx-gallery-bullet.ngx-gallery-active { background: black; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryBulletsComponent.ctorParameters = function () {\n      return [];\n    };\n\n    NgxGalleryBulletsComponent.propDecorators = {\n      'count': [{\n        type: core.Input\n      }],\n      'active': [{\n        type: core.Input\n      }],\n      'onChange': [{\n        type: core.Output\n      }]\n    };\n    return NgxGalleryBulletsComponent;\n  }();\n\n  var NgxGalleryHelperService =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} renderer\r\n     */\n    function NgxGalleryHelperService(renderer) {\n      this.renderer = renderer;\n      this.swipeHandlers = new Map();\n    }\n    /**\r\n     * @param {?} status\r\n     * @param {?} element\r\n     * @param {?} id\r\n     * @param {?} nextHandler\r\n     * @param {?} prevHandler\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.manageSwipe = function (status, element, id, nextHandler, prevHandler) {\n      var\n      /** @type {?} */\n      handlers = this.getSwipeHandlers(id); // swipeleft and swiperight are available only if hammerjs is included\n\n      try {\n        if (status && !handlers) {\n          this.swipeHandlers.set(id, [this.renderer.listen(element.nativeElement, 'swipeleft', function () {\n            return nextHandler();\n          }), this.renderer.listen(element.nativeElement, 'swiperight', function () {\n            return prevHandler();\n          })]);\n        } else if (!status && handlers) {\n          handlers.map(function (handler) {\n            return handler();\n          });\n          this.removeSwipeHandlers(id);\n        }\n      } catch (e) {}\n    };\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.validateUrl = function (url) {\n      if (url.replace) {\n        return url.replace(new RegExp(' ', 'g'), '%20').replace(new RegExp('\\'', 'g'), '%27');\n      } else {\n        return url;\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.getBackgroundUrl = function (image) {\n      return 'url(\\'' + this.validateUrl(image) + '\\')';\n    };\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.getSwipeHandlers = function (id) {\n      return this.swipeHandlers.get(id);\n    };\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.removeSwipeHandlers = function (id) {\n      this.swipeHandlers.delete(id);\n    };\n\n    NgxGalleryHelperService.decorators = [{\n      type: core.Injectable\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryHelperService.ctorParameters = function () {\n      return [{\n        type: core.Renderer\n      }];\n    };\n\n    return NgxGalleryHelperService;\n  }();\n\n  var NgxGalleryAnimation =\n  /** @class */\n  function () {\n    function NgxGalleryAnimation() {}\n\n    NgxGalleryAnimation.Fade = 'fade';\n    NgxGalleryAnimation.Slide = 'slide';\n    NgxGalleryAnimation.Rotate = 'rotate';\n    NgxGalleryAnimation.Zoom = 'zoom';\n    return NgxGalleryAnimation;\n  }();\n\n  var NgxGalleryImageComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\n    function NgxGalleryImageComponent(sanitization, elementRef, helperService) {\n      this.sanitization = sanitization;\n      this.elementRef = elementRef;\n      this.helperService = helperService;\n      this.onClick = new core.EventEmitter();\n      this.onActiveChange = new core.EventEmitter();\n      this.canChangeImage = true;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.ngOnInit = function () {\n      if (this.arrows && this.arrowsAutoHide) {\n        this.arrows = false;\n      }\n\n      if (this.autoPlay) {\n        this.startAutoPlay();\n      }\n    };\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.ngOnChanges = function (changes) {\n      var _this = this;\n\n      if (changes['swipe']) {\n        this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', function () {\n          return _this.showNext();\n        }, function () {\n          return _this.showPrev();\n        });\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.onMouseEnter = function () {\n      if (this.arrowsAutoHide && !this.arrows) {\n        this.arrows = true;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.stopAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.onMouseLeave = function () {\n      if (this.arrowsAutoHide && this.arrows) {\n        this.arrows = false;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.startAutoPlay();\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.reset = function (index) {\n      this.selectedIndex = index;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.getImages = function () {\n      if (!this.images) {\n        return [];\n      }\n\n      if (this.lazyLoading) {\n        var\n        /** @type {?} */\n        indexes_1 = [this.selectedIndex];\n        var\n        /** @type {?} */\n        prevIndex = this.selectedIndex - 1;\n\n        if (prevIndex === -1 && this.infinityMove) {\n          indexes_1.push(this.images.length - 1);\n        } else if (prevIndex >= 0) {\n          indexes_1.push(prevIndex);\n        }\n\n        var\n        /** @type {?} */\n        nextIndex = this.selectedIndex + 1;\n\n        if (nextIndex == this.images.length && this.infinityMove) {\n          indexes_1.push(0);\n        } else if (nextIndex < this.images.length) {\n          indexes_1.push(nextIndex);\n        }\n\n        return this.images.filter(function (img, i) {\n          return indexes_1.indexOf(i) != -1;\n        });\n      } else {\n        return this.images;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.startAutoPlay = function () {\n      var _this = this;\n\n      this.stopAutoPlay();\n      this.timer = setInterval(function () {\n        if (!_this.showNext()) {\n          _this.selectedIndex = -1;\n\n          _this.showNext();\n        }\n      }, this.autoPlayInterval);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.stopAutoPlay = function () {\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n    };\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.handleClick = function (event, index) {\n      if (this.clickable) {\n        this.onClick.emit(index);\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.show = function (index) {\n      this.selectedIndex = index;\n      this.onActiveChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.showNext = function () {\n      if (this.canShowNext() && this.canChangeImage) {\n        this.selectedIndex++;\n\n        if (this.selectedIndex === this.images.length) {\n          this.selectedIndex = 0;\n        }\n\n        this.onActiveChange.emit(this.selectedIndex);\n        this.setChangeTimeout();\n        return true;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.showPrev = function () {\n      if (this.canShowPrev() && this.canChangeImage) {\n        this.selectedIndex--;\n\n        if (this.selectedIndex < 0) {\n          this.selectedIndex = this.images.length - 1;\n        }\n\n        this.onActiveChange.emit(this.selectedIndex);\n        this.setChangeTimeout();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.setChangeTimeout = function () {\n      var _this = this;\n\n      this.canChangeImage = false;\n      var\n      /** @type {?} */\n      timeout = 1000;\n\n      if (this.animation === NgxGalleryAnimation.Slide || this.animation === NgxGalleryAnimation.Fade) {\n        timeout = 500;\n      }\n\n      setTimeout(function () {\n        _this.canChangeImage = true;\n      }, timeout);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.canShowNext = function () {\n      if (this.images) {\n        return this.infinityMove || this.selectedIndex < this.images.length - 1 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.canShowPrev = function () {\n      if (this.images) {\n        return this.infinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.getSafeUrl = function (image) {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    };\n\n    NgxGalleryImageComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-image',\n        template: \"\\n        <div class=\\\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\\\">\\n            <div class=\\\"ngx-gallery-image\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [ngClass]=\\\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\\\" [style.background-image]=\\\"getSafeUrl(image.src)\\\" (click)=\\\"handleClick($event, image.index)\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, image.index)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-image-text\\\" *ngIf=\\\"showDescription && descriptions[image.index]\\\" [innerHTML]=\\\"descriptions[image.index]\\\" (click)=\\\"$event.stopPropagation()\\\"></div>\\n            </div>\\n        </div>\\n        <ngx-gallery-bullets *ngIf=\\\"bullets\\\" [count]=\\\"images.length\\\" [active]=\\\"selectedIndex\\\" (onChange)=\\\"show($event)\\\"></ngx-gallery-bullets>\\n        <ngx-gallery-arrows class=\\\"ngx-gallery-image-size-{{size}}\\\" *ngIf=\\\"arrows\\\" (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\n        styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-image-wrapper { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; overflow: hidden; } .ngx-gallery-image { background-position: center; background-repeat: no-repeat; height: 100%; width: 100%; position: absolute; top: 0px; } .ngx-gallery-image.ngx-gallery-active { z-index: 1000; } .ngx-gallery-image-size-cover .ngx-gallery-image { background-size: cover; } .ngx-gallery-image-size-contain .ngx-gallery-image { background-size: contain; } .ngx-gallery-animation-fade .ngx-gallery-image { left: 0px; opacity: 0; transition: 0.5s ease-in-out; } .ngx-gallery-animation-fade .ngx-gallery-image.ngx-gallery-active { opacity: 1; } .ngx-gallery-animation-slide .ngx-gallery-image { transition: 0.5s ease-in-out; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-active { left: 0px; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-left { left: -100%; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-right { left: 100%; } .ngx-gallery-animation-rotate .ngx-gallery-image { transition: 1s ease; transform: scale(3.5, 3.5) rotate(90deg); left: 0px; opacity: 0; } .ngx-gallery-animation-rotate .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1) rotate(0deg); opacity: 1; } .ngx-gallery-animation-zoom .ngx-gallery-image { transition: 1s ease; transform: scale(2.5, 2.5); left: 0px; opacity: 0; } .ngx-gallery-animation-zoom .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1); opacity: 1; } .ngx-gallery-image-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; position: absolute; bottom: 0px; z-index: 10; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryImageComponent.ctorParameters = function () {\n      return [{\n        type: platformBrowser.DomSanitizer\n      }, {\n        type: core.ElementRef\n      }, {\n        type: NgxGalleryHelperService\n      }];\n    };\n\n    NgxGalleryImageComponent.propDecorators = {\n      'images': [{\n        type: core.Input\n      }],\n      'clickable': [{\n        type: core.Input\n      }],\n      'selectedIndex': [{\n        type: core.Input\n      }],\n      'arrows': [{\n        type: core.Input\n      }],\n      'arrowsAutoHide': [{\n        type: core.Input\n      }],\n      'swipe': [{\n        type: core.Input\n      }],\n      'animation': [{\n        type: core.Input\n      }],\n      'size': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'autoPlay': [{\n        type: core.Input\n      }],\n      'autoPlayInterval': [{\n        type: core.Input\n      }],\n      'autoPlayPauseOnHover': [{\n        type: core.Input\n      }],\n      'infinityMove': [{\n        type: core.Input\n      }],\n      'lazyLoading': [{\n        type: core.Input\n      }],\n      'actions': [{\n        type: core.Input\n      }],\n      'descriptions': [{\n        type: core.Input\n      }],\n      'showDescription': [{\n        type: core.Input\n      }],\n      'bullets': [{\n        type: core.Input\n      }],\n      'onClick': [{\n        type: core.Output\n      }],\n      'onActiveChange': [{\n        type: core.Output\n      }],\n      'onMouseEnter': [{\n        type: core.HostListener,\n        args: ['mouseenter']\n      }],\n      'onMouseLeave': [{\n        type: core.HostListener,\n        args: ['mouseleave']\n      }]\n    };\n    return NgxGalleryImageComponent;\n  }();\n\n  var NgxGalleryOrder =\n  /** @class */\n  function () {\n    function NgxGalleryOrder() {}\n\n    NgxGalleryOrder.Column = 1;\n    NgxGalleryOrder.Row = 2;\n    NgxGalleryOrder.Page = 3;\n    return NgxGalleryOrder;\n  }();\n\n  var NgxGalleryThumbnailsComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\n    function NgxGalleryThumbnailsComponent(sanitization, elementRef, helperService) {\n      this.sanitization = sanitization;\n      this.elementRef = elementRef;\n      this.helperService = helperService;\n      this.minStopIndex = 0;\n      this.onActiveChange = new core.EventEmitter();\n      this.index = 0;\n    }\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.ngOnChanges = function (changes) {\n      var _this = this;\n\n      if (changes['selectedIndex']) {\n        this.validateIndex();\n      }\n\n      if (changes['swipe']) {\n        this.helperService.manageSwipe(this.swipe, this.elementRef, 'thumbnails', function () {\n          return _this.moveRight();\n        }, function () {\n          return _this.moveLeft();\n        });\n      }\n\n      if (this.images) {\n        this.remainingCountValue = this.images.length - this.rows * this.columns;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.onMouseEnter = function () {\n      this.mouseenter = true;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.onMouseLeave = function () {\n      this.mouseenter = false;\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.reset = function (index) {\n      this.selectedIndex = index;\n      this.setDefaultPosition();\n      this.index = 0;\n      this.validateIndex();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getImages = function () {\n      if (!this.images) {\n        return [];\n      }\n\n      if (this.remainingCount) {\n        return this.images.slice(0, this.rows * this.columns);\n      } else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n        var\n        /** @type {?} */\n        stopIndex = 0;\n\n        if (this.order === NgxGalleryOrder.Column) {\n          stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n        } else if (this.order === NgxGalleryOrder.Page) {\n          stopIndex = this.index + this.columns * this.rows * 2;\n        }\n\n        if (stopIndex <= this.minStopIndex) {\n          stopIndex = this.minStopIndex;\n        } else {\n          this.minStopIndex = stopIndex;\n        }\n\n        return this.images.slice(0, stopIndex);\n      } else {\n        return this.images;\n      }\n    };\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.handleClick = function (event, index) {\n      if (!this.hasLink(index)) {\n        this.selectedIndex = index;\n        this.onActiveChange.emit(index);\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.hasLink = function (index) {\n      if (this.links && this.links.length && this.links[index]) return true;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.moveRight = function () {\n      if (this.canMoveRight()) {\n        this.index += this.moveSize;\n        var\n        /** @type {?} */\n        maxIndex = this.getMaxIndex() - this.columns;\n\n        if (this.index > maxIndex) {\n          this.index = maxIndex;\n        }\n\n        this.setThumbnailsPosition();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.moveLeft = function () {\n      if (this.canMoveLeft()) {\n        this.index -= this.moveSize;\n\n        if (this.index < 0) {\n          this.index = 0;\n        }\n\n        this.setThumbnailsPosition();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.canMoveRight = function () {\n      return this.index + this.columns < this.getMaxIndex() ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.canMoveLeft = function () {\n      return this.index !== 0 ? true : false;\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailLeft = function (index) {\n      var\n      /** @type {?} */\n      calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        calculatedIndex = Math.floor(index / this.rows);\n      } else if (this.order === NgxGalleryOrder.Page) {\n        calculatedIndex = index % this.columns + Math.floor(index / (this.rows * this.columns)) * this.columns;\n      } else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n        calculatedIndex = index % this.columns;\n      } else {\n        calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.columns);\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailTop = function (index) {\n      var\n      /** @type {?} */\n      calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        calculatedIndex = index % this.rows;\n      } else if (this.order === NgxGalleryOrder.Page) {\n        calculatedIndex = Math.floor(index / this.columns) - Math.floor(index / (this.rows * this.columns)) * this.rows;\n      } else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n        calculatedIndex = Math.floor(index / this.columns);\n      } else {\n        calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.rows);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailWidth = function () {\n      return this.getThumbnailDimension(this.columns);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailHeight = function () {\n      return this.getThumbnailDimension(this.rows);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.setThumbnailsPosition = function () {\n      this.thumbnailsLeft = -(100 / this.columns * this.index) + '%';\n      this.thumbnailsMarginLeft = -((this.margin - (this.columns - 1) * this.margin / this.columns) * this.index) + 'px';\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.setDefaultPosition = function () {\n      this.thumbnailsLeft = '0px';\n      this.thumbnailsMarginLeft = '0px';\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.canShowArrows = function () {\n      if (this.remainingCount) {\n        return false;\n      } else if (this.arrows && this.images && this.images.length > this.getVisibleCount() && (!this.arrowsAutoHide || this.mouseenter)) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.validateIndex = function () {\n      if (this.images) {\n        var\n        /** @type {?} */\n        newIndex = void 0;\n\n        if (this.order === NgxGalleryOrder.Column) {\n          newIndex = Math.floor(this.selectedIndex / this.rows);\n        } else {\n          newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n        }\n\n        if (this.remainingCount) {\n          newIndex = 0;\n        }\n\n        if (newIndex < this.index || newIndex >= this.index + this.columns) {\n          var\n          /** @type {?} */\n          maxIndex = this.getMaxIndex() - this.columns;\n          this.index = newIndex > maxIndex ? maxIndex : newIndex;\n          this.setThumbnailsPosition();\n        }\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getSafeUrl = function (image) {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    };\n    /**\r\n     * @param {?} index\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailPosition = function (index, count) {\n      return this.getSafeStyle('calc(' + 100 / count * index + '% + ' + (this.margin - (count - 1) * this.margin / count) * index + 'px)');\n    };\n    /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailDimension = function (count) {\n      if (this.margin !== 0) {\n        return this.getSafeStyle('calc(' + 100 / count + '% - ' + (count - 1) * this.margin / count + 'px)');\n      } else {\n        return this.getSafeStyle('calc(' + 100 / count + '% + 1px)');\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getMaxIndex = function () {\n      if (this.order == NgxGalleryOrder.Page) {\n        var\n        /** @type {?} */\n        maxIndex = Math.floor(this.images.length / this.getVisibleCount()) * this.columns;\n\n        if (this.images.length % this.getVisibleCount() > this.columns) {\n          maxIndex += this.columns;\n        } else {\n          maxIndex += this.images.length % this.getVisibleCount();\n        }\n\n        return maxIndex;\n      } else {\n        return Math.ceil(this.images.length / this.rows);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getVisibleCount = function () {\n      return this.columns * this.rows;\n    };\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getSafeStyle = function (value) {\n      return this.sanitization.bypassSecurityTrustStyle(value);\n    };\n\n    NgxGalleryThumbnailsComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-thumbnails',\n        template: \"\\n    <div class=\\\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\\\">\\n        <div class=\\\"ngx-gallery-thumbnails\\\" [style.transform]=\\\"'translateX(' + thumbnailsLeft + ')'\\\" [style.marginLeft]=\\\"thumbnailsMarginLeft\\\">\\n            <a [href]=\\\"hasLink(i) ? links[i] : '#'\\\" [target]=\\\"linkTarget\\\" class=\\\"ngx-gallery-thumbnail\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [style.background-image]=\\\"getSafeUrl(image)\\\" (click)=\\\"handleClick($event, i)\\\" [style.width]=\\\"getThumbnailWidth()\\\" [style.height]=\\\"getThumbnailHeight()\\\" [style.left]=\\\"getThumbnailLeft(i)\\\" [style.top]=\\\"getThumbnailTop(i)\\\" [ngClass]=\\\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\\\" [attr.aria-label]=\\\"labels[i]\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, i)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-remaining-count-overlay\\\" *ngIf=\\\"remainingCount && remainingCountValue && (i == (rows * columns) - 1)\\\">\\n                    <span class=\\\"ngx-gallery-remaining-count\\\">+{{remainingCountValue}}</span>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n    <ngx-gallery-arrows *ngIf=\\\"canShowArrows()\\\" (onPrevClick)=\\\"moveLeft()\\\" (onNextClick)=\\\"moveRight()\\\" [prevDisabled]=\\\"!canMoveLeft()\\\" [nextDisabled]=\\\"!canMoveRight()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\n        styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-thumbnails-wrapper { width: 100%; height: 100%; position: absolute; overflow: hidden; } .ngx-gallery-thumbnails { height: 100%; width: 100%; position: absolute; left: 0px; transform: translateX(0); transition: transform 0.5s ease-in-out; will-change: transform; } .ngx-gallery-thumbnails .ngx-gallery-thumbnail { position: absolute; height: 100%; background-position: center; background-repeat: no-repeat; text-decoration: none; } .ngx-gallery-thumbnail-size-cover .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: cover; } .ngx-gallery-thumbnail-size-contain .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: contain; } .ngx-gallery-remaining-count-overlay { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; background-color: rgba(0, 0, 0, 0.4); } .ngx-gallery-remaining-count { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 30px; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryThumbnailsComponent.ctorParameters = function () {\n      return [{\n        type: platformBrowser.DomSanitizer\n      }, {\n        type: core.ElementRef\n      }, {\n        type: NgxGalleryHelperService\n      }];\n    };\n\n    NgxGalleryThumbnailsComponent.propDecorators = {\n      'images': [{\n        type: core.Input\n      }],\n      'links': [{\n        type: core.Input\n      }],\n      'labels': [{\n        type: core.Input\n      }],\n      'linkTarget': [{\n        type: core.Input\n      }],\n      'columns': [{\n        type: core.Input\n      }],\n      'rows': [{\n        type: core.Input\n      }],\n      'arrows': [{\n        type: core.Input\n      }],\n      'arrowsAutoHide': [{\n        type: core.Input\n      }],\n      'margin': [{\n        type: core.Input\n      }],\n      'selectedIndex': [{\n        type: core.Input\n      }],\n      'clickable': [{\n        type: core.Input\n      }],\n      'swipe': [{\n        type: core.Input\n      }],\n      'size': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'moveSize': [{\n        type: core.Input\n      }],\n      'order': [{\n        type: core.Input\n      }],\n      'remainingCount': [{\n        type: core.Input\n      }],\n      'lazyLoading': [{\n        type: core.Input\n      }],\n      'actions': [{\n        type: core.Input\n      }],\n      'onActiveChange': [{\n        type: core.Output\n      }],\n      'onMouseEnter': [{\n        type: core.HostListener,\n        args: ['mouseenter']\n      }],\n      'onMouseLeave': [{\n        type: core.HostListener,\n        args: ['mouseleave']\n      }]\n    };\n    return NgxGalleryThumbnailsComponent;\n  }();\n\n  var NgxGalleryPreviewComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     * @param {?} renderer\r\n     * @param {?} changeDetectorRef\r\n     */\n    function NgxGalleryPreviewComponent(sanitization, elementRef, helperService, renderer, changeDetectorRef) {\n      this.sanitization = sanitization;\n      this.elementRef = elementRef;\n      this.helperService = helperService;\n      this.renderer = renderer;\n      this.changeDetectorRef = changeDetectorRef;\n      this.showSpinner = false;\n      this.positionLeft = 0;\n      this.positionTop = 0;\n      this.zoomValue = 1;\n      this.loading = false;\n      this.rotateValue = 0;\n      this.index = 0;\n      this.onOpen = new core.EventEmitter();\n      this.onClose = new core.EventEmitter();\n      this.onActiveChange = new core.EventEmitter();\n      this.isOpen = false;\n      this.initialX = 0;\n      this.initialY = 0;\n      this.initialLeft = 0;\n      this.initialTop = 0;\n      this.isMove = false;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.ngOnInit = function () {\n      if (this.arrows && this.arrowsAutoHide) {\n        this.arrows = false;\n      }\n    };\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.ngOnChanges = function (changes) {\n      var _this = this;\n\n      if (changes['swipe']) {\n        this.helperService.manageSwipe(this.swipe, this.elementRef, 'preview', function () {\n          return _this.showNext();\n        }, function () {\n          return _this.showPrev();\n        });\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.ngOnDestroy = function () {\n      if (this.keyDownListener) {\n        this.keyDownListener();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.onMouseEnter = function () {\n      if (this.arrowsAutoHide && !this.arrows) {\n        this.arrows = true;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.onMouseLeave = function () {\n      if (this.arrowsAutoHide && this.arrows) {\n        this.arrows = false;\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.onKeyDown = function (e) {\n      if (this.isOpen) {\n        if (this.keyboardNavigation) {\n          if (this.isKeyboardPrev(e)) {\n            this.showPrev();\n          } else if (this.isKeyboardNext(e)) {\n            this.showNext();\n          }\n        }\n\n        if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n          this.close();\n        }\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.open = function (index) {\n      var _this = this;\n\n      this.onOpen.emit();\n      this.index = index;\n      this.isOpen = true;\n      this.show(true);\n\n      if (this.forceFullscreen) {\n        this.manageFullscreen();\n      }\n\n      this.keyDownListener = this.renderer.listenGlobal(\"window\", \"keydown\", function (e) {\n        return _this.onKeyDown(e);\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.close = function () {\n      this.isOpen = false;\n      this.closeFullscreen();\n      this.onClose.emit();\n      this.stopAutoPlay();\n\n      if (this.keyDownListener) {\n        this.keyDownListener();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.imageMouseEnter = function () {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.stopAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.imageMouseLeave = function () {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.startAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.startAutoPlay = function () {\n      var _this = this;\n\n      if (this.autoPlay) {\n        this.stopAutoPlay();\n        this.timer = setTimeout(function () {\n          if (!_this.showNext()) {\n            _this.index = -1;\n\n            _this.showNext();\n          }\n        }, this.autoPlayInterval);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.stopAutoPlay = function () {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.showAtIndex = function (index) {\n      this.index = index;\n      this.show();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.showNext = function () {\n      if (this.canShowNext()) {\n        this.index++;\n\n        if (this.index === this.images.length) {\n          this.index = 0;\n        }\n\n        this.show();\n        return true;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.showPrev = function () {\n      if (this.canShowPrev()) {\n        this.index--;\n\n        if (this.index < 0) {\n          this.index = this.images.length - 1;\n        }\n\n        this.show();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canShowNext = function () {\n      if (this.loading) {\n        return false;\n      } else if (this.images) {\n        return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canShowPrev = function () {\n      if (this.loading) {\n        return false;\n      } else if (this.images) {\n        return this.infinityMove || this.index > 0 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.manageFullscreen = function () {\n      if (this.fullscreen || this.forceFullscreen) {\n        var\n        /** @type {?} */\n        doc = document;\n\n        if (!doc.fullscreenElement && !doc.mozFullScreenElement && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n          this.openFullscreen();\n        } else {\n          this.closeFullscreen();\n        }\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getSafeUrl = function (image) {\n      return image.substr(0, 10) === 'data:image' ? image : this.sanitization.bypassSecurityTrustUrl(image);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.zoomIn = function () {\n      if (this.canZoomIn()) {\n        this.zoomValue += this.zoomStep;\n\n        if (this.zoomValue > this.zoomMax) {\n          this.zoomValue = this.zoomMax;\n        }\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.zoomOut = function () {\n      if (this.canZoomOut()) {\n        this.zoomValue -= this.zoomStep;\n\n        if (this.zoomValue < this.zoomMin) {\n          this.zoomValue = this.zoomMin;\n        }\n\n        if (this.zoomValue <= 1) {\n          this.resetPosition();\n        }\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.rotateLeft = function () {\n      this.rotateValue -= 90;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.rotateRight = function () {\n      this.rotateValue += 90;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getTransform = function () {\n      return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canZoomIn = function () {\n      return this.zoomValue < this.zoomMax ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canZoomOut = function () {\n      return this.zoomValue > this.zoomMin ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canDragOnZoom = function () {\n      return this.zoom && this.zoomValue > 1;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.mouseDownHandler = function (e) {\n      if (this.canDragOnZoom()) {\n        this.initialX = this.getClientX(e);\n        this.initialY = this.getClientY(e);\n        this.initialLeft = this.positionLeft;\n        this.initialTop = this.positionTop;\n        this.isMove = true;\n        e.preventDefault();\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.mouseUpHandler = function (e) {\n      this.isMove = false;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.mouseMoveHandler = function (e) {\n      if (this.isMove) {\n        this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n        this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getClientX = function (e) {\n      return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getClientY = function (e) {\n      return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.resetPosition = function () {\n      if (this.zoom) {\n        this.positionLeft = 0;\n        this.positionTop = 0;\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isKeyboardNext = function (e) {\n      return e.keyCode === 39 ? true : false;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isKeyboardPrev = function (e) {\n      return e.keyCode === 37 ? true : false;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isKeyboardEsc = function (e) {\n      return e.keyCode === 27 ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.openFullscreen = function () {\n      var\n      /** @type {?} */\n      element = document.documentElement;\n\n      if (element.requestFullscreen) {\n        element.requestFullscreen();\n      } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n      } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n      } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.closeFullscreen = function () {\n      if (this.isFullscreen()) {\n        var\n        /** @type {?} */\n        doc = document;\n\n        if (doc.exitFullscreen) {\n          doc.exitFullscreen();\n        } else if (doc.msExitFullscreen) {\n          doc.msExitFullscreen();\n        } else if (doc.mozCancelFullScreen) {\n          doc.mozCancelFullScreen();\n        } else if (doc.webkitExitFullscreen) {\n          doc.webkitExitFullscreen();\n        }\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isFullscreen = function () {\n      var\n      /** @type {?} */\n      doc = document;\n      return doc.fullscreenElement || doc.webkitFullscreenElement || doc.mozFullScreenElement || doc.msFullscreenElement;\n    };\n    /**\r\n     * @param {?=} first\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.show = function (first) {\n      var _this = this;\n\n      if (first === void 0) {\n        first = false;\n      }\n\n      this.loading = true;\n      this.stopAutoPlay();\n      this.onActiveChange.emit(this.index);\n\n      if (first || !this.animation) {\n        this._show();\n      } else {\n        setTimeout(function () {\n          return _this._show();\n        }, 600);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype._show = function () {\n      var _this = this;\n\n      this.zoomValue = 1;\n      this.rotateValue = 0;\n      this.resetPosition();\n      this.src = this.getSafeUrl(\n      /** @type {?} */\n      this.images[this.index]);\n      this.srcIndex = this.index;\n      this.description = this.descriptions[this.index];\n      this.changeDetectorRef.markForCheck();\n      setTimeout(function () {\n        if (_this.isLoaded(_this.previewImage.nativeElement)) {\n          _this.loading = false;\n\n          _this.startAutoPlay();\n\n          _this.changeDetectorRef.markForCheck();\n        } else {\n          setTimeout(function () {\n            if (_this.loading) {\n              _this.showSpinner = true;\n\n              _this.changeDetectorRef.markForCheck();\n            }\n          });\n\n          _this.previewImage.nativeElement.onload = function () {\n            _this.loading = false;\n            _this.showSpinner = false;\n            _this.previewImage.nativeElement.onload = null;\n\n            _this.startAutoPlay();\n\n            _this.changeDetectorRef.markForCheck();\n          };\n        }\n      });\n    };\n    /**\r\n     * @param {?} img\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isLoaded = function (img) {\n      if (!img.complete) {\n        return false;\n      }\n\n      if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n        return false;\n      }\n\n      return true;\n    };\n\n    NgxGalleryPreviewComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-preview',\n        template: \"\\n        <ngx-gallery-arrows *ngIf=\\\"arrows\\\" (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n        <div class=\\\"ngx-gallery-preview-top\\\">\\n            <div class=\\\"ngx-gallery-preview-icons\\\">\\n                <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, index)\\\"></ngx-gallery-action>\\n                <a *ngIf=\\\"download && src\\\" [href]=\\\"src\\\" class=\\\"ngx-gallery-icon\\\" aria-hidden=\\\"true\\\" download>\\n                    <i class=\\\"ngx-gallery-icon-content {{ downloadIcon }}\\\"></i>\\n                </a>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomOutIcon\\\" [disabled]=\\\"!canZoomOut()\\\" (onClick)=\\\"zoomOut()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomInIcon\\\" [disabled]=\\\"!canZoomIn()\\\" (onClick)=\\\"zoomIn()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateLeftIcon\\\" (onClick)=\\\"rotateLeft()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateRightIcon\\\" (onClick)=\\\"rotateRight()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"fullscreen\\\" [icon]=\\\"'ngx-gallery-fullscreen ' + fullscreenIcon\\\" (onClick)=\\\"manageFullscreen()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action [icon]=\\\"'ngx-gallery-close ' + closeIcon\\\" (onClick)=\\\"close()\\\"></ngx-gallery-action>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-spinner-wrapper ngx-gallery-center\\\" [class.ngx-gallery-active]=\\\"showSpinner\\\">\\n            <i class=\\\"ngx-gallery-icon ngx-gallery-spinner {{spinnerIcon}}\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n        <div class=\\\"ngx-gallery-preview-wrapper\\\" (click)=\\\"closeOnClick && close()\\\" (mouseup)=\\\"mouseUpHandler($event)\\\" (mousemove)=\\\"mouseMoveHandler($event)\\\" (touchend)=\\\"mouseUpHandler($event)\\\" (touchmove)=\\\"mouseMoveHandler($event)\\\">\\n            <div class=\\\"ngx-gallery-preview-img-wrapper\\\">\\n                <img *ngIf=\\\"src\\\" #previewImage class=\\\"ngx-gallery-preview-img ngx-gallery-center\\\" [src]=\\\"src\\\" (click)=\\\"$event.stopPropagation()\\\" (mouseenter)=\\\"imageMouseEnter()\\\" (mouseleave)=\\\"imageMouseLeave()\\\" (mousedown)=\\\"mouseDownHandler($event)\\\" (touchstart)=\\\"mouseDownHandler($event)\\\" [class.ngx-gallery-active]=\\\"!loading\\\" [class.animation]=\\\"animation\\\" [class.ngx-gallery-grab]=\\\"canDragOnZoom()\\\" [style.transform]=\\\"getTransform()\\\" [style.left]=\\\"positionLeft + 'px'\\\" [style.top]=\\\"positionTop + 'px'\\\"/>\\n                <ngx-gallery-bullets *ngIf=\\\"bullets\\\" [count]=\\\"images.length\\\" [active]=\\\"index\\\" (onChange)=\\\"showAtIndex($event)\\\"></ngx-gallery-bullets>\\n            </div>\\n            <div class=\\\"ngx-gallery-preview-text\\\" *ngIf=\\\"showDescription && description\\\" [innerHTML]=\\\"description\\\" (click)=\\\"$event.stopPropagation()\\\"></div>\\n        </div>\\n    \",\n        styles: [\":host(.ngx-gallery-active) { width: 100%; height: 100%; position: fixed; left: 0; top: 0; background: rgba(0, 0, 0, 0.7); z-index: 10000; display: inline-block; } :host { display: none; } :host /deep/ .ngx-gallery-arrow { font-size: 50px; } :host /deep/ ngx-gallery-bullets { height: 5%; align-items: center; padding: 0px; } .ngx-gallery-preview-img { opacity: 0; max-width: 90%; max-height: 90%; user-select: none; transition: transform .5s; } .ngx-gallery-preview-img.animation { transition: opacity 0.5s linear, transform .5s; } .ngx-gallery-preview-img.ngx-gallery-active { opacity: 1; } .ngx-gallery-preview-img.ngx-gallery-grab { cursor: grab; cursor: -webkit-grab; } .ngx-gallery-icon.ngx-gallery-spinner { font-size: 50px; left: 0; display: inline-block; } :host /deep/ .ngx-gallery-preview-top { position: absolute; width: 100%; user-select: none; } :host /deep/ .ngx-gallery-preview-icons { float: right; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon { position: relative; margin-right: 10px; margin-top: 10px; font-size: 25px; cursor: pointer; text-decoration: none; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon.ngx-gallery-icon-disabled { cursor: default; opacity: 0.4; } .ngx-spinner-wrapper { width: 50px; height: 50px; display: none; } .ngx-spinner-wrapper.ngx-gallery-active { display: inline-block; } .ngx-gallery-center { position: absolute; left: 0; right: 0; bottom: 0; margin: auto; top: 0; } .ngx-gallery-preview-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; flex: 0 1 auto; z-index: 10; } .ngx-gallery-preview-wrapper { width: 100%; height: 100%; display: flex; flex-flow: column; } .ngx-gallery-preview-img-wrapper { flex: 1 1 auto; position: relative; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryPreviewComponent.ctorParameters = function () {\n      return [{\n        type: platformBrowser.DomSanitizer\n      }, {\n        type: core.ElementRef\n      }, {\n        type: NgxGalleryHelperService\n      }, {\n        type: core.Renderer\n      }, {\n        type: core.ChangeDetectorRef\n      }];\n    };\n\n    NgxGalleryPreviewComponent.propDecorators = {\n      'images': [{\n        type: core.Input\n      }],\n      'descriptions': [{\n        type: core.Input\n      }],\n      'showDescription': [{\n        type: core.Input\n      }],\n      'arrows': [{\n        type: core.Input\n      }],\n      'arrowsAutoHide': [{\n        type: core.Input\n      }],\n      'swipe': [{\n        type: core.Input\n      }],\n      'fullscreen': [{\n        type: core.Input\n      }],\n      'forceFullscreen': [{\n        type: core.Input\n      }],\n      'closeOnClick': [{\n        type: core.Input\n      }],\n      'closeOnEsc': [{\n        type: core.Input\n      }],\n      'keyboardNavigation': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'closeIcon': [{\n        type: core.Input\n      }],\n      'fullscreenIcon': [{\n        type: core.Input\n      }],\n      'spinnerIcon': [{\n        type: core.Input\n      }],\n      'autoPlay': [{\n        type: core.Input\n      }],\n      'autoPlayInterval': [{\n        type: core.Input\n      }],\n      'autoPlayPauseOnHover': [{\n        type: core.Input\n      }],\n      'infinityMove': [{\n        type: core.Input\n      }],\n      'zoom': [{\n        type: core.Input\n      }],\n      'zoomStep': [{\n        type: core.Input\n      }],\n      'zoomMax': [{\n        type: core.Input\n      }],\n      'zoomMin': [{\n        type: core.Input\n      }],\n      'zoomInIcon': [{\n        type: core.Input\n      }],\n      'zoomOutIcon': [{\n        type: core.Input\n      }],\n      'animation': [{\n        type: core.Input\n      }],\n      'actions': [{\n        type: core.Input\n      }],\n      'rotate': [{\n        type: core.Input\n      }],\n      'rotateLeftIcon': [{\n        type: core.Input\n      }],\n      'rotateRightIcon': [{\n        type: core.Input\n      }],\n      'download': [{\n        type: core.Input\n      }],\n      'downloadIcon': [{\n        type: core.Input\n      }],\n      'bullets': [{\n        type: core.Input\n      }],\n      'onOpen': [{\n        type: core.Output\n      }],\n      'onClose': [{\n        type: core.Output\n      }],\n      'onActiveChange': [{\n        type: core.Output\n      }],\n      'previewImage': [{\n        type: core.ViewChild,\n        args: ['previewImage']\n      }],\n      'onMouseEnter': [{\n        type: core.HostListener,\n        args: ['mouseenter']\n      }],\n      'onMouseLeave': [{\n        type: core.HostListener,\n        args: ['mouseleave']\n      }]\n    };\n    return NgxGalleryPreviewComponent;\n  }();\n\n  var NgxGalleryImageSize =\n  /** @class */\n  function () {\n    function NgxGalleryImageSize() {}\n\n    NgxGalleryImageSize.Cover = 'cover';\n    NgxGalleryImageSize.Contain = 'contain';\n    return NgxGalleryImageSize;\n  }();\n\n  var NgxGalleryLayout =\n  /** @class */\n  function () {\n    function NgxGalleryLayout() {}\n\n    NgxGalleryLayout.ThumbnailsTop = 'thumbnails-top';\n    NgxGalleryLayout.ThumbnailsBottom = 'thumbnails-bottom';\n    return NgxGalleryLayout;\n  }();\n\n  var NgxGalleryAction =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} action\r\n     */\n    function NgxGalleryAction(action) {\n      this.icon = action.icon;\n      this.disabled = action.disabled ? action.disabled : false;\n      this.titleText = action.titleText ? action.titleText : '';\n      this.onClick = action.onClick;\n    }\n\n    return NgxGalleryAction;\n  }();\n\n  var NgxGalleryOptions =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} obj\r\n     */\n    function NgxGalleryOptions(obj) {\n      var preventDefaults = obj.breakpoint === undefined ? false : true;\n\n      function use(source, defaultValue) {\n        return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n      }\n\n      this.breakpoint = use(obj.breakpoint, undefined);\n      this.width = use(obj.width, '500px');\n      this.height = use(obj.height, '400px');\n      this.fullWidth = use(obj.fullWidth, false);\n      this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n      this.startIndex = use(obj.startIndex, 0);\n      this.linkTarget = use(obj.linkTarget, '_blank');\n      this.lazyLoading = use(obj.lazyLoading, true);\n      this.image = use(obj.image, true);\n      this.imagePercent = use(obj.imagePercent, 75);\n      this.imageArrows = use(obj.imageArrows, true);\n      this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n      this.imageSwipe = use(obj.imageSwipe, false);\n      this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n      this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n      this.imageAutoPlay = use(obj.imageAutoPlay, false);\n      this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n      this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n      this.imageInfinityMove = use(obj.imageInfinityMove, false);\n\n      if (obj && obj.imageActions && obj.imageActions.length) {\n        obj.imageActions = obj.imageActions.map(function (action) {\n          return new NgxGalleryAction(action);\n        });\n      }\n\n      this.imageActions = use(obj.imageActions, []);\n      this.imageDescription = use(obj.imageDescription, false);\n      this.imageBullets = use(obj.imageBullets, false);\n      this.thumbnails = use(obj.thumbnails, true);\n      this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n      this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n      this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n      this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n      this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n      this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n      this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n      this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n      this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n      this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n      this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n      this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n      this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n      this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n\n      if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n        obj.thumbnailActions = obj.thumbnailActions.map(function (action) {\n          return new NgxGalleryAction(action);\n        });\n      }\n\n      this.thumbnailActions = use(obj.thumbnailActions, []);\n      this.preview = use(obj.preview, true);\n      this.previewDescription = use(obj.previewDescription, true);\n      this.previewArrows = use(obj.previewArrows, true);\n      this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n      this.previewSwipe = use(obj.previewSwipe, false);\n      this.previewFullscreen = use(obj.previewFullscreen, false);\n      this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n      this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n      this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n      this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n      this.previewAnimation = use(obj.previewAnimation, true);\n      this.previewAutoPlay = use(obj.previewAutoPlay, false);\n      this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n      this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n      this.previewInfinityMove = use(obj.previewInfinityMove, false);\n      this.previewZoom = use(obj.previewZoom, false);\n      this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n      this.previewZoomMax = use(obj.previewZoomMax, 2);\n      this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n      this.previewRotate = use(obj.previewRotate, false);\n      this.previewDownload = use(obj.previewDownload, false);\n      this.previewCustom = use(obj.previewCustom, undefined);\n      this.previewBullets = use(obj.previewBullets, false);\n      this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n      this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n      this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n      this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n      this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n      this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n      this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n      this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n      this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n      this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n      if (obj && obj.actions && obj.actions.length) {\n        obj.actions = obj.actions.map(function (action) {\n          return new NgxGalleryAction(action);\n        });\n      }\n\n      this.actions = use(obj.actions, []);\n    }\n\n    return NgxGalleryOptions;\n  }();\n\n  var NgxGalleryOrderedImage =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} obj\r\n     */\n    function NgxGalleryOrderedImage(obj) {\n      this.src = obj.src;\n      this.index = obj.index;\n    }\n\n    return NgxGalleryOrderedImage;\n  }();\n\n  var NgxGalleryComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} myElement\r\n     */\n    function NgxGalleryComponent(myElement) {\n      this.myElement = myElement;\n      this.imagesReady = new core.EventEmitter();\n      this.change = new core.EventEmitter();\n      this.previewOpen = new core.EventEmitter();\n      this.previewClose = new core.EventEmitter();\n      this.previewChange = new core.EventEmitter();\n      this.oldImagesLength = 0;\n      this.selectedIndex = 0;\n      this.breakpoint = undefined;\n      this.prevBreakpoint = undefined;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.ngOnInit = function () {\n      this.options = this.options.map(function (opt) {\n        return new NgxGalleryOptions(opt);\n      });\n      this.sortOptions();\n      this.setBreakpoint();\n      this.setOptions();\n      this.checkFullWidth();\n\n      if (this.currentOptions) {\n        this.selectedIndex =\n        /** @type {?} */\n        this.currentOptions.startIndex;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.ngDoCheck = function () {\n      if (this.images !== undefined && this.images.length !== this.oldImagesLength || this.images !== this.oldImages) {\n        this.oldImagesLength = this.images.length;\n        this.oldImages = this.images;\n        this.setOptions();\n        this.setImages();\n\n        if (this.images && this.images.length) {\n          this.imagesReady.emit();\n        }\n\n        if (this.image) {\n          this.image.reset(\n          /** @type {?} */\n          this.currentOptions.startIndex);\n        }\n\n        if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails && this.images.length <= 1) {\n          this.currentOptions.thumbnails = false;\n          this.currentOptions.imageArrows = false;\n        }\n\n        this.resetThumbnails();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.ngAfterViewInit = function () {\n      this.checkFullWidth();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.onResize = function () {\n      var _this = this;\n\n      this.setBreakpoint();\n\n      if (this.prevBreakpoint !== this.breakpoint) {\n        this.setOptions();\n        this.resetThumbnails();\n      }\n\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n        if (this.fullWidthTimeout) {\n          clearTimeout(this.fullWidthTimeout);\n        }\n\n        this.fullWidthTimeout = setTimeout(function () {\n          _this.checkFullWidth();\n        }, 200);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getImageHeight = function () {\n      return this.currentOptions && this.currentOptions.thumbnails ? this.currentOptions.imagePercent + '%' : '100%';\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getThumbnailsHeight = function () {\n      if (this.currentOptions && this.currentOptions.image) {\n        return 'calc(' + this.currentOptions.thumbnailsPercent + '% - ' + this.currentOptions.thumbnailsMargin + 'px)';\n      } else {\n        return '100%';\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getThumbnailsMarginTop = function () {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n        return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n        return '0px';\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getThumbnailsMarginBottom = function () {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n        return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n        return '0px';\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.openPreview = function (index) {\n      if (this.currentOptions.previewCustom) {\n        this.currentOptions.previewCustom(index);\n      } else {\n        this.previewEnabled = true;\n        this.preview.open(index);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.onPreviewOpen = function () {\n      this.previewOpen.emit();\n\n      if (this.image && this.image.autoPlay) {\n        this.image.stopAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.onPreviewClose = function () {\n      this.previewEnabled = false;\n      this.previewClose.emit();\n\n      if (this.image && this.image.autoPlay) {\n        this.image.startAutoPlay();\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.selectFromImage = function (index) {\n      this.select(index);\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.selectFromThumbnails = function (index) {\n      this.select(index);\n\n      if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n        this.openPreview(this.selectedIndex);\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.show = function (index) {\n      this.select(index);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.showNext = function () {\n      this.image.showNext();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.showPrev = function () {\n      this.image.showPrev();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.canShowNext = function () {\n      if (this.images && this.currentOptions) {\n        return this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.canShowPrev = function () {\n      if (this.images && this.currentOptions) {\n        return this.currentOptions.imageInfinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.previewSelect = function (index) {\n      this.previewChange.emit({\n        index: index,\n        image: this.images[index]\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.moveThumbnailsRight = function () {\n      this.thubmnails.moveRight();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.moveThumbnailsLeft = function () {\n      this.thubmnails.moveLeft();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.canMoveThumbnailsRight = function () {\n      return this.thubmnails.canMoveRight();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.canMoveThumbnailsLeft = function () {\n      return this.thubmnails.canMoveLeft();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.resetThumbnails = function () {\n      if (this.thubmnails) {\n        this.thubmnails.reset(\n        /** @type {?} */\n        this.currentOptions.startIndex);\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.select = function (index) {\n      this.selectedIndex = index;\n      this.change.emit({\n        index: index,\n        image: this.images[index]\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.checkFullWidth = function () {\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n        this.width = document.body.clientWidth + 'px';\n        this.left = -(document.body.clientWidth - this.myElement.nativeElement.parentNode.innerWidth) / 2 + 'px';\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.setImages = function () {\n      this.smallImages = this.images.map(function (img) {\n        /** @type {?} */\n        return img.small;\n      });\n      this.mediumImages = this.images.map(function (img, i) {\n        return new NgxGalleryOrderedImage({\n          src: img.medium,\n          index: i\n        });\n      });\n      this.bigImages = this.images.map(function (img) {\n        /** @type {?} */\n        return img.big;\n      });\n      this.descriptions = this.images.map(function (img) {\n        /** @type {?} */\n        return img.description;\n      });\n      this.links = this.images.map(function (img) {\n        /** @type {?} */\n        return img.url;\n      });\n      this.labels = this.images.map(function (img) {\n        /** @type {?} */\n        return img.label;\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.setBreakpoint = function () {\n      this.prevBreakpoint = this.breakpoint;\n      var\n      /** @type {?} */\n      breakpoints;\n\n      if (typeof window !== 'undefined') {\n        breakpoints = this.options.filter(function (opt) {\n          return opt.breakpoint >= window.innerWidth;\n        }).map(function (opt) {\n          return opt.breakpoint;\n        });\n      }\n\n      if (breakpoints && breakpoints.length) {\n        this.breakpoint = breakpoints.pop();\n      } else {\n        this.breakpoint = undefined;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.sortOptions = function () {\n      this.options = this.options.filter(function (a) {\n        return a.breakpoint === undefined;\n      }).concat(this.options.filter(function (a) {\n        return a.breakpoint !== undefined;\n      }).sort(function (a, b) {\n        return b.breakpoint - a.breakpoint;\n      }));\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.setOptions = function () {\n      var _this = this;\n\n      this.currentOptions = new NgxGalleryOptions({});\n      this.options.filter(function (opt) {\n        return opt.breakpoint === undefined || opt.breakpoint >= _this.breakpoint;\n      }).map(function (opt) {\n        return _this.combineOptions(_this.currentOptions, opt);\n      });\n      this.width =\n      /** @type {?} */\n      this.currentOptions.width;\n      this.height =\n      /** @type {?} */\n      this.currentOptions.height;\n    };\n    /**\r\n     * @param {?} first\r\n     * @param {?} second\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.combineOptions = function (first, second) {\n      Object.keys(second).map(function (val) {\n        return first[val] = second[val] !== undefined ? second[val] : first[val];\n      });\n    };\n\n    NgxGalleryComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery',\n        template: \"\\n    <div class=\\\"ngx-gallery-layout {{currentOptions?.layout}}\\\">\\n        <ngx-gallery-image *ngIf=\\\"currentOptions?.image\\\" [style.height]=\\\"getImageHeight()\\\" [images]=\\\"mediumImages\\\" [clickable]=\\\"currentOptions?.preview\\\" [selectedIndex]=\\\"selectedIndex\\\" [arrows]=\\\"currentOptions?.imageArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.imageArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [swipe]=\\\"currentOptions?.imageSwipe\\\" [animation]=\\\"currentOptions?.imageAnimation\\\" [size]=\\\"currentOptions?.imageSize\\\" [autoPlay]=\\\"currentOptions?.imageAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.imageAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.imageAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.imageInfinityMove\\\"  [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.imageActions\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.imageDescription\\\" [bullets]=\\\"currentOptions?.imageBullets\\\" (onClick)=\\\"openPreview($event)\\\" (onActiveChange)=\\\"selectFromImage($event)\\\"></ngx-gallery-image>\\n\\n        <ngx-gallery-thumbnails *ngIf=\\\"currentOptions?.thumbnails\\\" [style.marginTop]=\\\"getThumbnailsMarginTop()\\\" [style.marginBottom]=\\\"getThumbnailsMarginBottom()\\\" [style.height]=\\\"getThumbnailsHeight()\\\" [images]=\\\"smallImages\\\" [links]=\\\"currentOptions?.thumbnailsAsLinks ? links : []\\\" [labels]=\\\"labels\\\" [linkTarget]=\\\"currentOptions?.linkTarget\\\" [selectedIndex]=\\\"selectedIndex\\\" [columns]=\\\"currentOptions?.thumbnailsColumns\\\" [rows]=\\\"currentOptions?.thumbnailsRows\\\" [margin]=\\\"currentOptions?.thumbnailMargin\\\" [arrows]=\\\"currentOptions?.thumbnailsArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.thumbnailsArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [clickable]=\\\"currentOptions?.image || currentOptions?.preview\\\" [swipe]=\\\"currentOptions?.thumbnailsSwipe\\\" [size]=\\\"currentOptions?.thumbnailSize\\\" [moveSize]=\\\"currentOptions?.thumbnailsMoveSize\\\" [order]=\\\"currentOptions?.thumbnailsOrder\\\" [remainingCount]=\\\"currentOptions?.thumbnailsRemainingCount\\\" [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.thumbnailActions\\\"  (onActiveChange)=\\\"selectFromThumbnails($event)\\\"></ngx-gallery-thumbnails>\\n\\n        <ngx-gallery-preview [images]=\\\"bigImages\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.previewDescription\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [closeIcon]=\\\"currentOptions?.closeIcon\\\" [fullscreenIcon]=\\\"currentOptions?.fullscreenIcon\\\" [spinnerIcon]=\\\"currentOptions?.spinnerIcon\\\" [arrows]=\\\"currentOptions?.previewArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.previewArrowsAutoHide\\\" [swipe]=\\\"currentOptions?.previewSwipe\\\" [fullscreen]=\\\"currentOptions?.previewFullscreen\\\" [forceFullscreen]=\\\"currentOptions?.previewForceFullscreen\\\" [closeOnClick]=\\\"currentOptions?.previewCloseOnClick\\\" [closeOnEsc]=\\\"currentOptions?.previewCloseOnEsc\\\" [keyboardNavigation]=\\\"currentOptions?.previewKeyboardNavigation\\\" [animation]=\\\"currentOptions?.previewAnimation\\\" [autoPlay]=\\\"currentOptions?.previewAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.previewAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.previewAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.previewInfinityMove\\\" [zoom]=\\\"currentOptions?.previewZoom\\\" [zoomStep]=\\\"currentOptions?.previewZoomStep\\\" [zoomMax]=\\\"currentOptions?.previewZoomMax\\\" [zoomMin]=\\\"currentOptions?.previewZoomMin\\\" [zoomInIcon]=\\\"currentOptions?.zoomInIcon\\\" [zoomOutIcon]=\\\"currentOptions?.zoomOutIcon\\\" [actions]=\\\"currentOptions?.actions\\\" [rotate]=\\\"currentOptions?.previewRotate\\\" [rotateLeftIcon]=\\\"currentOptions?.rotateLeftIcon\\\" [rotateRightIcon]=\\\"currentOptions?.rotateRightIcon\\\" [download]=\\\"currentOptions?.previewDownload\\\" [downloadIcon]=\\\"currentOptions?.downloadIcon\\\" [bullets]=\\\"currentOptions?.previewBullets\\\" (onClose)=\\\"onPreviewClose()\\\" (onOpen)=\\\"onPreviewOpen()\\\" (onActiveChange)=\\\"previewSelect($event)\\\" [class.ngx-gallery-active]=\\\"previewEnabled\\\"></ngx-gallery-preview>\\n    </div>\\n    \",\n        styles: [\":host { display: inline-block; } :host > * { float: left; } :host /deep/ * { box-sizing: border-box; } :host /deep/ .ngx-gallery-icon { color: white; font-size: 25px; position: absolute; z-index: 2000; display: inline-block; } :host /deep/ .ngx-gallery-icon .ngx-gallery-icon-content { display: block; } :host /deep/ .ngx-gallery-clickable { cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper .ngx-gallery-icon { position: relative; margin-right: 5px; margin-top: 5px; font-size: 20px; cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper { float: right; } :host .ngx-gallery-layout { width: 100%; height: 100%; display: flex; flex-direction: column; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-image { order: 2; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-thumbnails { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-image { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-thumbnails { order: 2; } \"],\n        providers: [NgxGalleryHelperService]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryComponent.ctorParameters = function () {\n      return [{\n        type: core.ElementRef\n      }];\n    };\n\n    NgxGalleryComponent.propDecorators = {\n      'options': [{\n        type: core.Input\n      }],\n      'images': [{\n        type: core.Input\n      }],\n      'imagesReady': [{\n        type: core.Output\n      }],\n      'change': [{\n        type: core.Output\n      }],\n      'previewOpen': [{\n        type: core.Output\n      }],\n      'previewClose': [{\n        type: core.Output\n      }],\n      'previewChange': [{\n        type: core.Output\n      }],\n      'preview': [{\n        type: core.ViewChild,\n        args: [NgxGalleryPreviewComponent]\n      }],\n      'image': [{\n        type: core.ViewChild,\n        args: [NgxGalleryImageComponent]\n      }],\n      'thubmnails': [{\n        type: core.ViewChild,\n        args: [NgxGalleryThumbnailsComponent]\n      }],\n      'width': [{\n        type: core.HostBinding,\n        args: ['style.width']\n      }],\n      'height': [{\n        type: core.HostBinding,\n        args: ['style.height']\n      }],\n      'left': [{\n        type: core.HostBinding,\n        args: ['style.left']\n      }],\n      'onResize': [{\n        type: core.HostListener,\n        args: ['window:resize']\n      }]\n    };\n    return NgxGalleryComponent;\n  }();\n\n  var NgxGalleryImage =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} obj\r\n     */\n    function NgxGalleryImage(obj) {\n      this.small = obj.small;\n      this.medium = obj.medium;\n      this.big = obj.big;\n      this.description = obj.description;\n      this.url = obj.url;\n      this.label = obj.label;\n    }\n\n    return NgxGalleryImage;\n  }();\n\n  var __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  var CustomHammerConfig =\n  /** @class */\n  function (_super) {\n    __extends(CustomHammerConfig, _super);\n\n    function CustomHammerConfig() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n\n      _this.overrides = {\n        'pinch': {\n          enable: false\n        },\n        'rotate': {\n          enable: false\n        }\n      };\n      return _this;\n    }\n\n    return CustomHammerConfig;\n  }(platformBrowser.HammerGestureConfig);\n\n  var NgxGalleryModule =\n  /** @class */\n  function () {\n    function NgxGalleryModule() {}\n\n    NgxGalleryModule.decorators = [{\n      type: core.NgModule,\n      args: [{\n        imports: [common.CommonModule],\n        declarations: [NgxGalleryActionComponent, NgxGalleryArrowsComponent, NgxGalleryBulletsComponent, NgxGalleryImageComponent, NgxGalleryThumbnailsComponent, NgxGalleryPreviewComponent, NgxGalleryComponent],\n        exports: [NgxGalleryComponent],\n        providers: [{\n          provide: platformBrowser.HAMMER_GESTURE_CONFIG,\n          useClass: CustomHammerConfig\n        }]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryModule.ctorParameters = function () {\n      return [];\n    };\n\n    return NgxGalleryModule;\n  }();\n\n  exports.CustomHammerConfig = CustomHammerConfig;\n  exports.NgxGalleryModule = NgxGalleryModule;\n  exports.NgxGalleryComponent = NgxGalleryComponent;\n  exports.NgxGalleryActionComponent = NgxGalleryActionComponent;\n  exports.NgxGalleryImageComponent = NgxGalleryImageComponent;\n  exports.NgxGalleryThumbnailsComponent = NgxGalleryThumbnailsComponent;\n  exports.NgxGalleryPreviewComponent = NgxGalleryPreviewComponent;\n  exports.NgxGalleryArrowsComponent = NgxGalleryArrowsComponent;\n  exports.NgxGalleryBulletsComponent = NgxGalleryBulletsComponent;\n  exports.NgxGalleryOptions = NgxGalleryOptions;\n  exports.NgxGalleryImage = NgxGalleryImage;\n  exports.NgxGalleryAnimation = NgxGalleryAnimation;\n  exports.NgxGalleryHelperService = NgxGalleryHelperService;\n  exports.NgxGalleryImageSize = NgxGalleryImageSize;\n  exports.NgxGalleryLayout = NgxGalleryLayout;\n  exports.NgxGalleryOrder = NgxGalleryOrder;\n  exports.NgxGalleryOrderedImage = NgxGalleryOrderedImage;\n  exports.NgxGalleryAction = NgxGalleryAction;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["F:/projects/DatingApp/DatingApp-SPA/node_modules/ngx-gallery/bundles/ngx-gallery.umd.js"],"names":["global","factory","exports","module","require","define","amd","core","common","platformBrowser","NgxGalleryActionComponent","disabled","titleText","onClick","EventEmitter","prototype","handleClick","event","emit","stopPropagation","preventDefault","decorators","type","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ctorParameters","propDecorators","Input","Output","NgxGalleryArrowsComponent","onPrevClick","onNextClick","handlePrevClick","handleNextClick","styles","NgxGalleryBulletsComponent","active","onChange","getBullets","Array","count","handleChange","index","NgxGalleryHelperService","renderer","swipeHandlers","Map","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","e","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","Injectable","Renderer","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageComponent","sanitization","elementRef","helperService","onActiveChange","canChangeImage","ngOnInit","arrows","arrowsAutoHide","autoPlay","startAutoPlay","ngOnChanges","changes","_this","swipe","showNext","showPrev","onMouseEnter","autoPlayPauseOnHover","stopAutoPlay","onMouseLeave","reset","selectedIndex","getImages","images","lazyLoading","indexes_1","prevIndex","infinityMove","push","length","nextIndex","filter","img","i","indexOf","timer","setInterval","autoPlayInterval","clearInterval","clickable","show","setChangeTimeout","canShowNext","canShowPrev","timeout","animation","setTimeout","getSafeUrl","bypassSecurityTrustStyle","DomSanitizer","ElementRef","HostListener","NgxGalleryOrder","Column","Row","Page","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","getSafeStyle","value","NgxGalleryPreviewComponent","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","onOpen","onClose","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnDestroy","keyDownListener","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","forceFullscreen","manageFullscreen","listenGlobal","closeFullscreen","imageMouseEnter","imageMouseLeave","clearTimeout","showAtIndex","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","substr","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","_show","src","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","complete","naturalWidth","ChangeDetectorRef","ViewChild","NgxGalleryImageSize","Cover","Contain","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryAction","action","icon","NgxGalleryOptions","obj","preventDefaults","breakpoint","undefined","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","NgxGalleryOrderedImage","NgxGalleryComponent","myElement","imagesReady","change","previewOpen","previewClose","previewChange","oldImagesLength","prevBreakpoint","options","opt","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","thubmnails","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","smallImages","small","mediumImages","medium","bigImages","big","labels","label","breakpoints","window","pop","a","concat","sort","b","combineOptions","second","Object","keys","val","providers","HostBinding","NgxGalleryImage","__extends","extendStatics","setPrototypeOf","__proto__","d","p","hasOwnProperty","__","constructor","create","CustomHammerConfig","_super","apply","arguments","overrides","enable","HammerGestureConfig","NgxGalleryModule","NgModule","imports","CommonModule","declarations","provide","HAMMER_GESTURE_CONFIG","useClass","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/platform-browser')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/platform-browser'], factory) :\n\t(factory((global['ngx-gallery'] = {}),global.core,global.common,global.platformBrowser));\n}(this, (function (exports,core,common,platformBrowser) { 'use strict';\n\nvar NgxGalleryActionComponent = /** @class */ (function () {\r\n    function NgxGalleryActionComponent() {\r\n        this.disabled = false;\r\n        this.titleText = '';\r\n        this.onClick = new core.EventEmitter();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    NgxGalleryActionComponent.prototype.handleClick = function (event) {\r\n        if (!this.disabled) {\r\n            this.onClick.emit(event);\r\n        }\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    };\r\n    NgxGalleryActionComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-action',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-icon\\\" [class.ngx-gallery-icon-disabled]=\\\"disabled\\\"\\n            aria-hidden=\\\"true\\\"\\n            title=\\\"{{ titleText }}\\\"\\n            (click)=\\\"handleClick($event)\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{ icon }}\\\"></i>\\n        </div>\",\r\n                    changeDetection: core.ChangeDetectionStrategy.OnPush\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryActionComponent.ctorParameters = function () { return []; };\r\n    NgxGalleryActionComponent.propDecorators = {\r\n        'icon': [{ type: core.Input },],\r\n        'disabled': [{ type: core.Input },],\r\n        'titleText': [{ type: core.Input },],\r\n        'onClick': [{ type: core.Output },],\r\n    };\r\n    return NgxGalleryActionComponent;\r\n}());\n\nvar NgxGalleryArrowsComponent = /** @class */ (function () {\r\n    function NgxGalleryArrowsComponent() {\r\n        this.onPrevClick = new core.EventEmitter();\r\n        this.onNextClick = new core.EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryArrowsComponent.prototype.handlePrevClick = function () {\r\n        this.onPrevClick.emit();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryArrowsComponent.prototype.handleNextClick = function () {\r\n        this.onNextClick.emit();\r\n    };\r\n    NgxGalleryArrowsComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-arrows',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handlePrevClick()\\\" [class.ngx-gallery-disabled]=\\\"prevDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowPrevIcon}}\\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handleNextClick()\\\" [class.ngx-gallery-disabled]=\\\"nextDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowNextIcon}}\\\"></i>\\n            </div>\\n        </div>\\n    \",\r\n                    styles: [\".ngx-gallery-arrow-wrapper { position: absolute; height: 100%; width: 1px; display: table; z-index: 2000; table-layout: fixed; } .ngx-gallery-arrow-left { left: 0px; } .ngx-gallery-arrow-right { right: 0px; } .ngx-gallery-arrow { top: 50%; transform: translateY(-50%); cursor: pointer; } .ngx-gallery-arrow.ngx-gallery-disabled { opacity: 0.6; cursor: default; } .ngx-gallery-arrow-left .ngx-gallery-arrow { left: 10px; } .ngx-gallery-arrow-right .ngx-gallery-arrow { right: 10px; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryArrowsComponent.ctorParameters = function () { return []; };\r\n    NgxGalleryArrowsComponent.propDecorators = {\r\n        'prevDisabled': [{ type: core.Input },],\r\n        'nextDisabled': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'onPrevClick': [{ type: core.Output },],\r\n        'onNextClick': [{ type: core.Output },],\r\n    };\r\n    return NgxGalleryArrowsComponent;\r\n}());\n\nvar NgxGalleryBulletsComponent = /** @class */ (function () {\r\n    function NgxGalleryBulletsComponent() {\r\n        this.active = 0;\r\n        this.onChange = new core.EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryBulletsComponent.prototype.getBullets = function () {\r\n        return Array(this.count);\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryBulletsComponent.prototype.handleChange = function (event, index) {\r\n        this.onChange.emit(index);\r\n    };\r\n    NgxGalleryBulletsComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-bullets',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-bullet\\\" *ngFor=\\\"let bullet of getBullets(); let i = index;\\\" (click)=\\\"handleChange($event, i)\\\" [ngClass]=\\\"{ 'ngx-gallery-active': i == active }\\\"></div>\\n    \",\r\n                    styles: [\":host { position: absolute; z-index: 2000; display: inline-flex; left: 50%; transform: translateX(-50%); bottom: 0px; padding: 10px; } .ngx-gallery-bullet { width: 10px; height: 10px; border-radius: 50%; cursor: pointer; background: white; } .ngx-gallery-bullet:not(:first-child) { margin-left: 5px; } .ngx-gallery-bullet:hover, .ngx-gallery-bullet.ngx-gallery-active { background: black; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryBulletsComponent.ctorParameters = function () { return []; };\r\n    NgxGalleryBulletsComponent.propDecorators = {\r\n        'count': [{ type: core.Input },],\r\n        'active': [{ type: core.Input },],\r\n        'onChange': [{ type: core.Output },],\r\n    };\r\n    return NgxGalleryBulletsComponent;\r\n}());\n\nvar NgxGalleryHelperService = /** @class */ (function () {\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function NgxGalleryHelperService(renderer) {\r\n        this.renderer = renderer;\r\n        this.swipeHandlers = new Map();\r\n    }\r\n    /**\r\n     * @param {?} status\r\n     * @param {?} element\r\n     * @param {?} id\r\n     * @param {?} nextHandler\r\n     * @param {?} prevHandler\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.manageSwipe = function (status, element, id, nextHandler, prevHandler) {\r\n        var /** @type {?} */ handlers = this.getSwipeHandlers(id);\r\n        // swipeleft and swiperight are available only if hammerjs is included\r\n        try {\r\n            if (status && !handlers) {\r\n                this.swipeHandlers.set(id, [\r\n                    this.renderer.listen(element.nativeElement, 'swipeleft', function () { return nextHandler(); }),\r\n                    this.renderer.listen(element.nativeElement, 'swiperight', function () { return prevHandler(); })\r\n                ]);\r\n            }\r\n            else if (!status && handlers) {\r\n                handlers.map(function (handler) { return handler(); });\r\n                this.removeSwipeHandlers(id);\r\n            }\r\n        }\r\n        catch (e) { }\r\n    };\r\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.validateUrl = function (url) {\r\n        if (url.replace) {\r\n            return url.replace(new RegExp(' ', 'g'), '%20')\r\n                .replace(new RegExp('\\'', 'g'), '%27');\r\n        }\r\n        else {\r\n            return url;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.getBackgroundUrl = function (image) {\r\n        return 'url(\\'' + this.validateUrl(image) + '\\')';\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.getSwipeHandlers = function (id) {\r\n        return this.swipeHandlers.get(id);\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.removeSwipeHandlers = function (id) {\r\n        this.swipeHandlers.delete(id);\r\n    };\r\n    NgxGalleryHelperService.decorators = [\r\n        { type: core.Injectable },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryHelperService.ctorParameters = function () { return [\r\n        { type: core.Renderer, },\r\n    ]; };\r\n    return NgxGalleryHelperService;\r\n}());\n\nvar NgxGalleryAnimation = /** @class */ (function () {\r\n    function NgxGalleryAnimation() {\r\n    }\r\n    NgxGalleryAnimation.Fade = 'fade';\r\n    NgxGalleryAnimation.Slide = 'slide';\r\n    NgxGalleryAnimation.Rotate = 'rotate';\r\n    NgxGalleryAnimation.Zoom = 'zoom';\r\n    return NgxGalleryAnimation;\r\n}());\n\nvar NgxGalleryImageComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\r\n    function NgxGalleryImageComponent(sanitization, elementRef, helperService) {\r\n        this.sanitization = sanitization;\r\n        this.elementRef = elementRef;\r\n        this.helperService = helperService;\r\n        this.onClick = new core.EventEmitter();\r\n        this.onActiveChange = new core.EventEmitter();\r\n        this.canChangeImage = true;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.ngOnInit = function () {\r\n        if (this.arrows && this.arrowsAutoHide) {\r\n            this.arrows = false;\r\n        }\r\n        if (this.autoPlay) {\r\n            this.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (changes['swipe']) {\r\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', function () { return _this.showNext(); }, function () { return _this.showPrev(); });\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.onMouseEnter = function () {\r\n        if (this.arrowsAutoHide && !this.arrows) {\r\n            this.arrows = true;\r\n        }\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.stopAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.onMouseLeave = function () {\r\n        if (this.arrowsAutoHide && this.arrows) {\r\n            this.arrows = false;\r\n        }\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.reset = function (index) {\r\n        this.selectedIndex = index;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.getImages = function () {\r\n        if (!this.images) {\r\n            return [];\r\n        }\r\n        if (this.lazyLoading) {\r\n            var /** @type {?} */ indexes_1 = [this.selectedIndex];\r\n            var /** @type {?} */ prevIndex = this.selectedIndex - 1;\r\n            if (prevIndex === -1 && this.infinityMove) {\r\n                indexes_1.push(this.images.length - 1);\r\n            }\r\n            else if (prevIndex >= 0) {\r\n                indexes_1.push(prevIndex);\r\n            }\r\n            var /** @type {?} */ nextIndex = this.selectedIndex + 1;\r\n            if (nextIndex == this.images.length && this.infinityMove) {\r\n                indexes_1.push(0);\r\n            }\r\n            else if (nextIndex < this.images.length) {\r\n                indexes_1.push(nextIndex);\r\n            }\r\n            return this.images.filter(function (img, i) { return indexes_1.indexOf(i) != -1; });\r\n        }\r\n        else {\r\n            return this.images;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.startAutoPlay = function () {\r\n        var _this = this;\r\n        this.stopAutoPlay();\r\n        this.timer = setInterval(function () {\r\n            if (!_this.showNext()) {\r\n                _this.selectedIndex = -1;\r\n                _this.showNext();\r\n            }\r\n        }, this.autoPlayInterval);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.stopAutoPlay = function () {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.handleClick = function (event, index) {\r\n        if (this.clickable) {\r\n            this.onClick.emit(index);\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.show = function (index) {\r\n        this.selectedIndex = index;\r\n        this.onActiveChange.emit(this.selectedIndex);\r\n        this.setChangeTimeout();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.showNext = function () {\r\n        if (this.canShowNext() && this.canChangeImage) {\r\n            this.selectedIndex++;\r\n            if (this.selectedIndex === this.images.length) {\r\n                this.selectedIndex = 0;\r\n            }\r\n            this.onActiveChange.emit(this.selectedIndex);\r\n            this.setChangeTimeout();\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.showPrev = function () {\r\n        if (this.canShowPrev() && this.canChangeImage) {\r\n            this.selectedIndex--;\r\n            if (this.selectedIndex < 0) {\r\n                this.selectedIndex = this.images.length - 1;\r\n            }\r\n            this.onActiveChange.emit(this.selectedIndex);\r\n            this.setChangeTimeout();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.setChangeTimeout = function () {\r\n        var _this = this;\r\n        this.canChangeImage = false;\r\n        var /** @type {?} */ timeout = 1000;\r\n        if (this.animation === NgxGalleryAnimation.Slide\r\n            || this.animation === NgxGalleryAnimation.Fade) {\r\n            timeout = 500;\r\n        }\r\n        setTimeout(function () {\r\n            _this.canChangeImage = true;\r\n        }, timeout);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.canShowNext = function () {\r\n        if (this.images) {\r\n            return this.infinityMove || this.selectedIndex < this.images.length - 1\r\n                ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.canShowPrev = function () {\r\n        if (this.images) {\r\n            return this.infinityMove || this.selectedIndex > 0 ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.getSafeUrl = function (image) {\r\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\r\n    };\r\n    NgxGalleryImageComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-image',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\\\">\\n            <div class=\\\"ngx-gallery-image\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [ngClass]=\\\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\\\" [style.background-image]=\\\"getSafeUrl(image.src)\\\" (click)=\\\"handleClick($event, image.index)\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, image.index)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-image-text\\\" *ngIf=\\\"showDescription && descriptions[image.index]\\\" [innerHTML]=\\\"descriptions[image.index]\\\" (click)=\\\"$event.stopPropagation()\\\"></div>\\n            </div>\\n        </div>\\n        <ngx-gallery-bullets *ngIf=\\\"bullets\\\" [count]=\\\"images.length\\\" [active]=\\\"selectedIndex\\\" (onChange)=\\\"show($event)\\\"></ngx-gallery-bullets>\\n        <ngx-gallery-arrows class=\\\"ngx-gallery-image-size-{{size}}\\\" *ngIf=\\\"arrows\\\" (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\r\n                    styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-image-wrapper { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; overflow: hidden; } .ngx-gallery-image { background-position: center; background-repeat: no-repeat; height: 100%; width: 100%; position: absolute; top: 0px; } .ngx-gallery-image.ngx-gallery-active { z-index: 1000; } .ngx-gallery-image-size-cover .ngx-gallery-image { background-size: cover; } .ngx-gallery-image-size-contain .ngx-gallery-image { background-size: contain; } .ngx-gallery-animation-fade .ngx-gallery-image { left: 0px; opacity: 0; transition: 0.5s ease-in-out; } .ngx-gallery-animation-fade .ngx-gallery-image.ngx-gallery-active { opacity: 1; } .ngx-gallery-animation-slide .ngx-gallery-image { transition: 0.5s ease-in-out; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-active { left: 0px; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-left { left: -100%; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-right { left: 100%; } .ngx-gallery-animation-rotate .ngx-gallery-image { transition: 1s ease; transform: scale(3.5, 3.5) rotate(90deg); left: 0px; opacity: 0; } .ngx-gallery-animation-rotate .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1) rotate(0deg); opacity: 1; } .ngx-gallery-animation-zoom .ngx-gallery-image { transition: 1s ease; transform: scale(2.5, 2.5); left: 0px; opacity: 0; } .ngx-gallery-animation-zoom .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1); opacity: 1; } .ngx-gallery-image-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; position: absolute; bottom: 0px; z-index: 10; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryImageComponent.ctorParameters = function () { return [\r\n        { type: platformBrowser.DomSanitizer, },\r\n        { type: core.ElementRef, },\r\n        { type: NgxGalleryHelperService, },\r\n    ]; };\r\n    NgxGalleryImageComponent.propDecorators = {\r\n        'images': [{ type: core.Input },],\r\n        'clickable': [{ type: core.Input },],\r\n        'selectedIndex': [{ type: core.Input },],\r\n        'arrows': [{ type: core.Input },],\r\n        'arrowsAutoHide': [{ type: core.Input },],\r\n        'swipe': [{ type: core.Input },],\r\n        'animation': [{ type: core.Input },],\r\n        'size': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'autoPlay': [{ type: core.Input },],\r\n        'autoPlayInterval': [{ type: core.Input },],\r\n        'autoPlayPauseOnHover': [{ type: core.Input },],\r\n        'infinityMove': [{ type: core.Input },],\r\n        'lazyLoading': [{ type: core.Input },],\r\n        'actions': [{ type: core.Input },],\r\n        'descriptions': [{ type: core.Input },],\r\n        'showDescription': [{ type: core.Input },],\r\n        'bullets': [{ type: core.Input },],\r\n        'onClick': [{ type: core.Output },],\r\n        'onActiveChange': [{ type: core.Output },],\r\n        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],\r\n        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],\r\n    };\r\n    return NgxGalleryImageComponent;\r\n}());\n\nvar NgxGalleryOrder = /** @class */ (function () {\r\n    function NgxGalleryOrder() {\r\n    }\r\n    NgxGalleryOrder.Column = 1;\r\n    NgxGalleryOrder.Row = 2;\r\n    NgxGalleryOrder.Page = 3;\r\n    return NgxGalleryOrder;\r\n}());\n\nvar NgxGalleryThumbnailsComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\r\n    function NgxGalleryThumbnailsComponent(sanitization, elementRef, helperService) {\r\n        this.sanitization = sanitization;\r\n        this.elementRef = elementRef;\r\n        this.helperService = helperService;\r\n        this.minStopIndex = 0;\r\n        this.onActiveChange = new core.EventEmitter();\r\n        this.index = 0;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (changes['selectedIndex']) {\r\n            this.validateIndex();\r\n        }\r\n        if (changes['swipe']) {\r\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'thumbnails', function () { return _this.moveRight(); }, function () { return _this.moveLeft(); });\r\n        }\r\n        if (this.images) {\r\n            this.remainingCountValue = this.images.length - (this.rows * this.columns);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.onMouseEnter = function () {\r\n        this.mouseenter = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.onMouseLeave = function () {\r\n        this.mouseenter = false;\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.reset = function (index) {\r\n        this.selectedIndex = index;\r\n        this.setDefaultPosition();\r\n        this.index = 0;\r\n        this.validateIndex();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getImages = function () {\r\n        if (!this.images) {\r\n            return [];\r\n        }\r\n        if (this.remainingCount) {\r\n            return this.images.slice(0, this.rows * this.columns);\r\n        }\r\n        else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\r\n            var /** @type {?} */ stopIndex = 0;\r\n            if (this.order === NgxGalleryOrder.Column) {\r\n                stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\r\n            }\r\n            else if (this.order === NgxGalleryOrder.Page) {\r\n                stopIndex = this.index + ((this.columns * this.rows) * 2);\r\n            }\r\n            if (stopIndex <= this.minStopIndex) {\r\n                stopIndex = this.minStopIndex;\r\n            }\r\n            else {\r\n                this.minStopIndex = stopIndex;\r\n            }\r\n            return this.images.slice(0, stopIndex);\r\n        }\r\n        else {\r\n            return this.images;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.handleClick = function (event, index) {\r\n        if (!this.hasLink(index)) {\r\n            this.selectedIndex = index;\r\n            this.onActiveChange.emit(index);\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.hasLink = function (index) {\r\n        if (this.links && this.links.length && this.links[index])\r\n            return true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.moveRight = function () {\r\n        if (this.canMoveRight()) {\r\n            this.index += this.moveSize;\r\n            var /** @type {?} */ maxIndex = this.getMaxIndex() - this.columns;\r\n            if (this.index > maxIndex) {\r\n                this.index = maxIndex;\r\n            }\r\n            this.setThumbnailsPosition();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.moveLeft = function () {\r\n        if (this.canMoveLeft()) {\r\n            this.index -= this.moveSize;\r\n            if (this.index < 0) {\r\n                this.index = 0;\r\n            }\r\n            this.setThumbnailsPosition();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.canMoveRight = function () {\r\n        return this.index + this.columns < this.getMaxIndex() ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.canMoveLeft = function () {\r\n        return this.index !== 0 ? true : false;\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailLeft = function (index) {\r\n        var /** @type {?} */ calculatedIndex;\r\n        if (this.order === NgxGalleryOrder.Column) {\r\n            calculatedIndex = Math.floor(index / this.rows);\r\n        }\r\n        else if (this.order === NgxGalleryOrder.Page) {\r\n            calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\r\n        }\r\n        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\r\n            calculatedIndex = index % this.columns;\r\n        }\r\n        else {\r\n            calculatedIndex = index % Math.ceil(this.images.length / this.rows);\r\n        }\r\n        return this.getThumbnailPosition(calculatedIndex, this.columns);\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailTop = function (index) {\r\n        var /** @type {?} */ calculatedIndex;\r\n        if (this.order === NgxGalleryOrder.Column) {\r\n            calculatedIndex = index % this.rows;\r\n        }\r\n        else if (this.order === NgxGalleryOrder.Page) {\r\n            calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\r\n        }\r\n        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\r\n            calculatedIndex = Math.floor(index / this.columns);\r\n        }\r\n        else {\r\n            calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\r\n        }\r\n        return this.getThumbnailPosition(calculatedIndex, this.rows);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailWidth = function () {\r\n        return this.getThumbnailDimension(this.columns);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailHeight = function () {\r\n        return this.getThumbnailDimension(this.rows);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.setThumbnailsPosition = function () {\r\n        this.thumbnailsLeft = -((100 / this.columns) * this.index) + '%';\r\n        this.thumbnailsMarginLeft = -((this.margin - (((this.columns - 1)\r\n            * this.margin) / this.columns)) * this.index) + 'px';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.setDefaultPosition = function () {\r\n        this.thumbnailsLeft = '0px';\r\n        this.thumbnailsMarginLeft = '0px';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.canShowArrows = function () {\r\n        if (this.remainingCount) {\r\n            return false;\r\n        }\r\n        else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\r\n            && (!this.arrowsAutoHide || this.mouseenter)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.validateIndex = function () {\r\n        if (this.images) {\r\n            var /** @type {?} */ newIndex = void 0;\r\n            if (this.order === NgxGalleryOrder.Column) {\r\n                newIndex = Math.floor(this.selectedIndex / this.rows);\r\n            }\r\n            else {\r\n                newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\r\n            }\r\n            if (this.remainingCount) {\r\n                newIndex = 0;\r\n            }\r\n            if (newIndex < this.index || newIndex >= this.index + this.columns) {\r\n                var /** @type {?} */ maxIndex = this.getMaxIndex() - this.columns;\r\n                this.index = newIndex > maxIndex ? maxIndex : newIndex;\r\n                this.setThumbnailsPosition();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getSafeUrl = function (image) {\r\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailPosition = function (index, count) {\r\n        return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\r\n            + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\r\n    };\r\n    /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailDimension = function (count) {\r\n        if (this.margin !== 0) {\r\n            return this.getSafeStyle('calc(' + (100 / count) + '% - '\r\n                + (((count - 1) * this.margin) / count) + 'px)');\r\n        }\r\n        else {\r\n            return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getMaxIndex = function () {\r\n        if (this.order == NgxGalleryOrder.Page) {\r\n            var /** @type {?} */ maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\r\n            if (this.images.length % this.getVisibleCount() > this.columns) {\r\n                maxIndex += this.columns;\r\n            }\r\n            else {\r\n                maxIndex += this.images.length % this.getVisibleCount();\r\n            }\r\n            return maxIndex;\r\n        }\r\n        else {\r\n            return Math.ceil(this.images.length / this.rows);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getVisibleCount = function () {\r\n        return this.columns * this.rows;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getSafeStyle = function (value) {\r\n        return this.sanitization.bypassSecurityTrustStyle(value);\r\n    };\r\n    NgxGalleryThumbnailsComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-thumbnails',\r\n                    template: \"\\n    <div class=\\\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\\\">\\n        <div class=\\\"ngx-gallery-thumbnails\\\" [style.transform]=\\\"'translateX(' + thumbnailsLeft + ')'\\\" [style.marginLeft]=\\\"thumbnailsMarginLeft\\\">\\n            <a [href]=\\\"hasLink(i) ? links[i] : '#'\\\" [target]=\\\"linkTarget\\\" class=\\\"ngx-gallery-thumbnail\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [style.background-image]=\\\"getSafeUrl(image)\\\" (click)=\\\"handleClick($event, i)\\\" [style.width]=\\\"getThumbnailWidth()\\\" [style.height]=\\\"getThumbnailHeight()\\\" [style.left]=\\\"getThumbnailLeft(i)\\\" [style.top]=\\\"getThumbnailTop(i)\\\" [ngClass]=\\\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\\\" [attr.aria-label]=\\\"labels[i]\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, i)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-remaining-count-overlay\\\" *ngIf=\\\"remainingCount && remainingCountValue && (i == (rows * columns) - 1)\\\">\\n                    <span class=\\\"ngx-gallery-remaining-count\\\">+{{remainingCountValue}}</span>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n    <ngx-gallery-arrows *ngIf=\\\"canShowArrows()\\\" (onPrevClick)=\\\"moveLeft()\\\" (onNextClick)=\\\"moveRight()\\\" [prevDisabled]=\\\"!canMoveLeft()\\\" [nextDisabled]=\\\"!canMoveRight()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\r\n                    styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-thumbnails-wrapper { width: 100%; height: 100%; position: absolute; overflow: hidden; } .ngx-gallery-thumbnails { height: 100%; width: 100%; position: absolute; left: 0px; transform: translateX(0); transition: transform 0.5s ease-in-out; will-change: transform; } .ngx-gallery-thumbnails .ngx-gallery-thumbnail { position: absolute; height: 100%; background-position: center; background-repeat: no-repeat; text-decoration: none; } .ngx-gallery-thumbnail-size-cover .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: cover; } .ngx-gallery-thumbnail-size-contain .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: contain; } .ngx-gallery-remaining-count-overlay { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; background-color: rgba(0, 0, 0, 0.4); } .ngx-gallery-remaining-count { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 30px; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryThumbnailsComponent.ctorParameters = function () { return [\r\n        { type: platformBrowser.DomSanitizer, },\r\n        { type: core.ElementRef, },\r\n        { type: NgxGalleryHelperService, },\r\n    ]; };\r\n    NgxGalleryThumbnailsComponent.propDecorators = {\r\n        'images': [{ type: core.Input },],\r\n        'links': [{ type: core.Input },],\r\n        'labels': [{ type: core.Input },],\r\n        'linkTarget': [{ type: core.Input },],\r\n        'columns': [{ type: core.Input },],\r\n        'rows': [{ type: core.Input },],\r\n        'arrows': [{ type: core.Input },],\r\n        'arrowsAutoHide': [{ type: core.Input },],\r\n        'margin': [{ type: core.Input },],\r\n        'selectedIndex': [{ type: core.Input },],\r\n        'clickable': [{ type: core.Input },],\r\n        'swipe': [{ type: core.Input },],\r\n        'size': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'moveSize': [{ type: core.Input },],\r\n        'order': [{ type: core.Input },],\r\n        'remainingCount': [{ type: core.Input },],\r\n        'lazyLoading': [{ type: core.Input },],\r\n        'actions': [{ type: core.Input },],\r\n        'onActiveChange': [{ type: core.Output },],\r\n        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],\r\n        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],\r\n    };\r\n    return NgxGalleryThumbnailsComponent;\r\n}());\n\nvar NgxGalleryPreviewComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     * @param {?} renderer\r\n     * @param {?} changeDetectorRef\r\n     */\r\n    function NgxGalleryPreviewComponent(sanitization, elementRef, helperService, renderer, changeDetectorRef) {\r\n        this.sanitization = sanitization;\r\n        this.elementRef = elementRef;\r\n        this.helperService = helperService;\r\n        this.renderer = renderer;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.showSpinner = false;\r\n        this.positionLeft = 0;\r\n        this.positionTop = 0;\r\n        this.zoomValue = 1;\r\n        this.loading = false;\r\n        this.rotateValue = 0;\r\n        this.index = 0;\r\n        this.onOpen = new core.EventEmitter();\r\n        this.onClose = new core.EventEmitter();\r\n        this.onActiveChange = new core.EventEmitter();\r\n        this.isOpen = false;\r\n        this.initialX = 0;\r\n        this.initialY = 0;\r\n        this.initialLeft = 0;\r\n        this.initialTop = 0;\r\n        this.isMove = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.ngOnInit = function () {\r\n        if (this.arrows && this.arrowsAutoHide) {\r\n            this.arrows = false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (changes['swipe']) {\r\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'preview', function () { return _this.showNext(); }, function () { return _this.showPrev(); });\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.ngOnDestroy = function () {\r\n        if (this.keyDownListener) {\r\n            this.keyDownListener();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.onMouseEnter = function () {\r\n        if (this.arrowsAutoHide && !this.arrows) {\r\n            this.arrows = true;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.onMouseLeave = function () {\r\n        if (this.arrowsAutoHide && this.arrows) {\r\n            this.arrows = false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.onKeyDown = function (e) {\r\n        if (this.isOpen) {\r\n            if (this.keyboardNavigation) {\r\n                if (this.isKeyboardPrev(e)) {\r\n                    this.showPrev();\r\n                }\r\n                else if (this.isKeyboardNext(e)) {\r\n                    this.showNext();\r\n                }\r\n            }\r\n            if (this.closeOnEsc && this.isKeyboardEsc(e)) {\r\n                this.close();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.open = function (index) {\r\n        var _this = this;\r\n        this.onOpen.emit();\r\n        this.index = index;\r\n        this.isOpen = true;\r\n        this.show(true);\r\n        if (this.forceFullscreen) {\r\n            this.manageFullscreen();\r\n        }\r\n        this.keyDownListener = this.renderer.listenGlobal(\"window\", \"keydown\", function (e) { return _this.onKeyDown(e); });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.close = function () {\r\n        this.isOpen = false;\r\n        this.closeFullscreen();\r\n        this.onClose.emit();\r\n        this.stopAutoPlay();\r\n        if (this.keyDownListener) {\r\n            this.keyDownListener();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.imageMouseEnter = function () {\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.stopAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.imageMouseLeave = function () {\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.startAutoPlay = function () {\r\n        var _this = this;\r\n        if (this.autoPlay) {\r\n            this.stopAutoPlay();\r\n            this.timer = setTimeout(function () {\r\n                if (!_this.showNext()) {\r\n                    _this.index = -1;\r\n                    _this.showNext();\r\n                }\r\n            }, this.autoPlayInterval);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.stopAutoPlay = function () {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.showAtIndex = function (index) {\r\n        this.index = index;\r\n        this.show();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.showNext = function () {\r\n        if (this.canShowNext()) {\r\n            this.index++;\r\n            if (this.index === this.images.length) {\r\n                this.index = 0;\r\n            }\r\n            this.show();\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.showPrev = function () {\r\n        if (this.canShowPrev()) {\r\n            this.index--;\r\n            if (this.index < 0) {\r\n                this.index = this.images.length - 1;\r\n            }\r\n            this.show();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canShowNext = function () {\r\n        if (this.loading) {\r\n            return false;\r\n        }\r\n        else if (this.images) {\r\n            return this.infinityMove || this.index < this.images.length - 1 ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canShowPrev = function () {\r\n        if (this.loading) {\r\n            return false;\r\n        }\r\n        else if (this.images) {\r\n            return this.infinityMove || this.index > 0 ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.manageFullscreen = function () {\r\n        if (this.fullscreen || this.forceFullscreen) {\r\n            var /** @type {?} */ doc = (document);\r\n            if (!doc.fullscreenElement && !doc.mozFullScreenElement\r\n                && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\r\n                this.openFullscreen();\r\n            }\r\n            else {\r\n                this.closeFullscreen();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getSafeUrl = function (image) {\r\n        return image.substr(0, 10) === 'data:image' ?\r\n            image : this.sanitization.bypassSecurityTrustUrl(image);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.zoomIn = function () {\r\n        if (this.canZoomIn()) {\r\n            this.zoomValue += this.zoomStep;\r\n            if (this.zoomValue > this.zoomMax) {\r\n                this.zoomValue = this.zoomMax;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.zoomOut = function () {\r\n        if (this.canZoomOut()) {\r\n            this.zoomValue -= this.zoomStep;\r\n            if (this.zoomValue < this.zoomMin) {\r\n                this.zoomValue = this.zoomMin;\r\n            }\r\n            if (this.zoomValue <= 1) {\r\n                this.resetPosition();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.rotateLeft = function () {\r\n        this.rotateValue -= 90;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.rotateRight = function () {\r\n        this.rotateValue += 90;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getTransform = function () {\r\n        return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canZoomIn = function () {\r\n        return this.zoomValue < this.zoomMax ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canZoomOut = function () {\r\n        return this.zoomValue > this.zoomMin ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canDragOnZoom = function () {\r\n        return this.zoom && this.zoomValue > 1;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.mouseDownHandler = function (e) {\r\n        if (this.canDragOnZoom()) {\r\n            this.initialX = this.getClientX(e);\r\n            this.initialY = this.getClientY(e);\r\n            this.initialLeft = this.positionLeft;\r\n            this.initialTop = this.positionTop;\r\n            this.isMove = true;\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.mouseUpHandler = function (e) {\r\n        this.isMove = false;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.mouseMoveHandler = function (e) {\r\n        if (this.isMove) {\r\n            this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\r\n            this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getClientX = function (e) {\r\n        return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getClientY = function (e) {\r\n        return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.resetPosition = function () {\r\n        if (this.zoom) {\r\n            this.positionLeft = 0;\r\n            this.positionTop = 0;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isKeyboardNext = function (e) {\r\n        return e.keyCode === 39 ? true : false;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isKeyboardPrev = function (e) {\r\n        return e.keyCode === 37 ? true : false;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isKeyboardEsc = function (e) {\r\n        return e.keyCode === 27 ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.openFullscreen = function () {\r\n        var /** @type {?} */ element = (document.documentElement);\r\n        if (element.requestFullscreen) {\r\n            element.requestFullscreen();\r\n        }\r\n        else if (element.msRequestFullscreen) {\r\n            element.msRequestFullscreen();\r\n        }\r\n        else if (element.mozRequestFullScreen) {\r\n            element.mozRequestFullScreen();\r\n        }\r\n        else if (element.webkitRequestFullscreen) {\r\n            element.webkitRequestFullscreen();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.closeFullscreen = function () {\r\n        if (this.isFullscreen()) {\r\n            var /** @type {?} */ doc = (document);\r\n            if (doc.exitFullscreen) {\r\n                doc.exitFullscreen();\r\n            }\r\n            else if (doc.msExitFullscreen) {\r\n                doc.msExitFullscreen();\r\n            }\r\n            else if (doc.mozCancelFullScreen) {\r\n                doc.mozCancelFullScreen();\r\n            }\r\n            else if (doc.webkitExitFullscreen) {\r\n                doc.webkitExitFullscreen();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isFullscreen = function () {\r\n        var /** @type {?} */ doc = (document);\r\n        return doc.fullscreenElement || doc.webkitFullscreenElement\r\n            || doc.mozFullScreenElement || doc.msFullscreenElement;\r\n    };\r\n    /**\r\n     * @param {?=} first\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.show = function (first) {\r\n        var _this = this;\r\n        if (first === void 0) { first = false; }\r\n        this.loading = true;\r\n        this.stopAutoPlay();\r\n        this.onActiveChange.emit(this.index);\r\n        if (first || !this.animation) {\r\n            this._show();\r\n        }\r\n        else {\r\n            setTimeout(function () { return _this._show(); }, 600);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype._show = function () {\r\n        var _this = this;\r\n        this.zoomValue = 1;\r\n        this.rotateValue = 0;\r\n        this.resetPosition();\r\n        this.src = this.getSafeUrl(/** @type {?} */ (this.images[this.index]));\r\n        this.srcIndex = this.index;\r\n        this.description = this.descriptions[this.index];\r\n        this.changeDetectorRef.markForCheck();\r\n        setTimeout(function () {\r\n            if (_this.isLoaded(_this.previewImage.nativeElement)) {\r\n                _this.loading = false;\r\n                _this.startAutoPlay();\r\n                _this.changeDetectorRef.markForCheck();\r\n            }\r\n            else {\r\n                setTimeout(function () {\r\n                    if (_this.loading) {\r\n                        _this.showSpinner = true;\r\n                        _this.changeDetectorRef.markForCheck();\r\n                    }\r\n                });\r\n                _this.previewImage.nativeElement.onload = function () {\r\n                    _this.loading = false;\r\n                    _this.showSpinner = false;\r\n                    _this.previewImage.nativeElement.onload = null;\r\n                    _this.startAutoPlay();\r\n                    _this.changeDetectorRef.markForCheck();\r\n                };\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} img\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isLoaded = function (img) {\r\n        if (!img.complete) {\r\n            return false;\r\n        }\r\n        if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    NgxGalleryPreviewComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-preview',\r\n                    template: \"\\n        <ngx-gallery-arrows *ngIf=\\\"arrows\\\" (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n        <div class=\\\"ngx-gallery-preview-top\\\">\\n            <div class=\\\"ngx-gallery-preview-icons\\\">\\n                <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, index)\\\"></ngx-gallery-action>\\n                <a *ngIf=\\\"download && src\\\" [href]=\\\"src\\\" class=\\\"ngx-gallery-icon\\\" aria-hidden=\\\"true\\\" download>\\n                    <i class=\\\"ngx-gallery-icon-content {{ downloadIcon }}\\\"></i>\\n                </a>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomOutIcon\\\" [disabled]=\\\"!canZoomOut()\\\" (onClick)=\\\"zoomOut()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomInIcon\\\" [disabled]=\\\"!canZoomIn()\\\" (onClick)=\\\"zoomIn()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateLeftIcon\\\" (onClick)=\\\"rotateLeft()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateRightIcon\\\" (onClick)=\\\"rotateRight()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"fullscreen\\\" [icon]=\\\"'ngx-gallery-fullscreen ' + fullscreenIcon\\\" (onClick)=\\\"manageFullscreen()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action [icon]=\\\"'ngx-gallery-close ' + closeIcon\\\" (onClick)=\\\"close()\\\"></ngx-gallery-action>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-spinner-wrapper ngx-gallery-center\\\" [class.ngx-gallery-active]=\\\"showSpinner\\\">\\n            <i class=\\\"ngx-gallery-icon ngx-gallery-spinner {{spinnerIcon}}\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n        <div class=\\\"ngx-gallery-preview-wrapper\\\" (click)=\\\"closeOnClick && close()\\\" (mouseup)=\\\"mouseUpHandler($event)\\\" (mousemove)=\\\"mouseMoveHandler($event)\\\" (touchend)=\\\"mouseUpHandler($event)\\\" (touchmove)=\\\"mouseMoveHandler($event)\\\">\\n            <div class=\\\"ngx-gallery-preview-img-wrapper\\\">\\n                <img *ngIf=\\\"src\\\" #previewImage class=\\\"ngx-gallery-preview-img ngx-gallery-center\\\" [src]=\\\"src\\\" (click)=\\\"$event.stopPropagation()\\\" (mouseenter)=\\\"imageMouseEnter()\\\" (mouseleave)=\\\"imageMouseLeave()\\\" (mousedown)=\\\"mouseDownHandler($event)\\\" (touchstart)=\\\"mouseDownHandler($event)\\\" [class.ngx-gallery-active]=\\\"!loading\\\" [class.animation]=\\\"animation\\\" [class.ngx-gallery-grab]=\\\"canDragOnZoom()\\\" [style.transform]=\\\"getTransform()\\\" [style.left]=\\\"positionLeft + 'px'\\\" [style.top]=\\\"positionTop + 'px'\\\"/>\\n                <ngx-gallery-bullets *ngIf=\\\"bullets\\\" [count]=\\\"images.length\\\" [active]=\\\"index\\\" (onChange)=\\\"showAtIndex($event)\\\"></ngx-gallery-bullets>\\n            </div>\\n            <div class=\\\"ngx-gallery-preview-text\\\" *ngIf=\\\"showDescription && description\\\" [innerHTML]=\\\"description\\\" (click)=\\\"$event.stopPropagation()\\\"></div>\\n        </div>\\n    \",\r\n                    styles: [\":host(.ngx-gallery-active) { width: 100%; height: 100%; position: fixed; left: 0; top: 0; background: rgba(0, 0, 0, 0.7); z-index: 10000; display: inline-block; } :host { display: none; } :host /deep/ .ngx-gallery-arrow { font-size: 50px; } :host /deep/ ngx-gallery-bullets { height: 5%; align-items: center; padding: 0px; } .ngx-gallery-preview-img { opacity: 0; max-width: 90%; max-height: 90%; user-select: none; transition: transform .5s; } .ngx-gallery-preview-img.animation { transition: opacity 0.5s linear, transform .5s; } .ngx-gallery-preview-img.ngx-gallery-active { opacity: 1; } .ngx-gallery-preview-img.ngx-gallery-grab { cursor: grab; cursor: -webkit-grab; } .ngx-gallery-icon.ngx-gallery-spinner { font-size: 50px; left: 0; display: inline-block; } :host /deep/ .ngx-gallery-preview-top { position: absolute; width: 100%; user-select: none; } :host /deep/ .ngx-gallery-preview-icons { float: right; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon { position: relative; margin-right: 10px; margin-top: 10px; font-size: 25px; cursor: pointer; text-decoration: none; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon.ngx-gallery-icon-disabled { cursor: default; opacity: 0.4; } .ngx-spinner-wrapper { width: 50px; height: 50px; display: none; } .ngx-spinner-wrapper.ngx-gallery-active { display: inline-block; } .ngx-gallery-center { position: absolute; left: 0; right: 0; bottom: 0; margin: auto; top: 0; } .ngx-gallery-preview-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; flex: 0 1 auto; z-index: 10; } .ngx-gallery-preview-wrapper { width: 100%; height: 100%; display: flex; flex-flow: column; } .ngx-gallery-preview-img-wrapper { flex: 1 1 auto; position: relative; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryPreviewComponent.ctorParameters = function () { return [\r\n        { type: platformBrowser.DomSanitizer, },\r\n        { type: core.ElementRef, },\r\n        { type: NgxGalleryHelperService, },\r\n        { type: core.Renderer, },\r\n        { type: core.ChangeDetectorRef, },\r\n    ]; };\r\n    NgxGalleryPreviewComponent.propDecorators = {\r\n        'images': [{ type: core.Input },],\r\n        'descriptions': [{ type: core.Input },],\r\n        'showDescription': [{ type: core.Input },],\r\n        'arrows': [{ type: core.Input },],\r\n        'arrowsAutoHide': [{ type: core.Input },],\r\n        'swipe': [{ type: core.Input },],\r\n        'fullscreen': [{ type: core.Input },],\r\n        'forceFullscreen': [{ type: core.Input },],\r\n        'closeOnClick': [{ type: core.Input },],\r\n        'closeOnEsc': [{ type: core.Input },],\r\n        'keyboardNavigation': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'closeIcon': [{ type: core.Input },],\r\n        'fullscreenIcon': [{ type: core.Input },],\r\n        'spinnerIcon': [{ type: core.Input },],\r\n        'autoPlay': [{ type: core.Input },],\r\n        'autoPlayInterval': [{ type: core.Input },],\r\n        'autoPlayPauseOnHover': [{ type: core.Input },],\r\n        'infinityMove': [{ type: core.Input },],\r\n        'zoom': [{ type: core.Input },],\r\n        'zoomStep': [{ type: core.Input },],\r\n        'zoomMax': [{ type: core.Input },],\r\n        'zoomMin': [{ type: core.Input },],\r\n        'zoomInIcon': [{ type: core.Input },],\r\n        'zoomOutIcon': [{ type: core.Input },],\r\n        'animation': [{ type: core.Input },],\r\n        'actions': [{ type: core.Input },],\r\n        'rotate': [{ type: core.Input },],\r\n        'rotateLeftIcon': [{ type: core.Input },],\r\n        'rotateRightIcon': [{ type: core.Input },],\r\n        'download': [{ type: core.Input },],\r\n        'downloadIcon': [{ type: core.Input },],\r\n        'bullets': [{ type: core.Input },],\r\n        'onOpen': [{ type: core.Output },],\r\n        'onClose': [{ type: core.Output },],\r\n        'onActiveChange': [{ type: core.Output },],\r\n        'previewImage': [{ type: core.ViewChild, args: ['previewImage',] },],\r\n        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],\r\n        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],\r\n    };\r\n    return NgxGalleryPreviewComponent;\r\n}());\n\nvar NgxGalleryImageSize = /** @class */ (function () {\r\n    function NgxGalleryImageSize() {\r\n    }\r\n    NgxGalleryImageSize.Cover = 'cover';\r\n    NgxGalleryImageSize.Contain = 'contain';\r\n    return NgxGalleryImageSize;\r\n}());\n\nvar NgxGalleryLayout = /** @class */ (function () {\r\n    function NgxGalleryLayout() {\r\n    }\r\n    NgxGalleryLayout.ThumbnailsTop = 'thumbnails-top';\r\n    NgxGalleryLayout.ThumbnailsBottom = 'thumbnails-bottom';\r\n    return NgxGalleryLayout;\r\n}());\n\nvar NgxGalleryAction = /** @class */ (function () {\r\n    /**\r\n     * @param {?} action\r\n     */\r\n    function NgxGalleryAction(action) {\r\n        this.icon = action.icon;\r\n        this.disabled = action.disabled ? action.disabled : false;\r\n        this.titleText = action.titleText ? action.titleText : '';\r\n        this.onClick = action.onClick;\r\n    }\r\n    return NgxGalleryAction;\r\n}());\n\nvar NgxGalleryOptions = /** @class */ (function () {\r\n    /**\r\n     * @param {?} obj\r\n     */\r\n    function NgxGalleryOptions(obj) {\r\n        var preventDefaults = obj.breakpoint === undefined ? false : true;\r\n        function use(source, defaultValue) {\r\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\r\n        }\r\n        this.breakpoint = use(obj.breakpoint, undefined);\r\n        this.width = use(obj.width, '500px');\r\n        this.height = use(obj.height, '400px');\r\n        this.fullWidth = use(obj.fullWidth, false);\r\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\r\n        this.startIndex = use(obj.startIndex, 0);\r\n        this.linkTarget = use(obj.linkTarget, '_blank');\r\n        this.lazyLoading = use(obj.lazyLoading, true);\r\n        this.image = use(obj.image, true);\r\n        this.imagePercent = use(obj.imagePercent, 75);\r\n        this.imageArrows = use(obj.imageArrows, true);\r\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\r\n        this.imageSwipe = use(obj.imageSwipe, false);\r\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\r\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\r\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\r\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\r\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\r\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\r\n        if (obj && obj.imageActions && obj.imageActions.length) {\r\n            obj.imageActions = obj.imageActions.map(function (action) { return new NgxGalleryAction(action); });\r\n        }\r\n        this.imageActions = use(obj.imageActions, []);\r\n        this.imageDescription = use(obj.imageDescription, false);\r\n        this.imageBullets = use(obj.imageBullets, false);\r\n        this.thumbnails = use(obj.thumbnails, true);\r\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\r\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\r\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\r\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\r\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\r\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\r\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\r\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\r\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\r\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\r\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\r\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\r\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\r\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\r\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\r\n            obj.thumbnailActions = obj.thumbnailActions.map(function (action) { return new NgxGalleryAction(action); });\r\n        }\r\n        this.thumbnailActions = use(obj.thumbnailActions, []);\r\n        this.preview = use(obj.preview, true);\r\n        this.previewDescription = use(obj.previewDescription, true);\r\n        this.previewArrows = use(obj.previewArrows, true);\r\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\r\n        this.previewSwipe = use(obj.previewSwipe, false);\r\n        this.previewFullscreen = use(obj.previewFullscreen, false);\r\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\r\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\r\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\r\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\r\n        this.previewAnimation = use(obj.previewAnimation, true);\r\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\r\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\r\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\r\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\r\n        this.previewZoom = use(obj.previewZoom, false);\r\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\r\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\r\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\r\n        this.previewRotate = use(obj.previewRotate, false);\r\n        this.previewDownload = use(obj.previewDownload, false);\r\n        this.previewCustom = use(obj.previewCustom, undefined);\r\n        this.previewBullets = use(obj.previewBullets, false);\r\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\r\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\r\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\r\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\r\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\r\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\r\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\r\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\r\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\r\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\r\n        if (obj && obj.actions && obj.actions.length) {\r\n            obj.actions = obj.actions.map(function (action) { return new NgxGalleryAction(action); });\r\n        }\r\n        this.actions = use(obj.actions, []);\r\n    }\r\n    return NgxGalleryOptions;\r\n}());\n\nvar NgxGalleryOrderedImage = /** @class */ (function () {\r\n    /**\r\n     * @param {?} obj\r\n     */\r\n    function NgxGalleryOrderedImage(obj) {\r\n        this.src = obj.src;\r\n        this.index = obj.index;\r\n    }\r\n    return NgxGalleryOrderedImage;\r\n}());\n\nvar NgxGalleryComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} myElement\r\n     */\r\n    function NgxGalleryComponent(myElement) {\r\n        this.myElement = myElement;\r\n        this.imagesReady = new core.EventEmitter();\r\n        this.change = new core.EventEmitter();\r\n        this.previewOpen = new core.EventEmitter();\r\n        this.previewClose = new core.EventEmitter();\r\n        this.previewChange = new core.EventEmitter();\r\n        this.oldImagesLength = 0;\r\n        this.selectedIndex = 0;\r\n        this.breakpoint = undefined;\r\n        this.prevBreakpoint = undefined;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.ngOnInit = function () {\r\n        this.options = this.options.map(function (opt) { return new NgxGalleryOptions(opt); });\r\n        this.sortOptions();\r\n        this.setBreakpoint();\r\n        this.setOptions();\r\n        this.checkFullWidth();\r\n        if (this.currentOptions) {\r\n            this.selectedIndex = /** @type {?} */ (this.currentOptions.startIndex);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.ngDoCheck = function () {\r\n        if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\r\n            || (this.images !== this.oldImages)) {\r\n            this.oldImagesLength = this.images.length;\r\n            this.oldImages = this.images;\r\n            this.setOptions();\r\n            this.setImages();\r\n            if (this.images && this.images.length) {\r\n                this.imagesReady.emit();\r\n            }\r\n            if (this.image) {\r\n                this.image.reset(/** @type {?} */ (this.currentOptions.startIndex));\r\n            }\r\n            if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\r\n                && this.images.length <= 1) {\r\n                this.currentOptions.thumbnails = false;\r\n                this.currentOptions.imageArrows = false;\r\n            }\r\n            this.resetThumbnails();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.ngAfterViewInit = function () {\r\n        this.checkFullWidth();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.onResize = function () {\r\n        var _this = this;\r\n        this.setBreakpoint();\r\n        if (this.prevBreakpoint !== this.breakpoint) {\r\n            this.setOptions();\r\n            this.resetThumbnails();\r\n        }\r\n        if (this.currentOptions && this.currentOptions.fullWidth) {\r\n            if (this.fullWidthTimeout) {\r\n                clearTimeout(this.fullWidthTimeout);\r\n            }\r\n            this.fullWidthTimeout = setTimeout(function () {\r\n                _this.checkFullWidth();\r\n            }, 200);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getImageHeight = function () {\r\n        return (this.currentOptions && this.currentOptions.thumbnails) ?\r\n            this.currentOptions.imagePercent + '%' : '100%';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getThumbnailsHeight = function () {\r\n        if (this.currentOptions && this.currentOptions.image) {\r\n            return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\r\n                + this.currentOptions.thumbnailsMargin + 'px)';\r\n        }\r\n        else {\r\n            return '100%';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getThumbnailsMarginTop = function () {\r\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\r\n            return this.currentOptions.thumbnailsMargin + 'px';\r\n        }\r\n        else {\r\n            return '0px';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getThumbnailsMarginBottom = function () {\r\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\r\n            return this.currentOptions.thumbnailsMargin + 'px';\r\n        }\r\n        else {\r\n            return '0px';\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.openPreview = function (index) {\r\n        if (this.currentOptions.previewCustom) {\r\n            this.currentOptions.previewCustom(index);\r\n        }\r\n        else {\r\n            this.previewEnabled = true;\r\n            this.preview.open(index);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.onPreviewOpen = function () {\r\n        this.previewOpen.emit();\r\n        if (this.image && this.image.autoPlay) {\r\n            this.image.stopAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.onPreviewClose = function () {\r\n        this.previewEnabled = false;\r\n        this.previewClose.emit();\r\n        if (this.image && this.image.autoPlay) {\r\n            this.image.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.selectFromImage = function (index) {\r\n        this.select(index);\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.selectFromThumbnails = function (index) {\r\n        this.select(index);\r\n        if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\r\n            && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\r\n            this.openPreview(this.selectedIndex);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.show = function (index) {\r\n        this.select(index);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.showNext = function () {\r\n        this.image.showNext();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.showPrev = function () {\r\n        this.image.showPrev();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.canShowNext = function () {\r\n        if (this.images && this.currentOptions) {\r\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\r\n                ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.canShowPrev = function () {\r\n        if (this.images && this.currentOptions) {\r\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.previewSelect = function (index) {\r\n        this.previewChange.emit({ index: index, image: this.images[index] });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.moveThumbnailsRight = function () {\r\n        this.thubmnails.moveRight();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.moveThumbnailsLeft = function () {\r\n        this.thubmnails.moveLeft();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.canMoveThumbnailsRight = function () {\r\n        return this.thubmnails.canMoveRight();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.canMoveThumbnailsLeft = function () {\r\n        return this.thubmnails.canMoveLeft();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.resetThumbnails = function () {\r\n        if (this.thubmnails) {\r\n            this.thubmnails.reset(/** @type {?} */ (this.currentOptions.startIndex));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.select = function (index) {\r\n        this.selectedIndex = index;\r\n        this.change.emit({\r\n            index: index,\r\n            image: this.images[index]\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.checkFullWidth = function () {\r\n        if (this.currentOptions && this.currentOptions.fullWidth) {\r\n            this.width = document.body.clientWidth + 'px';\r\n            this.left = (-(document.body.clientWidth -\r\n                this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.setImages = function () {\r\n        this.smallImages = this.images.map(function (img) { /** @type {?} */ return (img.small); });\r\n        this.mediumImages = this.images.map(function (img, i) { return new NgxGalleryOrderedImage({\r\n            src: img.medium,\r\n            index: i\r\n        }); });\r\n        this.bigImages = this.images.map(function (img) { /** @type {?} */ return (img.big); });\r\n        this.descriptions = this.images.map(function (img) { /** @type {?} */ return (img.description); });\r\n        this.links = this.images.map(function (img) { /** @type {?} */ return (img.url); });\r\n        this.labels = this.images.map(function (img) { /** @type {?} */ return (img.label); });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.setBreakpoint = function () {\r\n        this.prevBreakpoint = this.breakpoint;\r\n        var /** @type {?} */ breakpoints;\r\n        if (typeof window !== 'undefined') {\r\n            breakpoints = this.options.filter(function (opt) { return opt.breakpoint >= window.innerWidth; })\r\n                .map(function (opt) { return opt.breakpoint; });\r\n        }\r\n        if (breakpoints && breakpoints.length) {\r\n            this.breakpoint = breakpoints.pop();\r\n        }\r\n        else {\r\n            this.breakpoint = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.sortOptions = function () {\r\n        this.options = this.options.filter(function (a) { return a.breakpoint === undefined; }).concat(this.options\r\n            .filter(function (a) { return a.breakpoint !== undefined; })\r\n            .sort(function (a, b) { return b.breakpoint - a.breakpoint; }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.setOptions = function () {\r\n        var _this = this;\r\n        this.currentOptions = new NgxGalleryOptions({});\r\n        this.options\r\n            .filter(function (opt) { return opt.breakpoint === undefined || opt.breakpoint >= _this.breakpoint; })\r\n            .map(function (opt) { return _this.combineOptions(_this.currentOptions, opt); });\r\n        this.width = /** @type {?} */ (this.currentOptions.width);\r\n        this.height = /** @type {?} */ (this.currentOptions.height);\r\n    };\r\n    /**\r\n     * @param {?} first\r\n     * @param {?} second\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.combineOptions = function (first, second) {\r\n        Object.keys(second).map(function (val) { return first[val] = second[val] !== undefined ? second[val] : first[val]; });\r\n    };\r\n    NgxGalleryComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery',\r\n                    template: \"\\n    <div class=\\\"ngx-gallery-layout {{currentOptions?.layout}}\\\">\\n        <ngx-gallery-image *ngIf=\\\"currentOptions?.image\\\" [style.height]=\\\"getImageHeight()\\\" [images]=\\\"mediumImages\\\" [clickable]=\\\"currentOptions?.preview\\\" [selectedIndex]=\\\"selectedIndex\\\" [arrows]=\\\"currentOptions?.imageArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.imageArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [swipe]=\\\"currentOptions?.imageSwipe\\\" [animation]=\\\"currentOptions?.imageAnimation\\\" [size]=\\\"currentOptions?.imageSize\\\" [autoPlay]=\\\"currentOptions?.imageAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.imageAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.imageAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.imageInfinityMove\\\"  [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.imageActions\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.imageDescription\\\" [bullets]=\\\"currentOptions?.imageBullets\\\" (onClick)=\\\"openPreview($event)\\\" (onActiveChange)=\\\"selectFromImage($event)\\\"></ngx-gallery-image>\\n\\n        <ngx-gallery-thumbnails *ngIf=\\\"currentOptions?.thumbnails\\\" [style.marginTop]=\\\"getThumbnailsMarginTop()\\\" [style.marginBottom]=\\\"getThumbnailsMarginBottom()\\\" [style.height]=\\\"getThumbnailsHeight()\\\" [images]=\\\"smallImages\\\" [links]=\\\"currentOptions?.thumbnailsAsLinks ? links : []\\\" [labels]=\\\"labels\\\" [linkTarget]=\\\"currentOptions?.linkTarget\\\" [selectedIndex]=\\\"selectedIndex\\\" [columns]=\\\"currentOptions?.thumbnailsColumns\\\" [rows]=\\\"currentOptions?.thumbnailsRows\\\" [margin]=\\\"currentOptions?.thumbnailMargin\\\" [arrows]=\\\"currentOptions?.thumbnailsArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.thumbnailsArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [clickable]=\\\"currentOptions?.image || currentOptions?.preview\\\" [swipe]=\\\"currentOptions?.thumbnailsSwipe\\\" [size]=\\\"currentOptions?.thumbnailSize\\\" [moveSize]=\\\"currentOptions?.thumbnailsMoveSize\\\" [order]=\\\"currentOptions?.thumbnailsOrder\\\" [remainingCount]=\\\"currentOptions?.thumbnailsRemainingCount\\\" [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.thumbnailActions\\\"  (onActiveChange)=\\\"selectFromThumbnails($event)\\\"></ngx-gallery-thumbnails>\\n\\n        <ngx-gallery-preview [images]=\\\"bigImages\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.previewDescription\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [closeIcon]=\\\"currentOptions?.closeIcon\\\" [fullscreenIcon]=\\\"currentOptions?.fullscreenIcon\\\" [spinnerIcon]=\\\"currentOptions?.spinnerIcon\\\" [arrows]=\\\"currentOptions?.previewArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.previewArrowsAutoHide\\\" [swipe]=\\\"currentOptions?.previewSwipe\\\" [fullscreen]=\\\"currentOptions?.previewFullscreen\\\" [forceFullscreen]=\\\"currentOptions?.previewForceFullscreen\\\" [closeOnClick]=\\\"currentOptions?.previewCloseOnClick\\\" [closeOnEsc]=\\\"currentOptions?.previewCloseOnEsc\\\" [keyboardNavigation]=\\\"currentOptions?.previewKeyboardNavigation\\\" [animation]=\\\"currentOptions?.previewAnimation\\\" [autoPlay]=\\\"currentOptions?.previewAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.previewAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.previewAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.previewInfinityMove\\\" [zoom]=\\\"currentOptions?.previewZoom\\\" [zoomStep]=\\\"currentOptions?.previewZoomStep\\\" [zoomMax]=\\\"currentOptions?.previewZoomMax\\\" [zoomMin]=\\\"currentOptions?.previewZoomMin\\\" [zoomInIcon]=\\\"currentOptions?.zoomInIcon\\\" [zoomOutIcon]=\\\"currentOptions?.zoomOutIcon\\\" [actions]=\\\"currentOptions?.actions\\\" [rotate]=\\\"currentOptions?.previewRotate\\\" [rotateLeftIcon]=\\\"currentOptions?.rotateLeftIcon\\\" [rotateRightIcon]=\\\"currentOptions?.rotateRightIcon\\\" [download]=\\\"currentOptions?.previewDownload\\\" [downloadIcon]=\\\"currentOptions?.downloadIcon\\\" [bullets]=\\\"currentOptions?.previewBullets\\\" (onClose)=\\\"onPreviewClose()\\\" (onOpen)=\\\"onPreviewOpen()\\\" (onActiveChange)=\\\"previewSelect($event)\\\" [class.ngx-gallery-active]=\\\"previewEnabled\\\"></ngx-gallery-preview>\\n    </div>\\n    \",\r\n                    styles: [\":host { display: inline-block; } :host > * { float: left; } :host /deep/ * { box-sizing: border-box; } :host /deep/ .ngx-gallery-icon { color: white; font-size: 25px; position: absolute; z-index: 2000; display: inline-block; } :host /deep/ .ngx-gallery-icon .ngx-gallery-icon-content { display: block; } :host /deep/ .ngx-gallery-clickable { cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper .ngx-gallery-icon { position: relative; margin-right: 5px; margin-top: 5px; font-size: 20px; cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper { float: right; } :host .ngx-gallery-layout { width: 100%; height: 100%; display: flex; flex-direction: column; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-image { order: 2; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-thumbnails { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-image { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-thumbnails { order: 2; } \"],\r\n                    providers: [NgxGalleryHelperService]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryComponent.ctorParameters = function () { return [\r\n        { type: core.ElementRef, },\r\n    ]; };\r\n    NgxGalleryComponent.propDecorators = {\r\n        'options': [{ type: core.Input },],\r\n        'images': [{ type: core.Input },],\r\n        'imagesReady': [{ type: core.Output },],\r\n        'change': [{ type: core.Output },],\r\n        'previewOpen': [{ type: core.Output },],\r\n        'previewClose': [{ type: core.Output },],\r\n        'previewChange': [{ type: core.Output },],\r\n        'preview': [{ type: core.ViewChild, args: [NgxGalleryPreviewComponent,] },],\r\n        'image': [{ type: core.ViewChild, args: [NgxGalleryImageComponent,] },],\r\n        'thubmnails': [{ type: core.ViewChild, args: [NgxGalleryThumbnailsComponent,] },],\r\n        'width': [{ type: core.HostBinding, args: ['style.width',] },],\r\n        'height': [{ type: core.HostBinding, args: ['style.height',] },],\r\n        'left': [{ type: core.HostBinding, args: ['style.left',] },],\r\n        'onResize': [{ type: core.HostListener, args: ['window:resize',] },],\r\n    };\r\n    return NgxGalleryComponent;\r\n}());\n\nvar NgxGalleryImage = /** @class */ (function () {\r\n    /**\r\n     * @param {?} obj\r\n     */\r\n    function NgxGalleryImage(obj) {\r\n        this.small = obj.small;\r\n        this.medium = obj.medium;\r\n        this.big = obj.big;\r\n        this.description = obj.description;\r\n        this.url = obj.url;\r\n        this.label = obj.label;\r\n    }\r\n    return NgxGalleryImage;\r\n}());\n\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar CustomHammerConfig = /** @class */ (function (_super) {\r\n    __extends(CustomHammerConfig, _super);\r\n    function CustomHammerConfig() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.overrides = ({\r\n            'pinch': { enable: false },\r\n            'rotate': { enable: false }\r\n        });\r\n        return _this;\r\n    }\r\n    return CustomHammerConfig;\r\n}(platformBrowser.HammerGestureConfig));\r\nvar NgxGalleryModule = /** @class */ (function () {\r\n    function NgxGalleryModule() {\r\n    }\r\n    NgxGalleryModule.decorators = [\r\n        { type: core.NgModule, args: [{\r\n                    imports: [\r\n                        common.CommonModule\r\n                    ],\r\n                    declarations: [\r\n                        NgxGalleryActionComponent,\r\n                        NgxGalleryArrowsComponent,\r\n                        NgxGalleryBulletsComponent,\r\n                        NgxGalleryImageComponent,\r\n                        NgxGalleryThumbnailsComponent,\r\n                        NgxGalleryPreviewComponent,\r\n                        NgxGalleryComponent\r\n                    ],\r\n                    exports: [\r\n                        NgxGalleryComponent\r\n                    ],\r\n                    providers: [\r\n                        { provide: platformBrowser.HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }\r\n                    ]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryModule.ctorParameters = function () { return []; };\r\n    return NgxGalleryModule;\r\n}());\n\nexports.CustomHammerConfig = CustomHammerConfig;\nexports.NgxGalleryModule = NgxGalleryModule;\nexports.NgxGalleryComponent = NgxGalleryComponent;\nexports.NgxGalleryActionComponent = NgxGalleryActionComponent;\nexports.NgxGalleryImageComponent = NgxGalleryImageComponent;\nexports.NgxGalleryThumbnailsComponent = NgxGalleryThumbnailsComponent;\nexports.NgxGalleryPreviewComponent = NgxGalleryPreviewComponent;\nexports.NgxGalleryArrowsComponent = NgxGalleryArrowsComponent;\nexports.NgxGalleryBulletsComponent = NgxGalleryBulletsComponent;\nexports.NgxGalleryOptions = NgxGalleryOptions;\nexports.NgxGalleryImage = NgxGalleryImage;\nexports.NgxGalleryAnimation = NgxGalleryAnimation;\nexports.NgxGalleryHelperService = NgxGalleryHelperService;\nexports.NgxGalleryImageSize = NgxGalleryImageSize;\nexports.NgxGalleryLayout = NgxGalleryLayout;\nexports.NgxGalleryOrder = NgxGalleryOrder;\nexports.NgxGalleryOrderedImage = NgxGalleryOrderedImage;\nexports.NgxGalleryAction = NgxGalleryAction;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"script"}